<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>NationalInstruments.UI</name>
  </assembly>
  <members>
    <member name="T:NationalInstruments.UI.ILegendItemSource">
      <summary>
            Defines an interface for objects that can be displayed in a legend control.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.ILegendItemSource.DrawLegendItem(NationalInstruments.UI.ComponentDrawArgs)">
      <summary>
            Draws the symbol of a legend item.
            </summary>
      <param name="args">
            A NationalInstruments.UI.ComponentDrawArgs that contains the graphics surface to
            draw the legend item on and the bounds in which to draw the legend item.
            </param>
    </member>
    <member name="E:NationalInstruments.UI.ILegendItemSource.LegendItemChanged">
      <summary>
            Occurs when the NationalInstruments.UI.ILegendItemSource has changed such
            that its appearance in a legend control must be updated.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.ILegendItemSource.Disposed">
      <summary>
            Occurs when the NationalInstruments.UI.ILegendItemSource has been disposed.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.AfterChangeNumericValueEventArgs">
      <summary>
            Provides data for the NationalInstruments.UI.INumericControl.AfterChangeValue event.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.ActionEventArgs">
      <summary>
            Provides data for events that occur from interactive or programmatic user actions.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.ActionEventArgs.#ctor(NationalInstruments.UI.Action)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.ActionEventArgs  class
            with the specified action.
            </summary>
      <param name="action">
            The NationalInstruments.UI.Action that caused the event.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.ActionEventArgs.Action">
      <summary>
            Gets the action that caused the event.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.AfterChangeNumericValueEventArgs.#ctor(System.Double,System.Double,NationalInstruments.UI.Action)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.AfterChangeNumericValueEventArgs class.
            </summary>
      <param name="oldValue">The value before the event occurs.
            </param>
      <param name="newValue">The value after the event occurs.
            </param>
      <param name="action">The NationalInstruments.UI.Action that caused the event.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.AfterChangeNumericValueEventArgs.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.AfterChangeNumericValueEventArgs.OldValue">
      <summary>
            Gets the value before the event occurs.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AfterChangeNumericValueEventArgs.NewValue">
      <summary>
            Gets the value after the event occurs.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.BeforeChangeNumericValueEventArgs">
      <summary>
            Provides data for the NationalInstruments.UI.INumericControl.BeforeChangeValue event.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.ActionCancelEventArgs">
      <summary>
            Provides data for events that occur from interactive or programmatic user action.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.ActionCancelEventArgs.#ctor(NationalInstruments.UI.Action,System.Boolean)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.ActionCancelEventArgs class
            with the specified action.
            </summary>
      <param name="action">
            The source of the NationalInstruments.UI.Action that caused the event.
            </param>
      <param name="cancel">true to cancel the event.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.ActionCancelEventArgs.Action">
      <summary>
            Gets the source of the action that caused the event.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.BeforeChangeNumericValueEventArgs.#ctor(System.Double,System.Double,NationalInstruments.UI.Action,System.Boolean)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.BeforeChangeNumericValueEventArgs class.
            </summary>
      <param name="oldValue">The value before the event occurs.
            </param>
      <param name="newValue">The value after the event occurs.
            </param>
      <param name="action">The NationalInstruments.UI.Action that caused the event.
            </param>
      <param name="cancel">true to cancel the event.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.BeforeChangeNumericValueEventArgs.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.BeforeChangeNumericValueEventArgs.OldValue">
      <summary>
            Gets the value before the event occurs.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeChangeNumericValueEventArgs.NewValue">
      <summary>
            Gets the value after the event occurs.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.DrawArgs">
      <summary>
            Defines the base class for classes that contain drawing data.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.DrawArgs.#ctor(System.Drawing.Graphics)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.DrawArgs
            class using the specified graphics.
            </summary>
      <param name="graphics">
            The System.Drawing.Graphics with which to draw.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.DrawArgs.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.DrawArgs.Graphics">
      <summary>
            Gets the graphics with which to draw.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.Action">
      <summary>
            Specifies the interactive or programmatic user actions that cause an event.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.Action.ByKeyboard">
      <summary>
            The action was caused by a keystroke.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.Action.ByMouse">
      <summary>
            The action was caused by a mouse operation.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.Action.Programmatic">
      <summary>
            The action was caused by a programmatic modification.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.ActionCancelEventHandler">
      <summary>
            Represents the method that handles events that occur from interactive or programmatic user action.
            </summary>
      <param name="sender">
            The source of the event.
            </param>
      <param name="e">
            An NationalInstruments.UI.ActionCancelEventArgs that contains the event data.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.ActionEventHandler">
      <summary>
            Represents the method that handles events that occur from an interactive or programmatic user actions.
            </summary>
      <param name="sender">
            The source of the event.
            </param>
      <param name="e">
            An NationalInstruments.UI.ActionEventArgs that contains the event data.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.AfterChangeNumericValueEventHandler">
      <summary>
            Represents the method that handles the NationalInstruments.UI.INumericControl.AfterChangeValue
            event.
            </summary>
      <param name="sender">
            The source of the event.
            </param>
      <param name="e">
            An NationalInstruments.UI.AfterChangeNumericValueEventArgs that contains
            the event data.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.AfterDragXYAnnotationCaptionEventArgs">
      <summary>
            Provides data for the events that occur after the annotation caption has been dragged.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.AfterDragXYAnnotationCaptionEventArgs.#ctor(NationalInstruments.UI.XYAnnotation,System.Single,System.Single,NationalInstruments.UI.Action)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.AfterDragXYAnnotationCaptionEventArgs
            class with the specified annotation, x offset, y offset, and action that caused the event. 
            </summary>
      <param name="annotation">
            The NationalInstruments.UI.XYAnnotation for which the event is occurring.
            </param>
      <param name="xOffset">
            The x offset where the caption was dragged to.
            </param>
      <param name="yOffset">
            The y offset where the caption was dragged to.
            </param>
      <param name="action">
            The source of the NationalInstruments.UI.Action that caused the event.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.AfterDragXYAnnotationCaptionEventArgs.Annotation">
      <summary>
            Gets the NationalInstruments.UI.XYAnnotation whose caption was dragged. 
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AfterDragXYAnnotationCaptionEventArgs.XOffset">
      <summary>
            The x offset where the caption was dragged to.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AfterDragXYAnnotationCaptionEventArgs.YOffset">
      <summary>
            The y offset where the caption was dragged to.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.AfterDragXYAnnotationCaptionEventHandler">
      <summary>
            Represents the method that handles the events that occur after an annotation caption is dragged.
            </summary>
      <param name="sender">
            The source of the event.
            </param>
      <param name="e">
            An NationalInstruments.UI.AfterDragXYAnnotationCaptionEventArgs that contains the event data.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.AfterDrawCaptionEventArgs">
      <summary>
            Provides data for the NationalInstruments.UI.IControlBase.AfterDrawCaption event.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.AfterDrawEventArgs">
      <summary>
            Provides data for custom draw events that occur after a control or control sub-object is drawn.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.AfterDrawEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.AfterDrawEventArgs class with
            the specified graphics and bounds.
            </summary>
      <param name="graphics">
            The System.Drawing.Graphics used to draw the item.
            </param>
      <param name="bounds">
            The System.Drawing.Rectangle that represents that bounds in which to draw.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.AfterDrawEventArgs.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawEventArgs.Graphics">
      <summary>
            Gets the graphics used to draw the item.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawEventArgs.Bounds">
      <summary>
            Gets the rectangle in which to draw.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.AfterDrawCaptionEventArgs.#ctor(System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,NationalInstruments.UI.CaptionPosition,System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.AfterDrawCaptionEventArgs
            class with the specified caption and the background color, foreground color, font, and position of
            the caption along with the graphics and bounds.
            </summary>
      <param name="caption">
            A System.String that represent the caption text that has been drawn.
            </param>
      <param name="backColor">
            The background System.Drawing.Color of the caption that has been drawn.
            </param>
      <param name="foreColor">
            The foreground System.Drawing.Color of the caption that has been drawn.
            </param>
      <param name="font">
            The System.Drawing.Font of the caption that has been drawn.
            </param>
      <param name="position">
            The NationalInstruments.UI.CaptionPosition of the caption that has been drawn.
            </param>
      <param name="graphics">
            The System.Drawing.Graphics used to draw the caption.
            </param>
      <param name="bounds">
            The System.Drawing.Rectangle that represents the bounds in which to draw.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.AfterDrawCaptionEventArgs.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawCaptionEventArgs.Caption">
      <summary>
            Gets the caption text that has been drawn.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawCaptionEventArgs.BackColor">
      <summary>
            Gets the background color of the caption that has been drawn.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawCaptionEventArgs.ForeColor">
      <summary>
            Gets the foreground color of the caption that has been drawn.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawCaptionEventArgs.Font">
      <summary>
            Gets the font of the caption that has been drawn.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawCaptionEventArgs.Position">
      <summary>
            Gets the position of the caption that has been drawn.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.AfterDrawCaptionEventHandler">
      <summary>
            Represents the method that handles the NationalInstruments.UI.IControlBase.AfterDrawCaption
            event.
            </summary>
      <param name="sender">
            The source of the event.
            </param>
      <param name="e">
            An NationalInstruments.UI.AfterDrawCaptionEventArgs that contains the event data.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.AfterDrawEventHandler">
      <summary>
            Represents the method that handles custom draw events that occur after a control or control sub-object is drawn.
            </summary>
      <param name="sender">
            The source of the event.
            </param>
      <param name="e">
            An NationalInstruments.UI.AfterDrawEventArgs that contains the event data.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.AfterDrawLegendItemEventArgs">
      <summary>
            Provides data for the NationalInstruments.UI.ILegend.AfterDrawItem event.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.AfterDrawLegendItemEventArgs.#ctor(NationalInstruments.UI.LegendItem,System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.AfterDrawLegendItemEventArgs
            class with the specified legend item, graphics, and bounds.
            </summary>
      <param name="item">
            The NationalInstruments.UI.LegendItem for which the event is occurring.
            </param>
      <param name="graphics">
            The System.Drawing.Graphics used to draw the item.
            </param>
      <param name="bounds">
            The System.Drawing.Rectangle that represents the bounds in which to draw.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.AfterDrawLegendItemEventArgs.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawLegendItemEventArgs.Item">
      <summary>
            Gets the NationalInstruments.UI.LegendItem that has been drawn.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawLegendItemEventArgs.ItemBounds">
      <summary>
            Gets the bounds of the legend item.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.AfterDrawLegendItemEventHandler">
      <summary>
            Represents the method that handles the NationalInstruments.UI.ILegend.AfterDrawItem
            event.
            </summary>
      <param name="sender">
            The source of the event.
            </param>
      <param name="e">
            An NationalInstruments.UI.AfterDrawLegendItemEventArgs that contains the event data.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.AfterDrawXYCursorEventArgs">
      <summary>
            Provides data for events that occur after the cursor draws.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.AfterDrawXYCursorEventArgs.#ctor(NationalInstruments.UI.XYCursor,System.Drawing.Rectangle,System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            Initializes a new instance of NationalInstruments.UI.AfterDrawXYCursorEventArgs with the specified cursor, point bounds,
            graphics, and bounds.
            </summary>
      <param name="cursor">
            The NationalInstruments.UI.XYCursor for which the event is occurring.
            </param>
      <param name="pointBounds">
            The System.Drawing.Rectangle that represents the bounds of the cursor point.
            </param>
      <param name="graphics">
            The System.Drawing.Graphics used to draw the item.
            </param>
      <param name="bounds">
            The System.Drawing.Rectangle that represents the bounds in which to draw.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.AfterDrawXYCursorEventArgs.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawXYCursorEventArgs.Cursor">
      <summary>
            Gets the NationalInstruments.UI.XYCursor that has been drawn.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawXYCursorEventArgs.PointBounds">
      <summary>
            Gets the bounds of the cursor point.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.AfterDrawXYCursorEventHandler">
      <summary>
            Represents the method that handles the events that occur after a cursor draws.
            </summary>
      <param name="sender">
            The source of the event.
            </param>
      <param name="e">
            An NationalInstruments.UI.AfterDrawXYCursorEventArgs that contains the event data.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.AfterDrawXYPlotEventArgs">
      <summary>
            Provides data for the NationalInstruments.UI.IXYGraph.AfterDrawPlot event.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.AfterDrawXYPlotEventArgs.#ctor(NationalInstruments.UI.XYPlot,System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.AfterDrawXYPlotEventArgs
            class with the specified plot, graphics, and bounds.
            </summary>
      <param name="plot">
            The NationalInstruments.UI.XYPlot for which the event is occurring.
            </param>
      <param name="graphics">
            The System.Drawing.Graphics used to draw the item.
            </param>
      <param name="bounds">
            The System.Drawing.Rectangle that represents the bounds in which to draw.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.AfterDrawXYPlotEventArgs.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawXYPlotEventArgs.Plot">
      <summary>
            Gets the NationalInstruments.UI.XYPlot that has been drawn.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.AfterDrawXYPlotEventHandler">
      <summary>
            Represents the method that handles the NationalInstruments.UI.IXYGraph.AfterDrawPlot
            event.
            </summary>
      <param name="sender">
            The source of the event.
            </param>
      <param name="e">
            An NationalInstruments.UI.AfterDrawXYPlotEventArgs that contains the event data.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.AfterDrawXYPointAnnotationEventArgs">
      <summary>
            Provides data for events that occur after the point annotation draws.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.AfterDrawXYPointAnnotationEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,NationalInstruments.UI.XYPointAnnotation,NationalInstruments.UI.XYPointAnnotationPart,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Size,System.Single,System.Drawing.PointF,System.Drawing.Size,System.Drawing.PointF[])">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.AfterDrawXYPointAnnotationEventArgs class with the specified graphics, bounds, 
            annotation, annotation part, arrow head point, arrow tail point, caption point, caption size, caption angle, 
            shape point, shape size, and shape points.
            </summary>
      <param name="graphics">
            The System.Drawing.Graphics used to draw the item.
            </param>
      <param name="bounds">
            The System.Drawing.Rectangle that represents the bounds in which to draw.
            </param>
      <param name="annotation">
            The NationalInstruments.UI.XYPointAnnotation for which the event is occurring.
            </param>
      <param name="annotationPart">
            The NationalInstruments.UI.XYPointAnnotationPart of the annotation that was drawn.
            </param>
      <param name="arrowHeadPoint">
            The System.Drawing.Point at which the arrow head was drawn.
            </param>
      <param name="arrowTailPoint">
            The System.Drawing.Point where the arrow tail is located.
            </param>
      <param name="captionPoint">
            The System.Drawing.Point at which the caption was drawn.
            </param>
      <param name="captionSize">
            The System.Drawing.Size of the System.Drawing.Rectangle in which to draw the caption.
            </param>
      <param name="captionAngle">
            The angle at which to draw the caption.
            </param>
      <param name="shapePoint">
            The System.Drawing.Point at which the shape was drawn.
            </param>
      <param name="shapeSize">
            The System.Drawing.Size of the shape that was drawn.
            </param>
      <param name="shapePoints">
            The System.Drawing.Point array that defines the shape that was drawn.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawXYPointAnnotationEventArgs.Annotation">
      <summary>
            Gets the NationalInstruments.UI.XYPointAnnotation that was drawn.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawXYPointAnnotationEventArgs.Part">
      <summary>
            Gets the part of the annotation that was drawn.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawXYPointAnnotationEventArgs.CaptionSize">
      <summary>
            Gets the size of the rectangle in which the caption was drawn.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawXYPointAnnotationEventArgs.CaptionAngle">
      <summary>
            Gets the angle at which the caption was drawn.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawXYPointAnnotationEventArgs.ShapePoint">
      <summary>
            Gets the point at which the shape was drawn.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawXYPointAnnotationEventArgs.ShapeSize">
      <summary>
            Gets the size of the shape that was drawn.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawXYPointAnnotationEventArgs.ArrowHeadPoint">
      <summary>
            Gets the point at which the arrow head was drawn.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawXYPointAnnotationEventArgs.ArrowTailPoint">
      <summary>
            Gets the point at which the arrow tail is located.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawXYPointAnnotationEventArgs.CaptionPoint">
      <summary>
            Gets the point at which the caption was drawn.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawXYPointAnnotationEventArgs.ShapePoints">
      <summary>
            Gets the array of points used to define the shape that was drawn.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.AfterDrawXYPointAnnotationEventHandler">
      <summary>
            Represents the method that handles the events that occur after a point annotation draws.
            </summary>
      <param name="sender">
            The source of the event.
            </param>
      <param name="e">
            An NationalInstruments.UI.AfterDrawXYPointAnnotationEventArgs that contains the event data.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.AfterDrawXYRangeAnnotationEventArgs">
      <summary>
            Provides data for events that occur after the range annotation draws.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.AfterDrawXYRangeAnnotationEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,NationalInstruments.UI.XYRangeAnnotation,NationalInstruments.UI.XYRangeAnnotationPart,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Size,System.Single)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.AfterDrawXYRangeAnnotationEventArgs class with the specified graphics, bounds, 
            annotation, annotation part, arrow head point, arrow tail point, caption point, caption size, and caption angle.
            </summary>
      <param name="graphics">
            The System.Drawing.Graphics used to draw the item.
            </param>
      <param name="bounds">
            The System.Drawing.Rectangle that represents the bounds in which to draw.
            </param>
      <param name="annotation">
            The NationalInstruments.UI.XYRangeAnnotation for which the event is occurring.
            </param>
      <param name="annotationPart">
            The NationalInstruments.UI.XYRangeAnnotationPart of the annotation that was drawn.
            </param>
      <param name="arrowHeadPoint">
            The System.Drawing.Point at which the arrow head was drawn.
            </param>
      <param name="arrowTailPoint">
            The System.Drawing.Point where the arrow tail is located.
            </param>
      <param name="captionPoint">
            The System.Drawing.Point at which the caption was drawn.
            </param>
      <param name="captionSize">
            The System.Drawing.Size of the System.Drawing.Rectangle in which to draw the caption.
            </param>
      <param name="captionAngle">
            The angle at which to draw the caption.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawXYRangeAnnotationEventArgs.Annotation">
      <summary>
            Gets the NationalInstruments.UI.XYRangeAnnotation that was drawn.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawXYRangeAnnotationEventArgs.Part">
      <summary>
            Gets the part of the annotation that was drawn.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawXYRangeAnnotationEventArgs.ArrowHeadPoint">
      <summary>
            Gets the point at which the arrow head was drawn.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawXYRangeAnnotationEventArgs.ArrowTailPoint">
      <summary>
            Gets the point at which the arrow tail is located.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawXYRangeAnnotationEventArgs.CaptionPoint">
      <summary>
            Gets the point at which the caption was drawn.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawXYRangeAnnotationEventArgs.CaptionSize">
      <summary>
            Gets the size of the rectangle in which the caption was drawn.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AfterDrawXYRangeAnnotationEventArgs.CaptionAngle">
      <summary>
            Gets the angle at which the caption was drawn.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.AfterDrawXYRangeAnnotationEventHandler">
      <summary>
            Represents the method that handles the events that occur after a range annotation draws.
            </summary>
      <param name="sender">
            The source of the event.
            </param>
      <param name="e">
            An NationalInstruments.UI.AfterDrawXYRangeAnnotationEventArgs that contains the event data.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.AfterMoveXYCursorEventArgs">
      <summary>
            Provides data for the events that occur after the cursor moves.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.AfterMoveXYCursorEventArgs.#ctor(NationalInstruments.UI.XYCursor,System.Double,System.Double,NationalInstruments.UI.Action)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.AfterMoveXYCursorEventArgs
            class with the specified cursor, the specified x coordinate and y coordinate of the
            NationalInstruments.UI.XYCursor, and the action that caused the event. 
            </summary>
      <param name="cursor">
            The NationalInstruments.UI.XYCursor for which the event is occurring.
            </param>
      <param name="xPosition">
            The x coordinate of the NationalInstruments.UI.XYCursor.
            </param>
      <param name="yPosition">
            The y coordinate of the NationalInstruments.UI.XYCursor.
            </param>
      <param name="action">
            The source of the NationalInstruments.UI.Action that caused the event.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.AfterMoveXYCursorEventArgs.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.AfterMoveXYCursorEventArgs.Cursor">
      <summary>
            Gets the NationalInstruments.UI.XYCursor that has moved. 
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AfterMoveXYCursorEventArgs.XPosition">
      <summary>
            Gets the new x coordinate of the
            NationalInstruments.UI.XYCursor.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AfterMoveXYCursorEventArgs.YPosition">
      <summary>
            Gets the new y coordinate of the
            NationalInstruments.UI.XYCursor.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.AfterMoveXYCursorEventHandler">
      <summary>
            Represents the method that handles the events that occur after a cursor moves.
            </summary>
      <param name="sender">
            The source of the event.
            </param>
      <param name="e">
            An NationalInstruments.UI.AfterMoveXYCursorEventArgs that contains the event data.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.Alignment">
      <summary>Provides an abstract base class for aligning items.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.Alignment.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.Alignment class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.Alignment.AdjustPosition(System.Object,NationalInstruments.UI.AlignmentArgs)">
      <summary>
            Adjusts the position of an item.
            </summary>
      <param name="context">
            The object that specifies the context in which NationalInstruments.UI.Alignment.AdjustPosition(System.Object,NationalInstruments.UI.AlignmentArgs) is called.
            </param>
      <param name="args">
            An NationalInstruments.UI.AlignmentArgs that contains the 
            alignment data.
            </param>
      <returns>
            The adjusted location of the specified item.
            </returns>
    </member>
    <member name="T:NationalInstruments.UI.AlignmentArgs">
      <summary>
            Provides the information needed to align items.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.AlignmentArgs.#ctor(System.Drawing.Rectangle,System.Drawing.PointF,System.Drawing.SizeF,System.Single,System.Single)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.AlignmentArgs class with the 
            specified context bounds, item position, item size, x offset, and y offset.
            </summary>
      <param name="contextBounds">
            The bounding context rectangle in which the item is aligned.
            </param>
      <param name="referencePoint">
            The position used in the NationalInstruments.UI.Alignment.AdjustPosition(System.Object,NationalInstruments.UI.AlignmentArgs) method.
            </param>
      <param name="itemSize">
            The System.Drawing.Size of the item being aligned.
            </param>
      <param name="xOffset">
            The additional spacing to apply in the X direction.
            </param>
      <param name="yOffset">
            The additional spacing to apply in the Y direction.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.AlignmentArgs.ContextBounds">
      <summary>
            Gets the bounding context rectangle in which the item is aligned.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AlignmentArgs.ReferencePoint">
      <summary>
            Gets the reference point.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AlignmentArgs.ItemSize">
      <summary>
            Gets the size of the item to align.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AlignmentArgs.XOffset">
      <summary>
            Gets the spacing to apply in the X direction.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AlignmentArgs.YOffset">
      <summary>
            Gets the spacing to apply in the Y direction.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.Annotation">
      <summary>
            Provides an abstract base class for an annotation.  
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.ControlEntity">
      <summary>
            Defines the base class for components that behave as sub-objects of a control.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.ControlEntity.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.ControlEntity class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.ControlEntity.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the NationalInstruments.UI.ControlEntity 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.ControlEntity.GetBounds">
      <summary>
            Gets the rectangle that represents the bounds of the component. 
            </summary>
      <returns>
            A System.Drawing.Rectangle that represents the bounds of the component.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.ControlEntity.GetSize">
      <summary>
            Gets a size that represents the width and height of the component.
            </summary>
      <returns>
            A System.Drawing.Size that represents the width and height of the component.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.ControlEntity.Draw(NationalInstruments.UI.ComponentDrawArgs)">
      <summary>
            Draws the component with the specified NationalInstruments.UI.ComponentDrawArgs.
            </summary>
      <param name="args">
            A NationalInstruments.UI.ComponentDrawArgs that contains the 
            drawing data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.ControlEntity.OnOwnerChanged(System.EventArgs)">
      <summary>
            Raises the NationalInstruments.UI.ControlEntity.OwnerChanged event.
            </summary>
      <param name="e">
            An System.EventArgs that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.ControlEntity.Invalidate">
      <summary>
            Invalidates the NationalInstruments.UI.ControlEntity.Owner and causes it to redraw.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ControlEntity.Owner">
      <summary>
            Gets the control that this NationalInstruments.UI.ControlEntity belongs to.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ControlEntity.Tag">
      <summary>
            Gets or sets an object that contains data about the component.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ControlEntity.SynchronizingObject">
      <summary>
            Gets or sets the object that marshals calls to event handlers and callbacks. 
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ControlEntity.Visible">
      <summary>
            Gets or sets a value indicating if the component is displayed.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.ControlEntity.OwnerChanged">
      <summary>
            Occurs when the value of NationalInstruments.UI.ControlEntity.Owner 
            changes.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.Annotation.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.Annotation class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.Annotation.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.Annotation.GetService(System.Type)">
      <summary>
            Gets the service object of the specified type.
            </summary>
      <param name="service">
            A service provided by the component.
            </param>
      <returns>
            An System.Object that represents the service provided by the component or 
            null if the component does not provide the 
            specified service.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.Annotation.ArrowColor">
      <summary>
            Gets or sets the color of the arrow.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Annotation.ArrowHeadSize">
      <summary>
            Gets or sets the size of the arrow head.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Annotation.ArrowHeadStyle">
      <summary>
            Gets or sets the style of the arrow head.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Annotation.ArrowLineStyle">
      <summary>
            Gets or sets the style of the arrow line.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Annotation.ArrowLineWidth">
      <summary>
            Gets or sets the width of the arrow line.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Annotation.ArrowTailAlignment">
      <summary>
            Gets or sets the alignment of the arrow tail around the annotation caption.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Annotation.ArrowTailSize">
      <summary>
            Gets or sets the size of the arrow tail.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Annotation.ArrowTailStyle">
      <summary>
            Gets or sets the style of the arrow tail.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Annotation.ArrowVisible">
      <summary>
            Gets or sets a value indicating if the arrow is visible.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Annotation.ArrowZOrder">
      <summary>
            Gets or sets a value indicating if the arrow is drawn above or below all plots.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Annotation.Caption">
      <summary>
            Gets or sets the text of the caption that is displayed by the annotation.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Annotation.CaptionAlignment">
      <summary>
            Gets or sets the alignment of the annotation caption in relation to the annotation or plot area boundary.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Annotation.CaptionAngle">
      <summary>
            Gets or sets the angle at which the caption text is drawn.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Annotation.CaptionBackColor">
      <summary>
            Gets or sets the background color of the caption that is displayed by the annotation.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Annotation.CaptionFont">
      <summary>
            Gets or sets the font of the caption that is displayed by the annotation.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Annotation.CaptionForeColor">
      <summary>
            Gets or sets the foreground color of the caption that is displayed by the annotation.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Annotation.CaptionZOrder">
      <summary>
            Gets or sets a value indicating if the caption that is displayed by the annotation is drawn above or below all plots.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Annotation.InteractionMode">
      <summary>
            Gets or sets a value indicating if the annotation caption can be interactively moved at application run time.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.AnnotationCaptionAlignment">
      <summary>
            Provides a class for aligning an annotation caption in relation to the annotation or plot area bounds.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.AnnotationCaptionAlignment.#ctor(NationalInstruments.UI.BoundsAlignment,System.Single,System.Single)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.AnnotationCaptionAlignment class
            with the specified alignment, x offset and y offset values.
            </summary>
      <param name="alignment">
            The NationalInstruments.UI.BoundsAlignment used to determine the location of the annotation caption in relation to graph plot area bounds.
            </param>
      <param name="xOffset">
            The x offset of the caption in relation to the location specified by the NationalInstruments.UI.AnnotationCaptionAlignment.Alignment property.
            </param>
      <param name="yOffset">
            The y offset of the caption in relation to the location specified by the NationalInstruments.UI.AnnotationCaptionAlignment.Alignment property.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.AnnotationCaptionAlignment.Alignment">
      <summary>
            Gets the alignment used to determine the location of the annotation caption in relation to the graph plot area bounds.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AnnotationCaptionAlignment.XOffset">
      <summary>
            Gets the x offset of the caption in relation to the location specified by the NationalInstruments.UI.AnnotationCaptionAlignment.Alignment property.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AnnotationCaptionAlignment.YOffset">
      <summary>
            Gets the y offset of the caption in relation to the location specified by the NationalInstruments.UI.AnnotationCaptionAlignment.Alignment property.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.AnnotationInteractionMode">
      <summary>
            Defines the set of user interactions that are possible within an annotation.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.AnnotationInteractionMode.None">
      <summary>
            No interaction.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.AnnotationInteractionMode.DragCaption">
      <summary>
            The caption of the annotation can be dragged.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.AnnotationZOrder">
      <summary>
            Specifies if an annotation part is drawn above or below all plots.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.AnnotationZOrder.AbovePlot">
      <summary>
            The annotation part is drawn above all plots.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.AnnotationZOrder.BelowPlot">
      <summary>
            The annotation part is drawn below all plots.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.Arc">
      <summary>
            Contains a NationalInstruments.UI.Arc.StartAngle and NationalInstruments.UI.Arc.SweepAngle that represent an arc.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.Arc.#ctor(System.Single,System.Single)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.Arc class
            with the specified start angle and sweep angle.
            </summary>
      <param name="startAngle">
            Angle in degrees measured counter clockwise from the horizontal axis to the starting point of the arc.
            </param>
      <param name="sweepAngle">
            Angle in degrees measured clockwise or counter clockwise from the <paramref name="startAngle"></paramref> parameter to the ending
            point of the arc.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.Arc.Invert">
      <summary>
            Inverts an arc by changing the NationalInstruments.UI.Arc.StartAngle and NationalInstruments.UI.Arc.SweepAngle while maintaining the arc.
            </summary>
      <returns>
            The inverted NationalInstruments.UI.Arc.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.Arc.Contains(System.Single)">
      <summary>
            Determines if the arc contains the angle.
            </summary>
      <param name="angle">
            The angle measured in degrees.
            </param>
      <returns>true if the arc contains the <paramref name="angle"></paramref>.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.Arc.GetCircumference(System.Single)">
      <summary>
            Gets the circumference of the arc given a specified radius.
            </summary>
      <param name="radius">
            The radius of the arc.
            </param>
      <returns>
            The circumference of the arc given a specified radius.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.Arc.GetHashCode">
      <summary>
            Returns a hash code for this object.
            </summary>
      <returns>
            A 32-bit signed integer hash code.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.Arc.Equals(System.Object)">
      <summary>
            Returns a value indicating if this instance is equal to the specified NationalInstruments.UI.Arc.
            </summary>
      <param name="obj">
            The NationalInstruments.UI.Arc to compare with this
            instance.
            </param>
      <returns>true if <paramref name="obj"></paramref> is an NationalInstruments.UI.Arc that is equal 
            to this instance.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.Arc.Equals(NationalInstruments.UI.Arc)">
      <summary>
            Returns a value indicating if this instance is equal to the specified NationalInstruments.UI.Arc.
            </summary>
      <param name="arc">
            An NationalInstruments.UI.Arc to compare with this instance.
            </param>
      <returns>true if <paramref name="arc"></paramref> is an NationalInstruments.UI.Arc that is equal 
            to this instance.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.Arc.op_Equality(NationalInstruments.UI.Arc,NationalInstruments.UI.Arc)">
      <summary>
            Returns if two NationalInstruments.UI.Arc objects are equal.
            </summary>
      <param name="arc1">
            An NationalInstruments.UI.Arc.
            </param>
      <param name="arc2">
            An NationalInstruments.UI.Arc.
            </param>
      <returns>true if the values of <paramref name="arc1"></paramref> and <paramref name="arc2"></paramref> are equal. 
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.Arc.op_Inequality(NationalInstruments.UI.Arc,NationalInstruments.UI.Arc)">
      <summary>
            Returns if two NationalInstruments.UI.Arc objects are 
            not equal.
            </summary>
      <param name="arc1">
            An NationalInstruments.UI.Arc.
            </param>
      <param name="arc2">
            An NationalInstruments.UI.Arc.
            </param>
      <returns>true if the values of <paramref name="arc1"></paramref> and <paramref name="arc2"></paramref> are not equal. 
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.Arc.Parse(System.String)">
      <summary>
            Converts a string representation of an arc to an NationalInstruments.UI.Arc.
            </summary>
      <param name="value">
            A string containing the arc to convert.
            </param>
      <returns>
            An NationalInstruments.UI.Arc representing the arc specified in <paramref name="value"></paramref>.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.Arc.Clone">
      <summary>
            Creates a new object that is a copy of this instance.
            </summary>
      <returns>
            A new object that is a copy of this instance.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.Arc.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.Arc.StartAngle">
      <summary>
            Gets the start angle of the arc in degrees.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Arc.SweepAngle">
      <summary>
            Gets the sweep angle of the arc in degrees.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.ArrowHeadPosition">
      <summary>
            Specifies the position of the arrow head.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.ArrowHeadPosition.XYPosition">
      <summary>
            The arrow head is at the x and y positions of the annotation.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.ArrowHeadPosition.ShapeBounds">
      <summary>
            The arrow head is on the boundary of the annotation shape.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.ArrowStyle">
      <summary>
            Provides an abstract base class for specifying an arrow style. 
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.ArrowStyle.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.ArrowStyle class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.ArrowStyle.Draw(System.Object,NationalInstruments.UI.ArrowStyleDrawArgs)">
      <summary>
            Draws an arrow with the specified NationalInstruments.UI.ArrowStyleDrawArgs.
            </summary>
      <param name="context">
            The object that specifies the context in which NationalInstruments.UI.ArrowStyle.Draw(System.Object,NationalInstruments.UI.ArrowStyleDrawArgs) is called.
            </param>
      <param name="args">
            An NationalInstruments.UI.ArrowStyleDrawArgs that contains the 
            drawing data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.ArrowStyle.GetArrowLinePoint(System.Drawing.PointF,System.Drawing.Size)">
      <summary>
            Specifies the point at which the arrow line starts within the bounds of the the arrow style.
            </summary>
      <param name="point">
            A System.Drawing.PointF that specifies the point at which the arrow style is drawn.
            </param>
      <param name="size">
            The System.Drawing.Size of the arrow style.
            </param>
      <returns>
            The System.Drawing.Point at which the arrow line starts drawing.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.ArrowStyle.Draw(System.Object,NationalInstruments.UI.ArrowStyleDrawArgs,System.Single)">
      <summary>
            Draws an arrow with the specified NationalInstruments.UI.ArrowStyleDrawArgs at the rotation angle.
            </summary>
      <param name="context">
            The object that specifies the context in which NationalInstruments.UI.ArrowStyle.Draw(System.Object,NationalInstruments.UI.ArrowStyleDrawArgs) is called.
            </param>
      <param name="args">
            An NationalInstruments.UI.ArrowStyleDrawArgs that contains the 
            drawing data.
            </param>
      <param name="angle">
            The angle or rotation to draw the arrow.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.ArrowStyle.UnderlyingType">
      <summary>
            Gets the underlying type of an enum object value.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ArrowStyle.None">
      <summary>
            Gets a value indicating that there is no arrow.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ArrowStyle.Open">
      <summary>
            Gets an arrow with an open arrow style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ArrowStyle.SolidDiamond">
      <summary>
            Gets an arrow with a solid diamond arrow style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ArrowStyle.SolidRectangle">
      <summary>
            Gets an arrow with a solid rectangle arrow style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ArrowStyle.SolidRound">
      <summary>
            Gets an arrow with a solid, round arrow style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ArrowStyle.SolidTriangle">
      <summary>
            Gets an arrow with a solid triangle arrow style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ArrowStyle.SolidStealth">
      <summary>
            Gets an arrow with a solid stealth arrow style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ArrowStyle.EmptyDiamond">
      <summary>
            Gets an arrow with an empty diamond arrow style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ArrowStyle.EmptyRectangle">
      <summary>
            Gets an arrow with an empty rectangle arrow style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ArrowStyle.EmptyRound">
      <summary>
            Gets an arrow with an empty round arrow style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ArrowStyle.EmptyTriangle">
      <summary>
            Gets an arrow with an empty triangle arrow style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ArrowStyle.EmptyStealth">
      <summary>
            Gets an arrow with an empty stealth style.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.ArrowStyleDrawArgs">
      <summary>
            Provides data for drawing arrow styles.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.ArrowStyleDrawArgs.#ctor(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Size,System.Drawing.PointF,System.Single)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.ArrowStyleDrawArgs class
            with the specified color, line width, point, and size.
            </summary>
      <param name="graphics">
            The System.Drawing.Graphics used to draw the arrow.
            </param>
      <param name="color">
            The System.Drawing.Color of the arrow.
            </param>
      <param name="lineWidth">
            The System.Drawing.Size.Width of the arrow line.
            </param>
      <param name="point">
            The System.Drawing.Point at which to draw the arrow.
            </param>
      <param name="size">
            The System.Drawing.Size of the arrow.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.ArrowStyleDrawArgs.Color">
      <summary>
            Gets the color of the arrow.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ArrowStyleDrawArgs.Size">
      <summary>
            Gets the size of the arrow to draw.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ArrowStyleDrawArgs.Point">
      <summary>
            Gets the point at which to draw the arrow.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ArrowStyleDrawArgs.LineWidth">
      <summary>
            Gets the width of the arrow line.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.Axis">
      <summary>
            Provides an abstract base class for axes.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.Scale">
      <summary>
            Provides an abstract base class for all types of scales.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.Scale.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.Scale class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.Scale.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.Scale.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by NationalInstruments.UI.Scale.
            </summary>
      <param name="disposing">
            If true, this method releases managed and unmanaged resources. If false, this method releases
            only unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.Scale.OnRangeChanged(System.EventArgs)">
      <summary>
            Raises the NationalInstruments.UI.Scale.RangeChanged event.
            </summary>
      <param name="e">
            An System.EventArgs that contains the event data.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.Scale.AutoSpacing">
      <summary>
            Gets or sets a value indicating if the scale automatically calculates the location of tick marks.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Scale.BaseLineVisible">
      <summary>
            Gets or sets a value indicating if the base line connecting the tick marks is displayed.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Scale.BaseLineColor">
      <summary>
            Gets or sets the color of the base line connecting the tick marks.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Scale.AutoMinorDivisionFrequency">
      <summary>
            Gets or sets the number of minor ticks located between two major ticks when NationalInstruments.UI.Scale.AutoSpacing is
            true.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Scale.ScaleType">
      <summary>
            Gets or sets the type of scale to use.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Scale.Range">
      <summary>
            Gets or sets the range of the scale.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Scale.Inverted">
      <summary>
            Gets or sets a value indicating if the scale is inverted.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Scale.LogBase">
      <summary>
            Gets or sets the base of the logarithm to use for a logarithmic scale.</summary>
    </member>
    <member name="E:NationalInstruments.UI.Scale.RangeChanged">
      <summary>
            Occurs when the range of the scale changes.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.Axis.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.Axis class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.Axis.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.Axis.Caption">
      <summary>
            Gets or sets the text of the caption that is displayed by the axis.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Axis.CaptionFont">
      <summary>
            Gets or sets the font of the caption that is displayed by the axis.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Axis.CaptionForeColor">
      <summary>
            Gets or sets the foreground color of the caption that is displayed by the axis.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Axis.CaptionBackColor">
      <summary>
            Gets or sets the background color of the caption that is displayed by the axis.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Axis.Mode">
      <summary>
            Gets or sets the update mode for the range of the axis.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Axis.MajorDivisions">
      <summary>
            Gets NationalInstruments.UI.AxisLabeledDivisions on the axis.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Axis.MinorDivisions">
      <summary>
            Gets the minor NationalInstruments.UI.AxisDivisions on the axis.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Axis.CustomDivisions">
      <summary>
            Gets the collection of NationalInstruments.UI.AxisCustomDivision objects on the axis.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.AxisCustomDivision">
      <summary>
            Represents a custom value and its associated tick mark, label, and grid line.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.ScaleCustomDivision">
      <summary>
            Represents a custom value and its associated tick mark and label on a scale.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.ScaleCustomDivision.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.ScaleCustomDivision class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.ScaleCustomDivision.#ctor(System.Double)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.ScaleCustomDivision class with the specified division value.
            </summary>
      <param name="divisionValue">
            The value at which to place the custom division.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.ScaleCustomDivision.#ctor(System.Double,System.String)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.ScaleCustomDivision class with the specified division value
            and text.
            </summary>
      <param name="divisionValue">
            The value at which to place the custom division.
            </param>
      <param name="text">
            The System.String to display as the custom division label.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.ScaleCustomDivision.#ctor(System.Double,System.String,NationalInstruments.UI.CustomDivisionDisplayStyle)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.ScaleCustomDivision class with the specified division value,
            text, and display style.
            </summary>
      <param name="divisionValue">
            The value at which to place the custom division.
            </param>
      <param name="text">
            The System.String to display as the custom division label.
            </param>
      <param name="displayStyle">
            The NationalInstruments.UI.CustomDivisionDisplayStyle that specifies if <paramref name="text"></paramref> or the custom division 
            value is displayed as the custom division label.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.ScaleCustomDivision.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.ScaleCustomDivision.Clone">
      <summary>
            Creates a new object that is a deep copy of this instance.
            </summary>
      <returns>
            A new object that is a deep copy of this instance.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.ScaleCustomDivision.Owner">
      <summary>
            Gets the control that owns this NationalInstruments.UI.ScaleCustomDivision.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ScaleCustomDivision.LineWidth">
      <summary>
            Gets or sets the width of the custom division tick mark.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ScaleCustomDivision.TickLength">
      <summary>
            Gets or sets the length of the custom division tick mark.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ScaleCustomDivision.TickColor">
      <summary>
            Gets or sets the color of the custom division tick mark.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ScaleCustomDivision.TickVisible">
      <summary>
            Gets or sets a value indicating if the custom division tick mark is displayed.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ScaleCustomDivision.LabelFormat">
      <summary>
            Gets or sets the NationalInstruments.UI.FormatString used to format the custom division label text.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ScaleCustomDivision.LabelForeColor">
      <summary>
            Gets or sets the foreground color of the custom division label.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ScaleCustomDivision.LabelBackColor">
      <summary>
            Gets or sets the background color of the custom division label.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ScaleCustomDivision.LabelFont">
      <summary>
            Gets or sets the font of the custom division label.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ScaleCustomDivision.LabelVisible">
      <summary>
            Gets or sets a value indicating if the label is displayed.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ScaleCustomDivision.Value">
      <summary>
            Gets or sets the value of the custom division tick mark.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ScaleCustomDivision.Text">
      <summary>
            Gets or sets the custom division label text.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ScaleCustomDivision.DisplayStyle">
      <summary>
            Gets or sets the display style of the label.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.AxisCustomDivision.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.AxisCustomDivision class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.AxisCustomDivision.#ctor(System.Double)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.AxisCustomDivision class with the specified 
            custom division value.
            </summary>
      <param name="divisionValue">
            The value at which to place the custom division.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.AxisCustomDivision.#ctor(System.Double,System.String)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.AxisCustomDivision class with the specified 
            custom division value and text.
            </summary>
      <param name="divisionValue">
            The value at which to place the custom division.
            </param>
      <param name="text">
            The System.String to display as the custom division label.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.AxisCustomDivision.#ctor(System.Double,System.String,NationalInstruments.UI.CustomDivisionDisplayStyle)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.AxisCustomDivision class with the specified custom 
            division value, text, and display style.
            </summary>
      <param name="divisionValue">
            The value at which to place the custom division.
            </param>
      <param name="text">
            The System.String to display as the custom division label.
            </param>
      <param name="displayStyle">
            The NationalInstruments.UI.CustomDivisionDisplayStyle that specifies if <paramref name="text"></paramref> or the custom division value
             is displayed as the custom division label.</param>
    </member>
    <member name="M:NationalInstruments.UI.AxisCustomDivision.Clone">
      <summary>
            Creates a new object that is a deep copy of this instance.
            </summary>
      <returns>
            A new object that is a deep copy of this instance.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.AxisCustomDivision.GridVisible">
      <summary>
            Gets or sets a value indicating if the grid is displayed.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AxisCustomDivision.GridColor">
      <summary>
            Gets or sets the color of the grid.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AxisCustomDivision.GridLineStyle">
      <summary>
            Gets or sets the line style of the grid.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.AxisCustomDivisionCollection">
      <summary>
            Represents a strongly typed collection of NationalInstruments.UI.AxisCustomDivision objects.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.AxisCustomDivisionCollection.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.AxisCustomDivisionCollection class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.AxisCustomDivisionCollection.#ctor(NationalInstruments.UI.AxisCustomDivisionCollection)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.AxisCustomDivisionCollection class
            from an existing collection.
            </summary>
      <param name="item">
            The NationalInstruments.UI.AxisCustomDivisionCollection to copy.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.AxisCustomDivisionCollection.#ctor(NationalInstruments.UI.AxisCustomDivision[])">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.AxisCustomDivisionCollection class
            from an array of items.
            </summary>
      <param name="item">
            The array of NationalInstruments.UI.AxisCustomDivision to copy.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.AxisCustomDivisionCollection.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.AxisCustomDivisionCollection.Add(NationalInstruments.UI.AxisCustomDivision)">
      <summary>
            Adds an item to end of the collection.
            </summary>
      <param name="item">
            Item to add to the collection.
            </param>
      <returns>
            The array index of the added item.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.AxisCustomDivisionCollection.AddRange(NationalInstruments.UI.AxisCustomDivision[])">
      <summary>
            Adds an array of NationalInstruments.UI.AxisCustomDivision objects to the end of the collection.
            </summary>
      <param name="item">
            Array of NationalInstruments.UI.AxisCustomDivision objects to add to the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.AxisCustomDivisionCollection.AddRange(NationalInstruments.UI.AxisCustomDivisionCollection)">
      <summary>
            Adds a collection of NationalInstruments.UI.AxisCustomDivision objects to the end of the collection.
            </summary>
      <param name="item">
            Collection of NationalInstruments.UI.AxisCustomDivision objects to add to the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.AxisCustomDivisionCollection.Clear">
      <summary>
            Removes all items from the collection.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.AxisCustomDivisionCollection.Contains(NationalInstruments.UI.AxisCustomDivision)">
      <summary>
            Determines if the specified element is in the collection.
            </summary>
      <param name="item">Item to locate in the collection.</param>
      <returns>true if the collection contains <paramref name="item"></paramref>.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.AxisCustomDivisionCollection.CopyTo(NationalInstruments.UI.AxisCustomDivision[],System.Int32)">
      <summary>
            Copies the collection to an array or a portion of an array.
            </summary>
      <param name="array">
            Destination array for the collection.
            </param>
      <param name="index">
            The index in the target array at which you want to begin copying the collection to.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.AxisCustomDivisionCollection.IndexOf(NationalInstruments.UI.AxisCustomDivision)">
      <summary>
            Returns the zero-based index of the first occurrence of an item in the collection.
            </summary>
      <param name="item">
            Item to search for.
            </param>
      <returns>
            Index of the item. If the item is not found, returns -1.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.AxisCustomDivisionCollection.Insert(System.Int32,NationalInstruments.UI.AxisCustomDivision)">
      <summary>
            Inserts an item into the collection at the specified index.
            </summary>
      <param name="index">
            Index to insert the item at.
            </param>
      <param name="item">
            Item to insert into the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.AxisCustomDivisionCollection.GetEnumerator">
      <summary>
            Returns an enumerator that you can use to iterate through the collection.
            </summary>
      <returns>
            The enumerator for the collection.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.AxisCustomDivisionCollection.Remove(NationalInstruments.UI.AxisCustomDivision)">
      <summary>
            Removes the first occurrence of the specified item.
            </summary>
      <param name="item">
            Item to remove from the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.AxisCustomDivisionCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the item at the specified index.
            </summary>
      <param name="index">
            The zero-based index of the item to remove.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.AxisCustomDivisionCollection.Item(System.Int32)">
      <summary>
            Gets or sets the NationalInstruments.UI.AxisCustomDivision at the specified index. In Visual C#, this property 
            is the indexer.
            </summary>
      <param name="index">
            The zero-based index of the entry to locate in the collection.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.AxisCustomDivisionCollection.Count">
      <summary>
            Gets the number of elements in the NationalInstruments.UI.AxisCustomDivisionCollection.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.AxisDivisions">
      <summary>
            Represents a set of divisions of an axis.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.ScaleDivisions">
      <summary>
            Represents a set of divisions of a scale.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.ScaleDivisions.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.ScaleDivisions.Owner">
      <summary>
            Gets the control that this NationalInstruments.UI.ScaleDivisions belongs to.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ScaleDivisions.LineWidth">
      <summary>
            Gets or sets the width of the minor or major divisions tick marks.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ScaleDivisions.TickLength">
      <summary>
            Gets or sets the length of the major or minor division tick marks on the scale.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ScaleDivisions.TickColor">
      <summary>
            Gets or sets the color of the major or minor divisions tick marks on the scale.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ScaleDivisions.TickVisible">
      <summary>
            Gets or sets a value indicating if the major or minor divisions tick marks are displayed.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ScaleDivisions.Base">
      <summary>
            Gets or sets a value that is used for calculating where the major or minor division tick marks are placed on a scale.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ScaleDivisions.Interval">
      <summary>
            Gets or sets the number of units between major or minor division tick marks.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AxisDivisions.GridVisible">
      <summary>
            Gets or sets a value indicating if the grid is displayed.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AxisDivisions.GridColor">
      <summary>
            Gets or sets the color of the grid.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AxisDivisions.GridLineStyle">
      <summary>
            Gets or sets the line style of the grid.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.AxisLabeledDivisions">
      <summary>
            Represents a set of major divisions of an axis.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.ScaleLabeledDivisions">
      <summary>
            Represents a set of major divisions of a scale.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ScaleLabeledDivisions.LabelFormat">
      <summary>
            Gets or sets the NationalInstruments.UI.FormatString used to format the major division label text.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ScaleLabeledDivisions.LabelForeColor">
      <summary>
            Gets or sets the foreground color of the major division labels.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ScaleLabeledDivisions.LabelBackColor">
      <summary>
            Gets or sets the background color of the major division labels.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ScaleLabeledDivisions.LabelFont">
      <summary>
            Gets or sets the font of the major division labels.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ScaleLabeledDivisions.LabelVisible">
      <summary>
            Gets or sets a value indicating if the major division label is displayed.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AxisLabeledDivisions.GridVisible">
      <summary>
            Gets or sets a value indicating if the grid is displayed.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AxisLabeledDivisions.GridColor">
      <summary>
            Gets or sets the color of the grid.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.AxisLabeledDivisions.GridLineStyle">
      <summary>
            Gets or sets the line style of the grid.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.AxisMode">
      <summary>
            Specifies the scaling mode of the specified axis.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.AxisMode.Fixed">
      <summary>
            The axis fixes the range to the existing range. The range is never updated.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.AxisMode.AutoScaleLoose">
      <summary>
            The axis automatically updates the range so that the range extends beyond the exact calculated data values. 
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.AxisMode.AutoScaleExact">
      <summary>
            The axis automatically updates the range to the exact calculated values.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.AxisMode.ScopeChart">
      <summary>
            The axis updates the range to behave as a scope chart. For example, if the existing range is 0 to 10 and a data value of 13 is 
            plotted, the range is updated to 10 to 20.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.AxisMode.StripChart">
      <summary>
            The axis updates the range to behave as a strip chart by 
            scrolling to the most recent data value. For example, if the existing range is 0 to 10 and a data value of 13 is 
            plotted, the range is updated to 3 to 13.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.BeforeChangeNumericValueEventHandler">
      <summary>
            Represents the method that handles the NationalInstruments.UI.INumericControl.BeforeChangeValue
            event.
            </summary>
      <param name="sender">
            The source of the event.
            </param>
      <param name="e">
            An NationalInstruments.UI.BeforeChangeNumericValueEventArgs that contains
            the event data.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.BeforeDragXYAnnotationCaptionEventArgs">
      <summary>
            Provides data for the events that occur before the annotation caption is dragged.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.BeforeDragXYAnnotationCaptionEventArgs.#ctor(NationalInstruments.UI.XYAnnotation,System.Single,System.Single,NationalInstruments.UI.Action,System.Boolean)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.BeforeDragXYAnnotationCaptionEventArgs
            class with the specified annotation, x offset, y offset, and action that caused the event. 
            </summary>
      <param name="annotation">
            The NationalInstruments.UI.XYAnnotation for which the event is occurring.
            </param>
      <param name="xOffset">
            The x offset to drag the caption to.
            </param>
      <param name="yOffset">
            The y offset to drag the caption to.
            </param>
      <param name="action">
            The source of the NationalInstruments.UI.Action that caused the event.
            </param>
      <param name="cancel">
            A value that indicates if the event is cancelled.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDragXYAnnotationCaptionEventArgs.Annotation">
      <summary>
            Gets the NationalInstruments.UI.XYAnnotation whose caption is going to move. 
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDragXYAnnotationCaptionEventArgs.XOffset">
      <summary>
            The x offset to move the caption to.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDragXYAnnotationCaptionEventArgs.YOffset">
      <summary>
            The y offset to move the caption to.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.BeforeDragXYAnnotationCaptionEventHandler">
      <summary>
            Represents the method that handles the events that occur before an annotation caption is dragged.
            </summary>
      <param name="sender">
            The source of the event.
            </param>
      <param name="e">
            A NationalInstruments.UI.BeforeDragXYAnnotationCaptionEventArgs that contains the event data.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.BeforeDrawCaptionEventArgs">
      <summary>
            Provides data for the NationalInstruments.UI.IControlBase.BeforeDrawCaption event.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.BeforeDrawEventArgs">
      <summary>
            Provides data for custom draw events that occur before a control or control sub-object is drawn.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.BeforeDrawEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.BeforeDrawEventArgs
            class with the specified graphics, bounds, and cancel value.
            </summary>
      <param name="graphics">
            The System.Drawing.Graphics that is used to draw the item.
            </param>
      <param name="bounds">
            The System.Drawing.Rectangle that represents the bounds in which to draw.
            </param>
      <param name="cancel">
            A value that indicates if the event is cancelled.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.BeforeDrawEventArgs.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawEventArgs.Graphics">
      <summary>
            Gets the graphics used to draw the item.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawEventArgs.Bounds">
      <summary>
            Gets the rectangle in which to draw.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.BeforeDrawCaptionEventArgs.#ctor(System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,NationalInstruments.UI.CaptionPosition,System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.BeforeDrawCaptionEventArgs
            class with the specified caption and the background color, foreground color, font, and position of
            the caption along with the graphics, bounds, and cancel value.
            </summary>
      <param name="caption">
            A System.String that represent the caption text to draw.
            </param>
      <param name="backColor">
            The background System.Drawing.Color of the caption to draw.
            </param>
      <param name="foreColor">
            The foreground System.Drawing.Color of the caption to draw.
            </param>
      <param name="font">
            The System.Drawing.Font of the caption to draw.
            </param>
      <param name="position">
            The NationalInstruments.UI.CaptionPosition of the caption to draw.
            </param>
      <param name="graphics">
            The System.Drawing.Graphics used to draw the caption.
            </param>
      <param name="bounds">
            The System.Drawing.Rectangle that represents the bounds in which to draw.
            </param>
      <param name="cancel">
            A value that indicates if the event is cancelled.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.BeforeDrawCaptionEventArgs.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawCaptionEventArgs.Caption">
      <summary>
            Gets the caption text to draw.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawCaptionEventArgs.BackColor">
      <summary>
            Gets the background color of the caption to draw.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawCaptionEventArgs.ForeColor">
      <summary>
            Gets the foreground color of the caption to draw.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawCaptionEventArgs.Font">
      <summary>
            Gets the font of the caption to draw.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawCaptionEventArgs.Position">
      <summary>
            Gets the position of the caption to draw.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.BeforeDrawCaptionEventHandler">
      <summary>
            Represents the method that handles the NationalInstruments.UI.IControlBase.BeforeDrawCaption
            event.
            </summary>
      <param name="sender">
            The source of the event.
            </param>
      <param name="e">
            A NationalInstruments.UI.BeforeDrawCaptionEventArgs that contains the event data.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.BeforeDrawEventHandler">
      <summary>
            Represents the method that handles custom draw events that occur before a control or control sub-object is drawn.
            </summary>
      <param name="sender">
            The source of the event.
            </param>
      <param name="e">
            A NationalInstruments.UI.BeforeDrawEventArgs that contains the event data.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.BeforeDrawLegendItemEventArgs">
      <summary>
            Provides data for the NationalInstruments.UI.ILegend.BeforeDrawItem event.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.BeforeDrawLegendItemEventArgs.#ctor(NationalInstruments.UI.LegendItem,System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.BeforeDrawLegendItemEventArgs
            class with the specified legend item, graphics, bounds, and cancel value.
            </summary>
      <param name="item">
            The NationalInstruments.UI.LegendItem for which the event is occurring.
            </param>
      <param name="graphics">
            The System.Drawing.Graphics used to draw the item.
            </param>
      <param name="bounds">
            The System.Drawing.Rectangle that represents the bounds in which to draw.
            </param>
      <param name="cancel">
            A value that indicates if the event is cancelled.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.BeforeDrawLegendItemEventArgs.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawLegendItemEventArgs.Item">
      <summary>
            Gets the NationalInstruments.UI.LegendItem to draw.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawLegendItemEventArgs.ItemBounds">
      <summary>
            Gets the bounds of the legend item.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.BeforeDrawLegendItemEventHandler">
      <summary>
            Represents the method that handles the NationalInstruments.UI.ILegend.BeforeDrawItem
            event.
            </summary>
      <param name="sender">
            The source of the event.
            </param>
      <param name="e">
            A NationalInstruments.UI.BeforeDrawLegendItemEventArgs that contains the event data.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.BeforeDrawXYCursorEventArgs">
      <summary>
            Provides data for events that occur before the cursor draws.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.BeforeDrawXYCursorEventArgs.#ctor(NationalInstruments.UI.XYCursor,System.Drawing.Rectangle,System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
      <summary>
            Initializes a new instance of NationalInstruments.UI.BeforeDrawXYCursorEventArgs with the specified cursor, point bounds,
            graphics, bounds, and cancel value.
            </summary>
      <param name="cursor">
            The NationalInstruments.UI.XYCursor for which the event is occurring.
            </param>
      <param name="pointBounds">
            The System.Drawing.Rectangle that represents the bounds of the cursor point.
            </param>
      <param name="graphics">
            The System.Drawing.Graphics used to draw the item.
            </param>
      <param name="bounds">
            The System.Drawing.Rectangle that represents the bounds in which to draw.
            </param>
      <param name="cancel">
            A value that indicates if the event is cancelled.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.BeforeDrawXYCursorEventArgs.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawXYCursorEventArgs.Cursor">
      <summary>
            Gets the NationalInstruments.UI.XYCursor to draw.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawXYCursorEventArgs.PointBounds">
      <summary>
            Gets the bounds of the cursor point.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.BeforeDrawXYCursorEventHandler">
      <summary>
            Represents the method that handles the events that occur before a cursor draws.
            </summary>
      <param name="sender">
            The source of the event.
            </param>
      <param name="e">
            A NationalInstruments.UI.BeforeDrawXYCursorEventArgs that contains the event data.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.BeforeDrawXYPlotEventArgs">
      <summary>
            Provides data for the NationalInstruments.UI.IXYGraph.BeforeDrawPlot event.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.BeforeDrawXYPlotEventArgs.#ctor(NationalInstruments.UI.XYPlot,System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.BeforeDrawXYPlotEventArgs
            class with the specified plot, graphics, bounds, and cancel value.
            </summary>
      <param name="plot">
            The NationalInstruments.UI.XYPlot for which the event is occurring.
            </param>
      <param name="graphics">
            The System.Drawing.Graphics used to draw the item.
            </param>
      <param name="bounds">
            The System.Drawing.Rectangle that represents the bounds in which to draw.
            </param>
      <param name="cancel">
            A value that indicates if the event is cancelled.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.BeforeDrawXYPlotEventArgs.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawXYPlotEventArgs.Plot">
      <summary>
            Gets the NationalInstruments.UI.XYPlot to draw.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.BeforeDrawXYPlotEventHandler">
      <summary>
            Represents the method that handles the NationalInstruments.UI.IXYGraph.BeforeDrawPlot
            event.
            </summary>
      <param name="sender">
            The source of the event.
            </param>
      <param name="e">
            A NationalInstruments.UI.BeforeDrawXYPlotEventArgs that contains the event data.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.BeforeDrawXYPointAnnotationEventArgs">
      <summary>
            Provides data for events that occur before the point annotation draws.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.BeforeDrawXYPointAnnotationEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,NationalInstruments.UI.XYPointAnnotation,NationalInstruments.UI.XYPointAnnotationPart,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Size,System.Single,System.Drawing.PointF,System.Drawing.Size,System.Drawing.PointF[])">
      <summary>
            Initializes a new instance of NationalInstruments.UI.BeforeDrawXYPointAnnotationEventArgs 
            with the specified graphics, bounds, annotation, annotation part, arrow head point, arrow tail point, 
            caption point, caption size, caption angle, shape point, shape size, and shape points.
            </summary>
      <param name="graphics">
            The System.Drawing.Graphics used to draw the item.
            </param>
      <param name="bounds">
            The System.Drawing.Rectangle that represents the bounds in which to draw.
            </param>
      <param name="cancel">
            A value that indicates if the event is cancelled.
            </param>
      <param name="annotation">
            The NationalInstruments.UI.XYPointAnnotation for which the event is occurring.
            </param>
      <param name="annotationPart">
            The NationalInstruments.UI.XYPointAnnotationPart of the annotation to draw.
            </param>
      <param name="arrowHeadPoint">
            The System.Drawing.Point at which to draw the arrow head.
            </param>
      <param name="arrowTailPoint">
            The System.Drawing.Point at which the arrow tail is located.
            </param>
      <param name="captionPoint">
            The System.Drawing.Point at which to draw the caption.
            </param>
      <param name="captionSize">
            The System.Drawing.Size of the System.Drawing.Rectangle in which to draw the caption.
            </param>
      <param name="captionAngle">
            The angle at which to draw the caption.
            </param>
      <param name="shapePoint">
            The System.Drawing.Point at which to draw the shape.
            </param>
      <param name="shapeSize">
            The System.Drawing.Size of the shape to draw.
            </param>
      <param name="shapePoints">
            The System.Drawing.Point array that defines the shape to draw.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawXYPointAnnotationEventArgs.Annotation">
      <summary>
            Gets the NationalInstruments.UI.XYPointAnnotation to draw.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawXYPointAnnotationEventArgs.Part">
      <summary>
            Gets the part of the annotation to draw.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawXYPointAnnotationEventArgs.CaptionSize">
      <summary>
            Gets the size of the rectangle in which to draw the caption.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawXYPointAnnotationEventArgs.CaptionAngle">
      <summary>
            Gets the angle at which to draw the caption.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawXYPointAnnotationEventArgs.ShapePoint">
      <summary>
            Gets the point at which to draw the shape.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawXYPointAnnotationEventArgs.ShapeSize">
      <summary>
            Gets the size of the shape to draw.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawXYPointAnnotationEventArgs.ArrowHeadPoint">
      <summary>
            Gets the point at which to draw the arrow head.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawXYPointAnnotationEventArgs.ArrowTailPoint">
      <summary>
            Gets the point at which the arrow tail is located.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawXYPointAnnotationEventArgs.CaptionPoint">
      <summary>
            Gets the point at which to draw the caption.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawXYPointAnnotationEventArgs.ShapePoints">
      <summary>
            Gets the array of points that defines the shape to draw.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.BeforeDrawXYPointAnnotationEventHandler">
      <summary>
            Represents the method that handles the events that occur before a point annotation draws.
            </summary>
      <param name="sender">
            The source of the event.
            </param>
      <param name="e">
            A NationalInstruments.UI.BeforeDrawXYPointAnnotationEventArgs that contains the event data.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.BeforeDrawXYRangeAnnotationEventArgs">
      <summary>
            Provides data for events that occur before the range annotation draws.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.BeforeDrawXYRangeAnnotationEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,NationalInstruments.UI.XYRangeAnnotation,NationalInstruments.UI.XYRangeAnnotationPart,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Size,System.Single)">
      <summary>
            Initializes a new instance of NationalInstruments.UI.BeforeDrawXYRangeAnnotationEventArgs 
            with the specified graphics, bounds, annotation, annotation part, arrow head point, arrow tail point, 
            caption point, caption size, and caption angle.
            </summary>
      <param name="graphics">
            The System.Drawing.Graphics used to draw the item.
            </param>
      <param name="bounds">
            The System.Drawing.Rectangle that represents the bounds in which to draw.
            </param>
      <param name="cancel">
            A value that indicates if the event is cancelled.
            </param>
      <param name="annotation">
            The NationalInstruments.UI.XYRangeAnnotation for which the event is occurring.
            </param>
      <param name="annotationPart">
            The NationalInstruments.UI.XYRangeAnnotationPart of the annotation to draw.
            </param>
      <param name="arrowHeadPoint">
            The System.Drawing.Point at which to draw the arrow head.
            </param>
      <param name="arrowTailPoint">
            The System.Drawing.Point at which arrow tail is located.
            </param>
      <param name="captionPoint">
            The System.Drawing.Point at which to draw the caption.
            </param>
      <param name="captionSize">
            The System.Drawing.Size of the System.Drawing.Rectangle in which to draw the caption.
            </param>
      <param name="captionAngle">
            The angle at which to draw the caption.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawXYRangeAnnotationEventArgs.Annotation">
      <summary>
            Gets the NationalInstruments.UI.XYPointAnnotation to draw.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawXYRangeAnnotationEventArgs.Part">
      <summary>
            Gets the part of the annotation to draw.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawXYRangeAnnotationEventArgs.CaptionSize">
      <summary>
            Gets the size of the rectangle in which to draw the caption.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawXYRangeAnnotationEventArgs.CaptionAngle">
      <summary>
            Gets the angle at which to draw the caption.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawXYRangeAnnotationEventArgs.ArrowHeadPoint">
      <summary>
            Gets the point at which to draw the arrow head.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawXYRangeAnnotationEventArgs.ArrowTailPoint">
      <summary>
            Gets the point at which to the arrow tail is located.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeDrawXYRangeAnnotationEventArgs.CaptionPoint">
      <summary>
            Gets the point at which to draw the caption.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.BeforeDrawXYRangeAnnotationEventHandler">
      <summary>
            Represents the method that handles the events that occur before a range annotation draws.
            </summary>
      <param name="sender">
            The source of the event.
            </param>
      <param name="e">
            A NationalInstruments.UI.BeforeDrawXYRangeAnnotationEventArgs that contains the event data.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.BeforeMoveXYCursorEventArgs">
      <summary>
            Provides data for the events that occur before a cursor moves.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.BeforeMoveXYCursorEventArgs.#ctor(NationalInstruments.UI.XYCursor,NationalInstruments.UI.XYPlot,System.Double,System.Double,NationalInstruments.UI.Action,System.Boolean)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.BeforeMoveXYCursorEventArgs
            class with the specified cursor, plot, x coordinate, y coordinate, action, and cancel value.
            </summary>
      <param name="cursor">
            The NationalInstruments.UI.XYCursor for which the event is occurring.
            </param>
      <param name="plot">
            The NationalInstruments.UI.XYPlot that the NationalInstruments.UI.XYCursor
            is moving to.
            </param>
      <param name="xPosition">
            The x coordinate that the NationalInstruments.UI.XYCursor is moving to.
            </param>
      <param name="yPosition">
            The y coordinate that the NationalInstruments.UI.XYCursor is moving to.
            </param>
      <param name="action">
            The source of the NationalInstruments.UI.Action that caused the event.
            </param>
      <param name="cancel">true to cancel the event.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.BeforeMoveXYCursorEventArgs.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.BeforeMoveXYCursorEventArgs.Cursor">
      <summary>
            Gets the NationalInstruments.UI.XYCursor that is moving.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeMoveXYCursorEventArgs.Plot">
      <summary>
            Gets the NationalInstruments.UI.XYPlot that the 
            NationalInstruments.UI.XYCursor is moving to.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeMoveXYCursorEventArgs.XPosition">
      <summary>
            Gets the x coordinate that the NationalInstruments.UI.XYCursor is moving to.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BeforeMoveXYCursorEventArgs.YPosition">
      <summary>
            Gets the y coordinate that the NationalInstruments.UI.XYCursor is moving to.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.BeforeMoveXYCursorEventHandler">
      <summary>
            Represents the method that handles events that occur before the cursor moves.
            </summary>
      <param name="sender">
            The source of the event.
            </param>
      <param name="e">
            A NationalInstruments.UI.BeforeMoveXYCursorEventArgs that contains the event data.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.BindableWaveformGraphMethod">
      <summary>
            Specifies the plot method on a waveform graph to use in data binding.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.BindableWaveformGraphMethod.PlotX">
      <summary>
            The waveform graph calls NationalInstruments.UI.IWaveformGraph.PlotX(System.Double).
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.BindableWaveformGraphMethod.PlotXAppend">
      <summary>
            The waveform graph calls NationalInstruments.UI.IWaveformGraph.PlotXAppend(System.Double).
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.BindableWaveformGraphMethod.PlotXMultiple">
      <summary>
            The waveform graph calls NationalInstruments.UI.IWaveformGraph.PlotXMultiple(System.Double[0:,0:]).
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.BindableWaveformGraphMethod.PlotXAppendMultiple">
      <summary>
            The waveform graph calls NationalInstruments.UI.IWaveformGraph.PlotXAppendMultiple(System.Double[0:,0:]).
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.BindableWaveformGraphMethod.PlotY">
      <summary>
            The waveform graph calls NationalInstruments.UI.IWaveformGraph.PlotY(System.Double).
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.BindableWaveformGraphMethod.PlotYAppend">
      <summary>
            The waveform graph calls NationalInstruments.UI.IWaveformGraph.PlotYAppend(System.Double).
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.BindableWaveformGraphMethod.PlotYMultiple">
      <summary>
            The waveform graph calls NationalInstruments.UI.IWaveformGraph.PlotYMultiple(System.Double[0:,0:]).
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.BindableWaveformGraphMethod.PlotYAppendMultiple">
      <summary>
            The waveform graph calls NationalInstruments.UI.IWaveformGraph.PlotYAppendMultiple(System.Double[0:,0:]).
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.BooleanInteractionMode">
      <summary>
            Specifies how the control responds to clicking the mouse or pressing  the space bar.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.BooleanInteractionMode.SwitchWhenPressed">
      <summary>
            The control changes state when the mouse or space bar is pressed.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.BooleanInteractionMode.SwitchUntilReleased">
      <summary>
            The control changes state until the mouse button or space bar is released.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.BooleanInteractionMode.SwitchWhenReleased">
      <summary>
            The control changes state when the mouse or space bar is released.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.BooleanInteractionMode.Indicator">
      <summary>
            The control does not change state when the mouse is clicked or the space bar is pressed.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.BooleanStyleDrawArgs">
      <summary>
            Provides the data to draw a Boolean style.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.BooleanStyleDrawArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Boolean)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.BooleanStyleDrawArgs class with the specified
            graphics, bounds, color, and value.
            </summary>
      <param name="graphics">
            The System.Drawing.Graphics with which to draw.
            </param>
      <param name="bounds">
            The System.Drawing.Rectangle in which the style is drawn.
            </param>
      <param name="color">
            The System.Drawing.Color of the style.
            </param>
      <param name="value">
            The System.Boolean value represented by the style.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.BooleanStyleDrawArgs.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.BooleanStyleDrawArgs.Color">
      <summary>
            Gets the color to use to draw the style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BooleanStyleDrawArgs.Value">
      <summary>
            Gets the Boolean value that is represented by the style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BooleanStyleDrawArgs.State">
      <summary>
            This member is obsolete. Use the NationalInstruments.UI.BooleanStyleDrawArgs.Value
            property to achieve the same functionality.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BooleanStyleDrawArgs.Bounds">
      <summary>
            Gets the rectangle in which the style is drawn.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.Border">
      <summary>
            Represents the visual appearance of the border of a user interface control.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.Border.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.Border class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.Border.GetInnerRectangle(System.Drawing.Rectangle)">
      <summary>
            Returns a rectangle that represents the bounds of the control minus the inset of the border.
            </summary>
      <param name="outerRectangle">
            The System.Drawing.Rectangle that represents the bounds of the control.
            </param>
      <returns>
            A System.Drawing.Rectangle that represents the bounds of the control minus the inset
            of the border.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.Border.Draw(System.Object,NationalInstruments.UI.BorderDrawArgs)">
      <summary>
            Draws a border with the specified NationalInstruments.UI.BorderDrawArgs.
            </summary>
      <param name="context">
            The object that specifies the context in which NationalInstruments.UI.Border.Draw(System.Object,NationalInstruments.UI.BorderDrawArgs) is called.
            </param>
      <param name="args">
            A NationalInstruments.UI.BorderDrawArgs that contains the graphics surface to draw the border on
            and the bounds in which to draw the border.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.Border.UnderlyingType">
      <summary>
            Gets the underlying type of an enum object value.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Border.None">
      <summary>
            Gets a value that indicates that there is no border.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Border.Solid">
      <summary>
            Gets a border with a solid line style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Border.SolidBlack">
      <summary>
            Gets a border with a solid black line style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Border.Dotted">
      <summary>
            Gets a border with a dotted line style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Border.Dashed">
      <summary>
            Gets a border with a dashed line style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Border.RaisedLite">
      <summary>
            Gets a border with a semi-raised line style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Border.SunkenLite">
      <summary>
            Gets a border with a semi-sunken line style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Border.Raised">
      <summary>
            Gets a border with a raised line style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Border.Sunken">
      <summary>
            Gets a border with a sunken line style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Border.Etched">
      <summary>
            Gets a border with an etched line style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Border.ThickFrame3D">
      <summary>
            Gets a border with a thick 3D frame style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Border.ThinFrame3D">
      <summary>
            Gets a border with a thin 3D frame style.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.BorderDrawArgs">
      <summary>
            Provides data for drawing borders.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.BorderDrawArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.BorderDrawArgs class
            with the specified graphics surface and bounds.
            </summary>
      <param name="graphics">
            The System.Drawing.Graphics with which to draw.
            </param>
      <param name="bounds">
            The System.Drawing.Rectangle in which the border is drawn.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.BorderDrawArgs.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.BorderDrawArgs.Bounds">
      <summary>
            Gets the rectangle in which the border is drawn.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.BoundsAlignment">
      <summary>
            Provides an abstract base class for aligning items around a bounding rectangle.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.BoundsAlignment.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.BoundsAlignment class.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BoundsAlignment.UnderlyingType">
      <summary>
            Gets the underlying type of an enum object value.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BoundsAlignment.Auto">
      <summary>
            Gets a bounds alignment that auto-aligns an item to the specified bounds.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BoundsAlignment.BottomCenter">
      <summary>
            Gets a bounds alignment that aligns an item to the bottom center of the specified bounds.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BoundsAlignment.BottomLeft">
      <summary>
            Gets a bounds alignment that aligns an item to the bottom left of the specified bounds.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BoundsAlignment.BottomRight">
      <summary>
            Gets a bounds alignment that aligns an item to the bottom right of the specified bounds.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BoundsAlignment.MiddleCenter">
      <summary>
            Gets a bounds alignment that aligns an item to the middle center of the specified bounds.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BoundsAlignment.MiddleLeft">
      <summary>
            Gets a bounds alignment that aligns an item to the middle left of the specified bounds.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BoundsAlignment.MiddleRight">
      <summary>
            Gets a bounds alignment that aligns an item to the middle right of the specified bounds.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BoundsAlignment.TopLeft">
      <summary>
            Gets a bounds alignment that aligns an item to the top left of the specified bounds.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BoundsAlignment.TopRight">
      <summary>
            Gets a bounds alignment that aligns an item to the top right of the specified bounds.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BoundsAlignment.TopCenter">
      <summary>
            Gets a bounds alignment that aligns an item to the top center of the specified bounds.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.BoundsAlignment.None">
      <summary>
            Gets a bounds alignment that does not adjust the alignment of the item.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.CacheExpirationMode">
      <summary>
            Specifies the expiration policy option for a cached object.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.CacheExpirationMode.Absolute">
      <summary>
            A cached object expires and is removed from the cache at a specified time.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.CacheExpirationMode.Sliding">
      <summary>
            The expiration of a cached object can be extended by a specified time if the object is retrieved
            from the cache before the object expires.  If the object is not retrieved during the specified time, 
            the object expires and is removed from the cache.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.CaptionPosition">
      <summary>
            Specifies the edge of the control at which to position the caption.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.CaptionPosition.Top">
      <summary>
            The caption appears at the top edge of the control.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.CaptionPosition.Bottom">
      <summary>
            The caption appears at the bottom edge of the control.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.CaptionPosition.Left">
      <summary>
            The caption appears at the left edge of the control.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.CaptionPosition.Right">
      <summary>
            The caption appears at the right edge of the control.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.ComponentDrawArgs">
      <summary>
            Provides data for drawing components.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.ComponentDrawArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.ComponentDrawArgs class
            with the specified graphics and bounds.
            </summary>
      <param name="graphics">
            The System.Drawing.Graphics with which to draw.
            </param>
      <param name="bounds">
            The System.Drawing.Rectangle in which a component is drawn.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.ComponentDrawArgs.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.ComponentDrawArgs.Bounds">
      <summary>
            Gets the rectangle in which a component is drawn.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.Cursor">
      <summary>
            Provides an abstract base class for a cursor.  
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.Cursor.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.Cursor class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.Cursor.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.Cursor.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the NationalInstruments.UI.Cursor 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.Cursor.DrawPoint(NationalInstruments.UI.ComponentDrawArgs)">
      <summary>
            Draws the point of the cursor.
            </summary>
      <param name="args">
            A NationalInstruments.UI.ComponentDrawArgs that contains the 
            drawing data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.Cursor.DrawLabel(NationalInstruments.UI.ComponentDrawArgs)">
      <summary>
            Draws the label of the cursor.
            </summary>
      <param name="args">
            A NationalInstruments.UI.ComponentDrawArgs that contains the 
            drawing data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.Cursor.DrawVerticalCrosshair(NationalInstruments.UI.ComponentDrawArgs)">
      <summary>
            Draws the vertical crosshair of the cursor.
            </summary>
      <param name="args">
            A NationalInstruments.UI.ComponentDrawArgs that contains the 
            drawing data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.Cursor.DrawHorizontalCrosshair(NationalInstruments.UI.ComponentDrawArgs)">
      <summary>
            Draws the horizontal crosshair of the cursor.
            </summary>
      <param name="args">
            A NationalInstruments.UI.ComponentDrawArgs that contains the 
            drawing data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.Cursor.DrawLegendItem(NationalInstruments.UI.ComponentDrawArgs)">
      <summary>
            Draws the symbol of a NationalInstruments.UI.Cursor.
            </summary>
      <param name="args">
            A NationalInstruments.UI.ComponentDrawArgs that contains the graphics surface to
            draw the legend item on and the bounds in which to draw the legend item.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.Cursor.BeginInit">
      <summary>
            Signals to the object that initialization is beginning.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.Cursor.EndInit">
      <summary>
            Signals to the object that initialization is complete.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.Cursor.OnLegendItemChanged(System.EventArgs)">
      <summary>
            Raises the NationalInstruments.UI.Cursor.LegendItemChanged event.
            </summary>
      <param name="e">
            An System.EventArgs that contains the event data.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.Cursor.PointStyle">
      <summary>
            Gets or sets the style of the point that is
            displayed in the middle of the crosshairs. 
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Cursor.PointSize">
      <summary>
            Gets or sets the size of the point that is displayed in the middle
            of the crosshairs.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Cursor.Color">
      <summary>
            Gets or sets the color of the cursor.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Cursor.LineStyle">
      <summary>
            Gets or sets the line style that is used to display the crosshairs of the
            cursor. 
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Cursor.LineWidth">
      <summary>
            Gets or sets the line width that is used to display the crosshairs of the cursor.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Cursor.HorizontalCrosshairLength">
      <summary>
            Gets or sets the horizontal crosshair length.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Cursor.VerticalCrosshairLength">
      <summary>
            Gets or sets the vertical crosshair length.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Cursor.SnapMode">
      <summary>
            Gets and sets the snap mode for the cursor.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Cursor.HorizontalCrosshairMode">
      <summary>
            Gets or sets the horizontal crosshair mode.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Cursor.VerticalCrosshairMode">
      <summary>
            Gets or sets the vertical crosshair mode.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Cursor.LabelAlignment">
      <summary>
            Gets or sets the alignment of the cursor label with respect to the cursor crosshair.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Cursor.LabelBackColor">
      <summary>
            Gets or sets the background color of the cursor label.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Cursor.LabelFont">
      <summary>
            Gets or sets the font of the cursor label.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Cursor.LabelForeColor">
      <summary>
            Gets or sets the foreground color of the cursor label.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Cursor.LabelVisible">
      <summary>
            Gets or sets a value indicating if the cursor label is displayed.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.Cursor.LegendItemChanged">
      <summary>
            Occurs when the NationalInstruments.UI.Cursor has changed such
            that its appearance in a legend control must be updated.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.CursorCrosshairMode">
      <summary>
            Specifies how the length of the crosshairs is determined.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.CursorCrosshairMode.None">
      <summary>
            No crosshair is drawn.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.CursorCrosshairMode.Custom">
      <summary>
            The crosshair length is set to the specified System.Drawing.Size.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.CursorCrosshairMode.FullLength">
      <summary>
            The crosshair is drawn the full length of the plot area.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.CursorSnapMode">
      <summary>
            Specifies how the cursor behaves when it is moved.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.CursorSnapMode.Fixed">
      <summary>
            The cursor can only be moved programmatically.
            The NationalInstruments.UI.Cursor does not respond to the mouse.
            When it is moved programmatically, the cursor behaves as if the snap mode is set to
            NationalInstruments.UI.CursorSnapMode.Floating.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.CursorSnapMode.Floating">
      <summary>
            The cursor is set independent of any plot. You can move the cursor anywhere
            in the plot area.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.CursorSnapMode.NearestPoint">
      <summary>
            The cursor is snapped to the nearest point on any plot. You can move the cursor
            along any plot.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.CursorSnapMode.ToPlot">
      <summary>
            The cursor is snapped to points on a specified plot. The cursor can be moved only along this plot.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.CustomDivisionDisplayStyle">
      <summary>
            Specifies the text to use for the custom division label on the axis.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.CustomDivisionDisplayStyle.ShowValue">
      <summary>
            Displays the axis division value.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.CustomDivisionDisplayStyle.ShowText">
      <summary>
            Displays the NationalInstruments.UI.ScaleCustomDivision.Text.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.DataOrientation">
      <summary>
            Specifies the orientation of data in a two-dimensional array.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.DataOrientation.DataInRows">
      <summary>
            Data is contained in rows in a two-dimensional array.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.DataOrientation.DataInColumns">
      <summary>
            Data is contained in columns in a two-dimensional array.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.DrawUtility">
      <summary>
            Provides helper methods related to drawing and transforming coordinates.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.DrawUtility.GetLineStepPoints(System.Drawing.PointF[],NationalInstruments.UI.LineStep)">
      <summary>
            Transforms an array of points representing mapped data by applying the 
            specified NationalInstruments.UI.LineStep.
            </summary>
      <param name="points">
            A System.Drawing.PointF array representing mapped data.
            </param>
      <param name="lineStep">
            A NationalInstruments.UI.LineStep value to use for specifying
            the transformation.
            </param>
      <returns>
            A System.Drawing.PointF array representing mapped data after applying 
            <paramref name="lineStep"></paramref>.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.DrawUtility.OffsetLine(System.Drawing.PointF,System.Drawing.PointF,System.Single,System.Single,System.Drawing.PointF@,System.Drawing.PointF@)">
      <summary>
            Lengthens or shortens a line between two points.
            </summary>
      <param name="lineStart">
            The line start point.
            </param>
      <param name="lineEnd">
            The line end point.
            </param>
      <param name="startOffset">
            The value that moves the start point while maintaining the slope of the line.
            </param>
      <param name="endOffset">
            The value that moves the end point while maintaining the slope of the line.
            </param>
      <param name="offsetLineStart">
            Upon return, contains the new start point.
            </param>
      <param name="offsetLineEnd">
            Upon return, contains the new end point.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.DrawUtility.OffsetLineByRatio(System.Drawing.PointF,System.Drawing.PointF,System.Single,System.Single,System.Drawing.PointF@,System.Drawing.PointF@)">
      <summary>
            Lengthens or shortens a line between two points by specifying ratios.
            </summary>
      <param name="lineStart">
            The line start point.
            </param>
      <param name="lineEnd">
            The line end point.
            </param>
      <param name="startOffsetRatio">
            The value that moves the start point while maintaining the slope of the line.
            </param>
      <param name="endOffsetRatio">
            The value that moves the end point while maintaining the slope of the line.
            </param>
      <param name="offsetLineStart">
            Upon return, contains the new start point.
            </param>
      <param name="offsetLineEnd">
            Upon return, contains the new end point.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.DrawUtility.GetAngleAt(System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
            Gets the angle of the specified point relative to a specified reference point in device
            coordinates.
            </summary>
      <param name="referencePoint">
            A System.Drawing.PointF that represents the reference point.
            </param>
      <param name="point">
            A System.Drawing.PointF for which the angle is calculated.
            </param>
      <returns>
            A value between 0.0 and 360.0 representing the angle of <paramref name="point"></paramref> relative to
            <paramref name="referencePoint"></paramref> in device coordinates.
            </returns>
    </member>
    <member name="T:NationalInstruments.UI.FillStyle">
      <summary>
            Provides an abstract base class for specifying a fill style 
            and also provides a list of pre-defined fill styles.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.FillStyle.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.FillStyle class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.FillStyle.CreateBrush(System.Object,NationalInstruments.UI.FillStyleDrawArgs)">
      <summary>
            Creates a brush with the specified NationalInstruments.UI.FillStyleDrawArgs.
            </summary>
      <param name="context">
            An System.Object with additional context information.
            </param>
      <param name="args">
            A NationalInstruments.UI.FillStyleDrawArgs that contains the 
            drawing data.
            </param>
      <returns>
            A System.Drawing.Brush to use to draw the fill style.  If null is returned, a System.NotSupportedException
            is thrown at the time this method is called.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.FillStyle.FromImage(System.Drawing.Image,NationalInstruments.UI.ImageAlignment)">
      <summary>
            Creates a NationalInstruments.UI.FillStyle based on an image.
            </summary>
      <param name="image">
            An System.Drawing.Image used to create the fill style.
            </param>
      <param name="alignment">
            The NationalInstruments.UI.ImageAlignment that specifies how the image is drawn.
            </param>
      <returns>
            A NationalInstruments.UI.FillStyle that uses an System.Drawing.Image to fill.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.FillStyle.CreateHorizontalGradient(System.Drawing.Color,System.Drawing.Color)">
      <summary>
            Creates a horizontal gradient NationalInstruments.UI.FillStyle.
            </summary>
      <param name="color1">
            A System.Drawing.Color structure that represents the starting color for the gradient. 
            </param>
      <param name="color2">
            A System.Drawing.Color structure that represents the ending color for the gradient. 
            </param>
      <returns>
            A horizontal gradient NationalInstruments.UI.FillStyle.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.FillStyle.CreateVerticalGradient(System.Drawing.Color,System.Drawing.Color)">
      <summary>
            Creates a vertical gradient NationalInstruments.UI.FillStyle.
            </summary>
      <param name="color1">
            A System.Drawing.Color structure that represents the starting color for the gradient. 
            </param>
      <param name="color2">
            A System.Drawing.Color structure that represents the ending color for the gradient. 
            </param>
      <returns>
            A vertical gradient NationalInstruments.UI.FillStyle.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.FillStyle.CreateRotatedGradient(System.Drawing.Color,System.Drawing.Color,System.Single)">
      <summary>
            Creates a rotated gradient NationalInstruments.UI.FillStyle.
            </summary>
      <param name="color1">
            A System.Drawing.Color structure that represents the starting color for the gradient. 
            </param>
      <param name="color2">
            A System.Drawing.Color structure that represents the ending color for the gradient. 
            </param>
      <param name="angle">
            The angle, measured in degrees counter clockwise from the x-axis, of the gradient's orientation line. 
            </param>
      <returns>
            A rotated gradient NationalInstruments.UI.FillStyle.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.FillStyle.UnderlyingType">
      <summary>
            Gets the underlying type of an enum object value.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.FillStyle.IsContextDependent">
      <summary>
            Gets a value indicating whether the fill style is sensitive to changes in the context.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.FillStyle.None">
      <summary>
            Gets a none fill style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.FillStyle.Solid">
      <summary>
            Gets a solid fill style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.FillStyle.HorizontalBrick">
      <summary>
            Gets a horizontal brick fill style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.FillStyle.ZigZag">
      <summary>
            Gets a zigzag fill style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.FillStyle.Wave">
      <summary>
            Gets a wave fill style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.FillStyle.DiagonalBrick">
      <summary>
            Gets a diagonal brick fill style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.FillStyle.Divot">
      <summary>
            Gets a divot fill style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.FillStyle.Shingle">
      <summary>
            Gets a shingle fill style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.FillStyle.VerticalGradient">
      <summary>
            Gets a vertical gradient fill style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.FillStyle.HorizontalGradient">
      <summary>
            Gets a horizontal gradient fill style.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.FillStyleDrawArgs">
      <summary>
            Provides data to create a fill style.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.FillStyleDrawArgs.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.FillStyleDrawArgs class with the
            the specified fill area, fore color, and back color.
            </summary>
      <param name="contextBounds">
            The fill bounds.
            </param>
      <param name="foreColor">
            The fore color of the fill.
            </param>
      <param name="backColor">
            The back color of the fill.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.FillStyleDrawArgs.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.FillStyleDrawArgs.ForeColor">
      <summary>
            Gets the fore color of the fill.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.FillStyleDrawArgs.BackColor">
      <summary>
            Gets the back color of the fill.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.FillStyleDrawArgs.ContextBounds">
      <summary>
            Gets a rectangle representing the bounds in which the fill is drawn.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.FormatString">
      <summary>
            Represents the format specifier and format provider to use to create a formatted string for a numeric value.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.FormatString.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.FormatString class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.FormatString.#ctor(System.IFormatProvider,NationalInstruments.UI.FormatStringMode,System.String)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.FormatString class with
            the specified format provider, format specifier, and format mode.
            </summary>
      <param name="provider">
            An System.IFormatProvider that supplies culture-specific formatting information.
            </param>
      <param name="format">
            A string that contains a standard or custom format specifier.
            </param>
      <param name="mode">
            A NationalInstruments.UI.FormatStringMode that specifies the format provider to use with 
            <paramref name="format"></paramref> to format a value.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.FormatString.#ctor(NationalInstruments.UI.FormatStringMode,System.String)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.FormatString class with
            the specified format specifier and format mode.
            </summary>
      <param name="format">
            A string that contains a standard or custom format specifier.
            </param>
      <param name="mode">
            A NationalInstruments.UI.FormatStringMode that specifies the format provider to use with 
            <paramref name="format"></paramref> to format a value.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.FormatString.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.FormatString.Equals(System.Object)">
      <summary>
            Returns a value indicating if this instance is equal to the specified
            NationalInstruments.UI.FormatString.
            </summary>
      <param name="obj">
            The NationalInstruments.UI.FormatString to compare with this instance.
            </param>
      <returns>true if <paramref name="obj"></paramref> is a NationalInstruments.UI.FormatString
            that is equal to this instance.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.FormatString.GetHashCode">
      <summary>
            Returns a hash code for this object.
            </summary>
      <returns>
            A 32-bit signed integer hash code.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.FormatString.FormatDouble(System.Double)">
      <summary>
            Formats a double value with the specified NationalInstruments.UI.FormatString.Mode
            and NationalInstruments.UI.FormatString.Format.
            </summary>
      <param name="value">
            The System.Double value to format.
            </param>
      <returns>
            The string representation of <paramref name="value"></paramref> as specified by the
            NationalInstruments.UI.FormatString.Mode and
            NationalInstruments.UI.FormatString.Format.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.FormatString.Mode">
      <summary>
            Gets a value that indicates the format provider to use with the format specifier.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.FormatString.Format">
      <summary>
            Gets a string that contains a standard or custom format specifier to use to format a value.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.FormatStringMode">
      <summary>
            Specifies the format provider to use with a format specifier to format a value.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.FormatStringMode.Numeric">
      <summary>
            The System.Globalization.NumberFormatInfo is used with a format specifier
            to format a value.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.FormatStringMode.DateTime">
      <summary>
            The System.Globalization.DateTimeFormatInfo is used with a format specifier
            to format a value.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.FormatStringMode.Engineering">
      <summary>
            The NationalInstruments.EngineeringFormatInfo is used with a format specifier
            to format a value.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.GaugeStyle">
      <summary>
            Provides an abstract base class for specifying a gauge style
            and also provides a list of pre-defined gauge styles.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.RadialNumericPointerStyle">
      <summary>
            Provides an abstract base class for radial pointer styles.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.NumericPointerStyle">
      <summary>
            Provides an abstract base class for numeric pointer styles.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.NumericPointerStyle.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.NumericPointerStyle class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.NumericPointerStyle.Draw(NationalInstruments.UI.INumericPointer,NationalInstruments.UI.NumericPointerStyleDrawArgs)">
      <summary>
            Draws the style using the NationalInstruments.UI.INumericControl.Value from the NationalInstruments.UI.INumericPointer 
            passed into this method. 
            </summary>
      <param name="context">
            An NationalInstruments.UI.INumericPointer with additional context information. 
            </param>
      <param name="args">
            A NationalInstruments.UI.NumericPointerStyleDrawArgs that contains the
            drawing data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.NumericPointerStyle.Draw(NationalInstruments.UI.INumericPointer,NationalInstruments.UI.NumericPointerStyleDrawArgs,System.Double)">
      <summary>
            Draws the style at the specified value.
            </summary>
      <param name="context">
            An NationalInstruments.UI.INumericPointer with additional context information. 
            </param>
      <param name="args">
            A NationalInstruments.UI.NumericPointerStyleDrawArgs that contains the
            drawing data.
            </param>
      <param name="value">
            The value used to draw the style.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.NumericPointerStyle.DrawPointer(NationalInstruments.UI.INumericPointer,NationalInstruments.UI.NumericPointerStyleDrawArgs,System.Double)">
      <summary>
            Draws the pointer of the style.
            </summary>
      <param name="context">
            An NationalInstruments.UI.INumericPointer with additional context information. 
            </param>
      <param name="args">
            A NationalInstruments.UI.NumericPointerStyleDrawArgs that contains the
            drawing data.
            </param>
      <param name="value">
            The value used to draw the pointer. 
            </param>
    </member>
    <member name="M:NationalInstruments.UI.NumericPointerStyle.DrawScale(NationalInstruments.UI.INumericPointer,NationalInstruments.UI.NumericPointerStyleDrawArgs)">
      <summary>
            Draws the scale of the style.
            </summary>
      <param name="context">
            An NationalInstruments.UI.INumericPointer with additional context information.
            </param>
      <param name="args">
            A NationalInstruments.UI.NumericPointerStyleDrawArgs that contains the
            drawing data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.NumericPointerStyle.MapValue(NationalInstruments.UI.INumericPointer,System.Drawing.Rectangle,System.Double,System.Drawing.PointF@,System.Drawing.PointF@)">
      <summary>
            Transforms the value to a start point and end point.
            </summary>
      <param name="context">
            An NationalInstruments.UI.INumericPointer with additional context information.
            </param>
      <param name="bounds">
            The reference System.Drawing.Rectangle.
            </param>
      <param name="value">
            The value to map.
            </param>
      <param name="pointerStart">
            Upon return, contains the start point. 
            </param>
      <param name="pointerEnd">
            Upon return, contains the end point.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.NumericPointerStyle.InverseMapValue(NationalInstruments.UI.INumericPointer,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
            Transforms a point to a value.
            </summary>
      <param name="context">
            An NationalInstruments.UI.INumericPointer with additional context information.
            </param>
      <param name="bounds">
            The reference System.Drawing.Rectangle.
            </param>
      <param name="x">
            The x coordinate.
            </param>
      <param name="y">
            The y coordinate.
            </param>
      <returns>
            The value equal to the <paramref name="x"></paramref> and <paramref name="y"></paramref> coordinates passed in.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.RadialNumericPointerStyle.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.RadialNumericPointerStyle class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.RadialNumericPointerStyle.HitTest(NationalInstruments.UI.IRadialNumericPointer,System.Drawing.Rectangle,System.Int32,System.Int32)">
      <summary>
            Returns a NationalInstruments.UI.RadialNumericPointerHitTestInfo that specifies where on the style
            the specified point is located. 
            </summary>
      <param name="context">
            An NationalInstruments.UI.IRadialNumericPointer with additional context information.
            </param>
      <param name="bounds">
            A System.Drawing.Rectangle representing the bounds of the style.
            </param>
      <param name="x">
            The horizontal location of the point to be hit-tested, in client coordinates.
            </param>
      <param name="y">
            The vertical location of the point to be hit-tested, in client coordinates.
            </param>
      <returns>
            A NationalInstruments.UI.RadialNumericPointerHitTestInfo that specifies where on the style 
            the <paramref name="x"></paramref> and <paramref name="y"></paramref> coordinate is located.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.RadialNumericPointerStyle.DrawDial(NationalInstruments.UI.IRadialNumericPointer,NationalInstruments.UI.RadialNumericPointerStyleDrawArgs)">
      <summary>
            Draws the dial area of the style.
            </summary>
      <param name="context">
            An NationalInstruments.UI.IRadialNumericPointer with additional context information.
            </param>
      <param name="args">
            A NationalInstruments.UI.RadialNumericPointerStyleDrawArgs that contains the
            drawing data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.RadialNumericPointerStyle.GetSpindlePoint(NationalInstruments.UI.IRadialNumericPointer,System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            Gets the spindle point of the style.
            </summary>
      <param name="context">
            An NationalInstruments.UI.IRadialNumericPointer with additional context information.
            </param>
      <param name="graphics">
            The System.Drawing.Graphics used for drawing.
            </param>
      <param name="bounds">
            A System.Drawing.Rectangle representing the bounds of the style.
            </param>
      <returns>
            The System.Drawing.PointF specifying the spindle point of the style.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.RadialNumericPointerStyle.GetScaleRadius(NationalInstruments.UI.IRadialNumericPointer,System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            Gets the scale radius given a bounding rectangle.
            </summary>
      <param name="context">
            An NationalInstruments.UI.IRadialNumericPointer with additional context information.
            </param>
      <param name="graphics">
            The System.Drawing.Graphics object.
            </param>
      <param name="bounds">
            A System.Drawing.Rectangle representing the bounds of the style.
            </param>
      <returns>
            The scale radius that best fits the <paramref name="bounds"></paramref>.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.RadialNumericPointerStyle.GetDialRadius(NationalInstruments.UI.IRadialNumericPointer,System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            Gets the radius of the dial.
            </summary>
      <param name="context">
            An NationalInstruments.UI.IRadialNumericPointer with additional context information.
            </param>
      <param name="graphics">
            The System.Drawing.Graphics object.
            </param>
      <param name="bounds">
            A System.Drawing.Rectangle representing the bounds of the style.
            </param>
      <returns>
            The radius of the dial.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.RadialNumericPointerStyle.GetDialBorderRadius(NationalInstruments.UI.IRadialNumericPointer,System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            Gets the dial border radius.
            </summary>
      <param name="context">
            An NationalInstruments.UI.IRadialNumericPointer with additional context information.
            </param>
      <param name="graphics">
            The System.Drawing.Graphics object.
            </param>
      <param name="bounds">
            A System.Drawing.Rectangle representing the bounds of the style.
            </param>
      <returns>
            The dial border radius.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.RadialNumericPointerStyle.Draw(NationalInstruments.UI.INumericPointer,NationalInstruments.UI.NumericPointerStyleDrawArgs,System.Double)">
      <summary>
            Draws the style at the specified value.
            </summary>
      <param name="context">
            An NationalInstruments.UI.INumericPointer with additional context information. 
            </param>
      <param name="args">
            A NationalInstruments.UI.NumericPointerStyleDrawArgs that contains the
            drawing data.
            </param>
      <param name="value">
            The value used to draw the style.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.GaugeStyle.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.GaugeStyle class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.GaugeStyle.DrawSpindle(NationalInstruments.UI.IGauge,NationalInstruments.UI.RadialNumericPointerStyleDrawArgs)">
      <summary>
            Draws the spindle of the style.
            </summary>
      <param name="context">
            An NationalInstruments.UI.IGauge with additional information.
            </param>
      <param name="args">
            A NationalInstruments.UI.RadialNumericPointerStyleDrawArgs that contains the
            drawing data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.GaugeStyle.Draw(NationalInstruments.UI.INumericPointer,NationalInstruments.UI.NumericPointerStyleDrawArgs,System.Double)">
      <summary>
            Draws the style at the specified value.
            </summary>
      <param name="context">
            An NationalInstruments.UI.INumericPointer with additional context information. 
            </param>
      <param name="args">
            A NationalInstruments.UI.NumericPointerStyleDrawArgs that contains the
            drawing data.
            </param>
      <param name="value">
            The value used to draw the style.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.GaugeStyle.UnderlyingType">
      <summary>
            Gets the underlying type of an enum object value.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.GaugeStyle.SunkenWithThickNeedle">
      <summary>
            Gets a gauge with a sunken look and a thick needle.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.GaugeStyle.SunkenWithThinNeedle">
      <summary>
            Gets a gauge with a sunken look and a thin needle.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.GaugeStyle.SunkenWithThickNeedle3D">
      <summary>
            Gets a 3D gauge with a sunken look and a thick needle.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.GaugeStyle.SunkenWithThinNeedle3D">
      <summary>
            Gets a 3D gauge with a sunken look and a thin needle.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.GaugeStyle.FlatWithThickNeedle">
      <summary>
            Gets a gauge with a flat look and a thick needle.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.GaugeStyle.FlatWithThinNeedle">
      <summary>
            Gets a gauge with a flat look and a thin needle.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.GraphInteractionModes">
      <summary>
            Defines the set of possible user interactions within the plot area of a graph.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.GraphInteractionModes.None">
      <summary>
            No interaction.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.GraphInteractionModes.ZoomX">
      <summary>
            The plot area can be zoomed with a horizontal selection.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.GraphInteractionModes.ZoomY">
      <summary>
            The plot area can be zoomed with a vertical selection.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.GraphInteractionModes.ZoomAroundPoint">
      <summary>
            The plot area can be zoomed around a particular point.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.GraphInteractionModes.PanX">
      <summary>
            The plot area can be panned horizontally.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.GraphInteractionModes.PanY">
      <summary>
            The plot area can be panned vertically.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.GraphInteractionModes.DragCursor">
      <summary>
            The cursor can be dragged.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.GraphInteractionModes.DragAnnotationCaption">
      <summary>
            The annotation caption can be dragged.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.IBoolean">
      <summary>
            Defines the interface for all Boolean controls.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.IControlBase">
      <summary>
            Defines the interface for Measurement Studio .NET user interface controls.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.IControlBase.Draw(NationalInstruments.UI.ComponentDrawArgs)">
      <summary>
            Draws the control with the specified NationalInstruments.UI.ComponentDrawArgs.
            </summary>
      <param name="args">
            A NationalInstruments.UI.ComponentDrawArgs that contains the drawing data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IControlBase.ToImage">
      <summary>
            Creates an image of the control.
            </summary>
      <returns>
            An System.Drawing.Image that represents the control.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.IControlBase.ToImage(System.Drawing.Size)">
      <summary>
            Creates an image of the control with a specified size.
            </summary>
      <param name="size">
            A System.Drawing.Size that specifies the width and height of the exported image.
            </param>
      <returns>
            An System.Drawing.Image that represents the control.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.IControlBase.ToStream(System.IO.Stream,NationalInstruments.UI.ImageType)">
      <summary>
            Writes an image of the control to a stream.
            </summary>
      <param name="stream">
            A System.IO.Stream to write the image to.
            </param>
      <param name="type">
            The format of the image.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IControlBase.ToStream(System.IO.Stream,NationalInstruments.UI.ImageType,System.Drawing.Size)">
      <summary>
            Writes an image of the control to a stream with a specified size.
            </summary>
      <param name="stream">
            A System.IO.Stream to write the image to.
            </param>
      <param name="type">
            The format of the image.
            </param>
      <param name="size">
            A System.Drawing.Size that specifies the width and height of the image that
            is written to the stream.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IControlBase.ToFile(System.String,NationalInstruments.UI.ImageType)">
      <summary>
            Writes an image of the control to a file.
            </summary>
      <param name="filename">
            The path of the file to write the image to.
            </param>
      <param name="type">
            The format of the image.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IControlBase.ToFile(System.String,NationalInstruments.UI.ImageType,System.Drawing.Size)">
      <summary>
            Writes an image of the control to a file with a specified size.
            </summary>
      <param name="filename">
            The path of the file to write the image to.
            </param>
      <param name="type">
            The format of the image.
            </param>
      <param name="size">
            A System.Drawing.Size that specifies the width and height of the image that
            is written to the file.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.IControlBase.BackColor">
      <summary>
            Gets or sets the background color of the control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IControlBase.BackgroundImage">
      <summary>
            Gets or sets the background image to display in the control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IControlBase.BackgroundImageAlignment">
      <summary>
            Gets or sets the alignment of the background image of the control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IControlBase.Border">
      <summary>
            Gets or sets the border style of the control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IControlBase.Caption">
      <summary>
            Gets or sets the caption for the control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IControlBase.CaptionBackColor">
      <summary>
            Gets or sets the background color of the caption that is displayed by the control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IControlBase.CaptionFont">
      <summary>
            Gets or sets the font of the caption that is displayed by the control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IControlBase.CaptionForeColor">
      <summary>
            Gets or sets the foreground color of the caption that is displayed by the control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IControlBase.CaptionPosition">
      <summary>
            Gets or sets the position of the caption that is displayed by the control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IControlBase.Font">
      <summary>
            Gets or sets the font of the text that is displayed by the control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IControlBase.ForeColor">
      <summary>
            Gets or sets the foreground color of the control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IControlBase.Height">
      <summary>
            Gets or sets the height of the control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IControlBase.IsDisposed">
      <summary>
            Gets a value indicating whether the control has been disposed.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IControlBase.Enabled">
      <summary>
            Gets or sets a value indicating if the control responds to user interaction.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IControlBase.Visible">
      <summary>
            Gets or sets a value indicating if the control is displayed.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IControlBase.Width">
      <summary>
            Gets or sets the width of the control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IControlBase.InnerBounds">
      <summary>
            Gets a rectangle that represents the actual bounds of the control.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.IControlBase.BeforeDrawCaption">
      <summary>
            Occurs before the caption is drawn.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.IControlBase.AfterDrawCaption">
      <summary>
            Occurs after the caption is drawn.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IBoolean.OffColor">
      <summary>
            Gets or sets the off color of the Boolean control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IBoolean.OnColor">
      <summary>
            Gets or sets the on color of the Boolean control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IBoolean.Value">
      <summary>
            Gets or sets the value of the Boolean control.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.IBoolean.ValueChanged">
      <summary>
            Occurs after the NationalInstruments.UI.IBoolean.Value changes.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.IGauge">
      <summary>Defines an interface for the gauge control.</summary>
    </member>
    <member name="T:NationalInstruments.UI.IRadialNumericPointer">
      <summary>
            Defines the interface for Measurement Studio Windows Forms controls that display
            a numeric value in a radial scale.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.INumericPointer">
      <summary>
            Defines the interface for all Measurement Studio Windows Forms numeric controls that display a numeric value
            with a pointer and a scale.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.INumericControl">
      <summary>
            Defines the interface for all Measurement Studio .NET controls that display a numeric value.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.INumericControl.MovePrevious">
      <summary>
            Changes the value to the previous value as specified by the 
            NationalInstruments.UI.INumericControl.CoercionMode.
            </summary>
      <returns>true if the value changed to the previous value.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.INumericControl.MoveNext">
      <summary>
            Changes the value to the next value as specified by the 
            NationalInstruments.UI.INumericControl.CoercionMode.
            </summary>
      <returns>true if the value changed to the next value.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.INumericControl.Value">
      <summary>
            Gets or sets the value of the control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.INumericControl.OutOfRangeMode">
      <summary>
            Gets or sets the behavior of the control when the value is set to a value out of range.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.INumericControl.Range">
      <summary>
            Gets or sets the minimum and maximum value of the control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.INumericControl.CoercionIntervalBase">
      <summary>
            Gets or sets the base of the interval used for coercing the value.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.INumericControl.CoercionInterval">
      <summary>
            Gets or sets the interval used for coercing the value.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.INumericControl.CoercionMode">
      <summary>
            Gets or sets the mode used to coerce the value of the control.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.INumericControl.AfterChangeValue">
      <summary>
            Occurs after the value of NationalInstruments.UI.INumericControl.Value 
            has changed.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.INumericControl.BeforeChangeValue">
      <summary>
            Occurs before the value of NationalInstruments.UI.INumericControl.Value 
            changes, allowing for the change event to be canceled.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.INumericPointer.GetStyle">
      <summary>
            Gets the style that determines the appearance of the control.
            </summary>
      <returns>
            A NationalInstruments.UI.NumericPointerStyle that determines
            the appearance of the control.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.INumericPointer.AntiAliased">
      <summary>
            Gets or sets a value indicating if the control draws anti-aliased.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.INumericPointer.AutoDivisionSpacing">
      <summary>
            Gets or sets a value indicating if the scale automatically calculates the location of tick marks.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.INumericPointer.CustomDivisions">
      <summary>
            Gets the collection of custom divisions on the scale.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.INumericPointer.MajorDivisions">
      <summary>
            Gets the major divisions on the scale.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.INumericPointer.MinorDivisions">
      <summary>
            Gets the minor divisions on the scale.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.INumericPointer.ScaleLogBase">
      <summary>
            Gets or sets the base of the logarithm to use for a logarithmic scale.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.INumericPointer.ScaleType">
      <summary>
            Gets or sets the type of the scale.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.INumericPointer.ScaleBaseLineVisible">
      <summary>
            Gets or sets a value indicating if the base line connecting the tick marks is displayed.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.INumericPointer.ScaleBaseLineColor">
      <summary>
            Gets or sets the color of the base line connecting the tick marks.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.INumericPointer.ScaleVisible">
      <summary>
            Gets or sets a value indicating if the scale is displayed.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.INumericPointer.PointerColor">
      <summary>
            Gets or sets the color of the pointer on the control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.INumericPointer.ToolTipsEnabled">
      <summary>
            Gets or sets a value indicating if the value of the control is shown in a tooltip 
            when the mouse hovers over the pointer.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.INumericPointer.ToolTipFormat">
      <summary>
            Gets or sets the format string used to format the value displayed in the tooltip.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IRadialNumericPointer.DialColor">
      <summary>
            Gets or sets the color of the circular area containing the pointer.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IRadialNumericPointer.ScaleArc">
      <summary>
            Gets or sets the arc on which the scale is drawn.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IGauge.SpindleColor">
      <summary>
            Gets or sets the color of the base that connects the pointer to the gauge.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IGauge.SpindleVisible">
      <summary>
            Gets or sets a value indicating if the base that connects the pointer to the gauge is visible.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IGauge.GaugeStyle">
      <summary>
            Gets or sets the style that determines the appearance of the gauge.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.IGraph">
      <summary>
            Defines the interface for all graph controls.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.IGraph.ClearData">
      <summary>
            Removes all data from the history of all plots on the graph.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.IGraph.GetPlotCollection">
      <summary>
            Returns the collection of plots on the graph.
            </summary>
      <returns>
            An System.Collections.IList that contains the plot objects on the graph.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.IGraph.PointToVirtual(System.Drawing.Point)">
      <summary>
            Converts the location of the specified client coordinate to a virtual coordinate with respect to the plot area bounds.
            </summary>
      <param name="point">
            The System.Drawing.Point in client coordinates to convert.
            </param>
      <returns>
            A System.Drawing.PointF that represents the converted System.Drawing.Point, <paramref name="point"></paramref>,
            in virtual coordinates.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.IGraph.RectangleToVirtual(System.Drawing.Rectangle)">
      <summary>
            Converts the size and location of the specified client rectangle to virtual coordinates with respect to the plot area bounds.
            </summary>
      <param name="rectangle">
            The System.Drawing.RectangleF in client coordinates to convert.
            </param>
      <returns>
            A System.Drawing.RectangleF that represent the converted System.Drawing.Rectangle, <paramref name="rectangle"></paramref>,
            in virtual coordinates.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.IGraph.VirtualToPoint(System.Drawing.PointF)">
      <summary>
            Converts the location of the specified virtual point to a client coordinate with respect to the plot area bounds.
            </summary>
      <param name="virtualPoint">
            The System.Drawing.PointF in virtual coordinates to convert.
            </param>
      <returns>
            A System.Drawing.Point that represents the converted System.Drawing.PointF, <paramref name="virtualPoint"></paramref>,
            in client coordinates.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.IGraph.VirtualToRectangle(System.Drawing.RectangleF)">
      <summary>
            Converts the size and location of the specified virtual rectangle to client coordinates with respect to the plot area bounds.
            </summary>
      <param name="virtualRectangle">
            The System.Drawing.RectangleF in virtual coordinates to convert.
            </param>
      <returns>
            A System.Drawing.Rectangle that represents the converted System.Drawing.RectangleF, <paramref name="virtualRectangle"></paramref>,
            in client coordinates.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.IGraph.ZoomAroundPoint(System.Single)">
      <summary>
            Zooms around the center of the plot area using the specified zoom factor.
            </summary>
      <param name="zoomFactor">
            The percentage to zoom by.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IGraph.ZoomAroundPoint(System.Single,System.Single,System.Single)">
      <summary>
            Zooms around the specified x and y coordinates with the specified zoom factor.
            </summary>
      <param name="zoomFactor">
            The percentage to zoom by.
            </param>
      <param name="virtualX">
            The horizontal position of the point to zoom around in virtual coordinates.
            </param>
      <param name="virtualY">
            The vertical position of the point to zoom around in virtual coordinates.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IGraph.ZoomAroundPoint(System.Single,System.Drawing.PointF)">
      <summary>
            Zooms around the specified point with the specified zoom factor.
            </summary>
      <param name="zoomFactor">
            The percentage to zoom by.
            </param>
      <param name="virtualPoint">
            The System.Drawing.PointF, in virtual coordinates, to zoom around.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IGraph.ZoomXY(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Zooms to the region of the plot area specified by the x location, y location, width, and height. 
            </summary>
      <param name="virtualX">The horizontal position, in virtual coordinates, of the left-bottom corner of the region of the plot area to zoom.
            </param>
      <param name="virtualY">
            The vertical position, in virtual coordinates, of the left-bottom corner of the region of the plot area to zoom.
            </param>
      <param name="virtualWidth">
            The width of the region of the plot area to zoom in virtual coordinates.
            </param>
      <param name="virtualHeight">
            The height of the region of the plot area to zoom in virtual coordinates.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IGraph.ZoomXY(System.Drawing.RectangleF)">
      <summary>
            Zooms to the region of the plot area specified by the rectangle.
            </summary>
      <param name="virtualRectangle">
            The System.Drawing.RectangleF that specifies the region of the plot area to zoom in virtual coordinates.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IGraph.PanXY(System.Single,System.Single)">
      <summary>
            Pans the plot area according to the specified horizontal and vertical factors.
            </summary>
      <param name="xFactor">
            The horizontal factor.
            </param>
      <param name="yFactor">
            The vertical factor.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IGraph.UndoZoomPan">
      <summary>
            Reverts the last zoom or pan operation.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.IGraph.ResetZoomPan">
      <summary>
            Reverts all zoom and pan operations to restore the plot area to its initial state.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.IGraph.DrawPlotAreaImage(NationalInstruments.UI.ComponentDrawArgs)">
      <summary>
            Draws the background image of the plot area.
            </summary>
      <param name="args">
            A NationalInstruments.UI.ComponentDrawArgs that contains the drawing data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IGraph.DrawGridLines(NationalInstruments.UI.ComponentDrawArgs)">
      <summary>
            Draws the grid lines in the plot area of the graph.
            </summary>
      <param name="args">
            A NationalInstruments.UI.ComponentDrawArgs that contains the drawing data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IGraph.DrawPlotAreaComponents(NationalInstruments.UI.ComponentDrawArgs)">
      <summary>
            Draws the components contained in the plot area of the graph, such as plots and cursors.
            </summary>
      <param name="args">
            A NationalInstruments.UI.ComponentDrawArgs that contains the drawing data.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.IGraph.PlotAreaBorder">
      <summary>
            Gets or sets the border style of the plot area.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IGraph.PlotAreaBounds">
      <summary>
            Gets the rectangle that represents the plot area of the graph.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IGraph.PlotAreaColor">
      <summary>
            Gets or sets the color of the plot area of the graph.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IGraph.PlotAreaImage">
      <summary>
            Gets or sets the image that is displayed in the plot area of the graph.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IGraph.PlotAreaImageAlignment">
      <summary>
            Gets or sets the alignment of the image that is displayed in the plot area of the graph.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.IGraph.AfterDrawPlotArea">
      <summary>
            Occurs after the plot area is drawn.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.IGraph.BeforeDrawPlotArea">
      <summary>
            Occurs before the plot area is drawn.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.IGraph.PlotsChanged">
      <summary>
            Occurs when the content of the graph plot collection changes.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.IKnob">
      <summary>
            Defines an interface for the knob control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IKnob.KnobStyle">
      <summary>
            Gets or sets the style that determines the appearance of the knob.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.ILed">
      <summary>
            Defines an interface for all LED controls.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ILed.LedStyle">
      <summary>
            Gets or sets the visual style of the LED.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.ILegend">
      <summary>
            Defines the interface for all legend controls.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ILegend.ItemSize">
      <summary>
            Gets or sets the size of the symbols in the legend control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ILegend.Items">
      <summary>
            Gets the collection of legend items in the legend.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.ILegend.BeforeDrawItem">
      <summary>
            Occurs before a legend item is drawn.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.ILegend.AfterDrawItem">
      <summary>
            Occurs after a legend item is drawn.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.ILinearNumericPointer">
      <summary>
            Defines the interface for Measurement Studio Windows Forms numeric controls that display a 
            numeric value in a linear scale.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ILinearNumericPointer.FillMode">
      <summary>
            Gets or sets the direction for filling the fill area of the control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ILinearNumericPointer.FillBaseValue">
      <summary>
            Gets or sets the value at which the fill begins.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ILinearNumericPointer.FillColor">
      <summary>
            Gets or sets the color of the fill area of the control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ILinearNumericPointer.FillStyle">
      <summary>
            Gets or sets the style used to draw the fill color.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ILinearNumericPointer.FillBackColor">
      <summary>
            Gets or sets the color of the background of the fill area.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ILinearNumericPointer.ScalePosition">
      <summary>
            Gets or sets the horizontal or vertical orientation of the control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ILinearNumericPointer.InvertedScale">
      <summary>
            Gets or sets a value indicating if the scale is inverted.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.ImageAlignment">
      <summary>
            Specifies the alignment of an image within an enclosed bounds.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.ImageAlignment.Center">
      <summary>
            The image is centered within the bounds.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.ImageAlignment.Tile">
      <summary>
            The image is repeated within the bounds.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.ImageAlignment.Stretch">
      <summary>
            The image is stretched to fit the bounds.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.ImageType">
      <summary>
            Specifies the format, content type, and file extension of an image.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.ImageType.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.ImageType class.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ImageType.UnderlyingType">
      <summary>
            Gets the underlying type of an enum object value.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ImageType.ImageFormat">
      <summary>
            Gets the format of the image.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ImageType.Extension">
      <summary>
            Gets the file extension of the image.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ImageType.ContentType">
      <summary>
            Gets the Multipurpose Internet Mail Extensions (MIME) content type of the image.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ImageType.Bmp">
      <summary>
            Gets an NationalInstruments.UI.ImageType for bitmap (BMP) images.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ImageType.Gif">
      <summary>
            Gets an NationalInstruments.UI.ImageType for Graphics Interchange Format (GIF) images.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ImageType.Jpeg">
      <summary>
            Gets an NationalInstruments.UI.ImageType for Joint Photographic Experts Group (JPEG)
            images.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ImageType.Png">
      <summary>
            Gets an NationalInstruments.UI.ImageType for W3C Portable Network Graphics (PNG) images.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.IMeter">
      <summary>
            Defines an interface for the meter control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IMeter.SpindleColor">
      <summary>
            Gets or sets the color of the base that connects the pointer to the meter.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IMeter.SpindleVisible">
      <summary>
            Gets or sets a value indicating if the base that connects the pointer to the meter is visible.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IMeter.MeterStyle">
      <summary>
            Gets or sets the style that determines the appearance of the meter.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.INumericValueSource">
      <summary>
            Defines the interface for all Measurement Studio controls that function as a numeric value source.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.INumericValueSource.GetValue">
      <summary>
            Gets the value of the control.
            </summary>
      <returns>
            The value of the control.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.INumericValueSource.SetValue(System.Double,NationalInstruments.UI.Action)">
      <summary>
            Sets the value of the control.
            </summary>
      <param name="value">
            The value of the control.
            </param>
      <param name="action">
            The source of the NationalInstruments.UI.Action that caused the event.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.INumericValueSource.MovePrevious(NationalInstruments.UI.Action)">
      <summary>
            Moves the value of the control to the previous value.
            </summary>
      <param name="action">
            The source of the NationalInstruments.UI.Action that caused the event.
            </param>
      <returns>true if the value moved to the previous value.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.INumericValueSource.MoveNext(NationalInstruments.UI.Action)">
      <summary>
            Moves the value of the control to the next value.
            </summary>
      <param name="action">
            The source of the NationalInstruments.UI.Action that caused the event.
            </param>
      <returns>true if the value moved to the next value.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.INumericValueSource.Range">
      <summary>
            Gets an ordered pair of minimum and maximum values that defines the range of the control.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.INumericValueSource.Disposed">
      <summary>
            Occurs when the NationalInstruments.UI.INumericValueSource has been disposed.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.INumericValueSource.AfterChangeValue">
      <summary>
            Occurs after the value of the control has changed.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.INumericValueSource.BeforeChangeValue">
      <summary>
            Occurs before the value of the control changes, allowing for the change event to be cancelled.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.IScatterGraph">
      <summary>
            Defines the interface for graphs that accept both x and y data values.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.IXYGraph">
      <summary>
            Defines the interface for graphs that plot x and y System.Double data values on a set of x and y axes.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.IXYGraph.ZoomAroundPoint(System.Single,NationalInstruments.UI.XYPlot,System.Double,System.Double)">
      <summary>
            Zooms around the specified data point with the specified zoom factor and reference plot.
            </summary>
      <param name="zoomFactor">
            The percentage to zoom by.
            </param>
      <param name="referencePlot">
            An NationalInstruments.UI.XYPlot to use as the context for <paramref name="xData"></paramref>
            and <paramref name="yData"></paramref>.
            </param>
      <param name="xData">
            The x data value to zoom around.
            </param>
      <param name="yData">
            The y data value to zoom around.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IXYGraph.ZoomXY(NationalInstruments.UI.XYPlot,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Zooms to the region of the plot area specified by the x location, y location, region width, region height, and
            reference plot.
            </summary>
      <param name="referencePlot">
            An NationalInstruments.UI.XYPlot to use as the context for <paramref name="xData"></paramref>,
            <paramref name="yData"></paramref>, <paramref name="width"></paramref> and <paramref name="height"></paramref>.
            </param>
      <param name="xData">
            The x data value of the corner of the plot area region to zoom.
            </param>
      <param name="yData">
            The y data value of the corner of the plot area region to zoom.
            </param>
      <param name="width">
            The width, in data units, of the plot area region to zoom.
            </param>
      <param name="height">
            The height, in data units, of the plot area region to zoom.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.IXYGraph.Cursors">
      <summary>
            Gets the collection of plot area cursors on the graph.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IXYGraph.XAxes">
      <summary>
            Gets the collection of x axes on the graph.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IXYGraph.Annotations">
      <summary>
            Gets the collection of annotations.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IXYGraph.YAxes">
      <summary>
            Gets the collection of y axes on the graph.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.IXYGraph.AfterDrawPlot">
      <summary>
            Occurs after a plot is drawn.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.IXYGraph.AfterDrawCursor">
      <summary>
            Occurs after a cursor is drawn.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.IXYGraph.BeforeDrawPlot">
      <summary>
            Occurs before a plot is drawn.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.IXYGraph.BeforeDrawCursor">
      <summary>
            Occurs before a cursor is drawn.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.IXYGraph.PlotDataChanged">
      <summary>
            Occurs when a new set of data is plotted on a plot that is contained in the graph plot collection.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.IXYGraph.XAxesChanged">
      <summary>
            Occurs when the content of the NationalInstruments.UI.IXYGraph.XAxes collection
            changes.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.IXYGraph.XAxisRangeChanged">
      <summary>
            Occurs when the range of an x-axis in the NationalInstruments.UI.IXYGraph.XAxes collection
            of the graph changes.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.IXYGraph.YAxesChanged">
      <summary>
            Occurs when the content of the NationalInstruments.UI.IXYGraph.YAxes collection
            changes.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.IXYGraph.YAxisRangeChanged">
      <summary>
            Occurs when the range of a y-axis in the NationalInstruments.UI.IXYGraph.YAxes collection
            of the graph changes.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.IXYGraph.CursorsChanged">
      <summary>
            Occurs when the content of the NationalInstruments.UI.IXYGraph.Cursors collection
            changes.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.IXYGraph.AnnotationsChanged">
      <summary>
            Occurs when the content of the NationalInstruments.UI.IXYGraph.Annotations collection
            changes.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.IScatterGraph.PlotXY(System.Double,System.Double)">
      <summary>
            Plots a single y value against a single x value.
            </summary>
      <param name="xData">
            The x value to plot.
            </param>
      <param name="yData">
            The y value to plot.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IScatterGraph.PlotXY(System.Double[],System.Double[])">
      <summary>
            Plots an array of y values against an array of x values.
            </summary>
      <param name="xData">
            The array of x values to plot.
            </param>
      <param name="yData">
            The array of y values to plot.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IScatterGraph.PlotXYAppend(System.Double,System.Double)">
      <summary>
            Plots a single y value against a single x value by appending the x and y value to the
            existing data.
            </summary>
      <param name="xData">
            The x value to append.
            </param>
      <param name="yData">
            The y value to append.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IScatterGraph.PlotXYAppend(System.Double[],System.Double[])">
      <summary>
            Plots an array of y values against an array of x values by appending the x and y values to 
            the existing data.
            </summary>
      <param name="xData">
            The x values to append.
            </param>
      <param name="yData">
            The y values to append.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IScatterGraph.PlotXYAppendMultiple(System.Double[],System.Double[0:,0:])">
      <summary>
            Plots a two-dimensional array of y values with the default data orientation against an 
            array of x values by appending the x and y values to the existing data.
            </summary>
      <param name="xData">
            The x values to append.
            </param>
      <param name="yData">
            The two-dimensional array of y values to append.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IScatterGraph.PlotXYAppendMultiple(System.Double[],System.Double[0:,0:],NationalInstruments.UI.DataOrientation)">
      <summary>
            Plots a two-dimensional array of y values with the specified orientation against an array
            of x values by appending the x and y values to the existing data.
            </summary>
      <param name="xData">
            The array of x values to append.
            </param>
      <param name="yData">
            The two-dimensional array of y values to append.
            </param>
      <param name="orientation">
            A NationalInstruments.UI.DataOrientation value that specifies the orientation
            of data in <paramref name="yData"></paramref>.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IScatterGraph.PlotYXAppendMultiple(System.Double[],System.Double[0:,0:])">
      <summary>
            Plots a two-dimensional array of x values with the default data orientation against an 
            array of y values by appending the x and y values to the existing data.
            </summary>
      <param name="yData">
            The y values to append.
            </param>
      <param name="xData">
            The two-dimensional array of x values to append.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IScatterGraph.PlotYXAppendMultiple(System.Double[],System.Double[0:,0:],NationalInstruments.UI.DataOrientation)">
      <summary>
            Plots a two-dimensional array of x values with the specified orientation against an array
            of y values by appending the x and y values to the existing data.
            </summary>
      <param name="yData">
            The y values to append.
            </param>
      <param name="xData">
            The two-dimensional array of x values to append.
            </param>
      <param name="orientation">
            A NationalInstruments.UI.DataOrientation value that specifies the orientation of
            data in <paramref name="xData"></paramref></param>
    </member>
    <member name="M:NationalInstruments.UI.IScatterGraph.PlotXYMultiple(System.Double[],System.Double[0:,0:])">
      <summary>
            Plots a two-dimensional array of y values with the default orientation against an array 
            of x values.
            </summary>
      <param name="xData">
            The array of x values to plot.
            </param>
      <param name="yData">
            The two-dimensional array of y values to plot.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IScatterGraph.PlotXYMultiple(System.Double[],System.Double[0:,0:],NationalInstruments.UI.DataOrientation)">
      <summary>
            Plots a two-dimensional array of y values with the specified orientation against an array
            of x values.
            </summary>
      <param name="xData">
            The array of x values to plot.
            </param>
      <param name="yData">
            The two-dimensional array of y values to plot.
            </param>
      <param name="orientation">
            A NationalInstruments.UI.DataOrientation value that specifies the orientation 
            of values in <paramref name="yData"></paramref>.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IScatterGraph.PlotYXMultiple(System.Double[],System.Double[0:,0:])">
      <summary>
            Plots a two-dimensional array of x values with the default orientation against an array
            of y values.
            </summary>
      <param name="yData">
            The array of y values to plot.
            </param>
      <param name="xData">
            The two-dimensional array of x values to plot.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IScatterGraph.PlotYXMultiple(System.Double[],System.Double[0:,0:],NationalInstruments.UI.DataOrientation)">
      <summary>
            Plots a two-dimensional array of x values with the specified orientation against an array
            of y values.
            </summary>
      <param name="yData">
            The array of y values to plot.
            </param>
      <param name="xData">
            The two-dimensional array of x values to plot.
            </param>
      <param name="orientation">
            A NationalInstruments.UI.DataOrientation value that specifies the orientation of
            data in <paramref name="xData"></paramref>.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.IScatterGraph.DefaultDataOrientation">
      <summary>
            Gets or sets the default orientation of values in a two-dimensional array.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IScatterGraph.Plots">
      <summary>
            Gets the collection of plots on the graph.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.ISlide">
      <summary>
            Defines an interface for the slide control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ISlide.SlideStyle">
      <summary>
            Gets or sets the style that determines the appearance of the slide.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.ISwitch">
      <summary>
            Defines an interface for the switch control.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ISwitch.SwitchStyle">
      <summary>
            Gets or sets the style of the switch.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.ITank">
      <summary>
            Defines an interface for the tank control.</summary>
    </member>
    <member name="P:NationalInstruments.UI.ITank.TankStyle">
      <summary>
            Gets or sets the style that determines the appearance of the tank.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.IThermometer">
      <summary>
            Defines an interface for the thermometer control.</summary>
    </member>
    <member name="P:NationalInstruments.UI.IThermometer.ThermometerStyle">
      <summary>
            Gets or sets the style that determines the appearance of the thermometer.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IThermometer.MaximumBulbDiameter">
      <summary>
            Gets or sets the maximum bulb diameter.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.IWaveformGraph">
      <summary>
            Defines the interface for graphs that accept data as a waveform.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotX(System.Double)">
      <summary>
            Plots a single x value against the default starting y value.
            </summary>
      <param name="xData">
            The x value to plot.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotX(System.Double[])">
      <summary>
            Plots an array of x values against the default starting y value using the default increment value.
            </summary>
      <param name="xData">
            The array of x values to plot.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotX(System.Double[],System.Double,System.Double)">
      <summary>
            Plots an array of x values against the specified starting y value using the specified value
            to increment y values.
            </summary>
      <param name="xData">
            The array of x values to plot.
            </param>
      <param name="start">
            The starting y value.
            </param>
      <param name="increment">
            The value to use to increment y values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotX(System.Double[],System.DateTime,System.TimeSpan)">
      <summary>
            Plots an array of x values against the specified System.DateTime as the starting y value using the 
            specified System.TimeSpan to increment y values.
            </summary>
      <param name="xData">
            The array of x values to plot.
            </param>
      <param name="start">
            A System.DateTime that represents the starting y value.
            </param>
      <param name="increment">
            A System.TimeSpan that represents the value to use to increment y values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotXAppend(System.Double)">
      <summary>
            Plots a single x value against a starting y value by appending the x and y value to the existing data.
            </summary>
      <param name="xData">
            The x value to append.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotXAppend(System.Double,System.Double)">
      <summary>
            Plots a single x value against a starting y value by appending the x and y value to the existing data.
            NationalInstruments.UI.IWaveformGraph.PlotXAppend(System.Double) uses the 
            specified value to increment y values.
            </summary>
      <param name="xData">
            The x value to append.
            </param>
      <param name="increment">
            The value to use to increment y values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotXAppend(System.Double,System.TimeSpan)">
      <summary>
            Plots a single x value against a starting y value by appending the x and y value to the existing data.
            NationalInstruments.UI.IWaveformGraph.PlotXAppend(System.Double) uses the 
            specified System.TimeSpan to increment y values.
            </summary>
      <param name="xData">
            The x value to append.
            </param>
      <param name="increment">
            A System.TimeSpan that represents the value to use to increment y values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotXAppend(System.Double[])">
      <summary>
            Plots an array of x values against a starting y value by appending the x and y values to the existing data.
            </summary>
      <param name="xData">
            The array of x values to append.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotXAppend(System.Double[],System.Double)">
      <summary>
            Plots an array of x values against a starting y value by appending the x and y values to the existing data.
            NationalInstruments.UI.IWaveformGraph.PlotXAppend(System.Double) uses the 
            specified value to increment y values.
            </summary>
      <param name="xData">
            The array of x values to append.
            </param>
      <param name="increment">
            The value to use to increment y values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotXAppend(System.Double[],System.TimeSpan)">
      <summary>
            Plots an array of x values against a starting y value by appending the x and y value to the existing data.
            NationalInstruments.UI.IWaveformGraph.PlotXAppend(System.Double) uses the 
            specified System.TimeSpan to increment y values.
            </summary>
      <param name="xData">
            The array of x values to append.
            </param>
      <param name="increment">
            A System.TimeSpan that represents the value to use to increment y values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotXAppendMultiple(System.Double[0:,0:])">
      <summary>
            Plots a two-dimensional array of x values with the default data orientation against a 
            starting y value by appending the x and y values to the existing data. 
            </summary>
      <param name="xData">
            The two-dimensional array of x values to plot.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotXAppendMultiple(System.Double[0:,0:],NationalInstruments.UI.DataOrientation,System.Double)">
      <summary>
            Plots a two-dimensional array of x values with the specified orientation against a starting
            y value by appending the x and y values to the existing
            data. NationalInstruments.UI.IWaveformGraph.PlotXAppendMultiple(System.Double[0:,0:]) uses the 
            specified value to increment y values.
            </summary>
      <param name="xData">
            The two-dimensional array of x values to append.
            </param>
      <param name="orientation">
            A NationalInstruments.UI.DataOrientation value that specifies the orientation of
            data in <paramref name="xData"></paramref>.
            </param>
      <param name="increment">
            The value to use to increment y values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotXAppendMultiple(System.Double[0:,0:],NationalInstruments.UI.DataOrientation,System.TimeSpan)">
      <summary>
            Plots a two-dimensional array of x values with the specified orientation against a starting
            y value by appending the x and y values to the existing
            data. NationalInstruments.UI.IWaveformGraph.PlotXAppendMultiple(System.Double[0:,0:]) uses the 
            specified System.TimeSpan to increment y values.
            </summary>
      <param name="xData">
            The two-dimensional array of x values to append.
            </param>
      <param name="orientation">
            A NationalInstruments.UI.DataOrientation value that specifies the orientation of
            data in <paramref name="xData"></paramref>.
            </param>
      <param name="increment">
            A System.TimeSpan that represents the value to use to increment y values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotXMultiple(System.Double[0:,0:])">
      <summary>
            Plots a two-dimensional array of x values with the default data orientation against 
            the default starting y value.</summary>
      <param name="xData">
            The two-dimensional array of x values to plot.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotXMultiple(System.Double[0:,0:],NationalInstruments.UI.DataOrientation,System.Double,System.Double)">
      <summary>
            Plots a two-dimensional array of x values with the specified data orientation against 
            the specified starting y value. NationalInstruments.UI.IWaveformGraph.PlotXMultiple(System.Double[0:,0:]) uses the 
            specified value to increment y values.
            </summary>
      <param name="xData">
            The two-dimensional array of x values to plot.
            </param>
      <param name="orientation">
            A NationalInstruments.UI.DataOrientation value that specifies the orientation of
            data in <paramref name="xData"></paramref>.
            </param>
      <param name="start">
            The starting y value.
            </param>
      <param name="increment">
            The value to use to increment y values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotXMultiple(System.Double[0:,0:],NationalInstruments.UI.DataOrientation,System.DateTime,System.TimeSpan)">
      <summary>
            Plots a two-dimensional array of x values with the specified data orientation against 
            the specified System.DateTime as the starting y value. NationalInstruments.UI.IWaveformGraph.PlotXMultiple(System.Double[0:,0:])
            uses the specified System.TimeSpan to increment y values.
            </summary>
      <param name="xData">
            The two-dimensional array of x values to plot.
            </param>
      <param name="orientation">
            A NationalInstruments.UI.DataOrientation value that specifies the orientation of
            data in <paramref name="xData"></paramref>.
            </param>
      <param name="start">
            A System.DateTime that represents the starting y value.
            </param>
      <param name="increment">
            A System.TimeSpan that represents the value to use to increment y values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotY(System.Double)">
      <summary>
            Plots a single y value against the default starting x value.
            </summary>
      <param name="yData">
            The y value to plot.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotY(System.Double[])">
      <summary>
            Plots an array of y values against the default starting x value using the default increment value.</summary>
      <param name="yData">
            The array of y values to plot.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotY(System.Double[],System.Double,System.Double)">
      <summary>
            Plots an array of y values against the specified starting x value using the specified value
            to increment x values.
            </summary>
      <param name="yData">
            The array of y values to plot.
            </param>
      <param name="start">
            The starting x value.
            </param>
      <param name="increment">
            The value to use increment x values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotY(System.Double[],System.DateTime,System.TimeSpan)">
      <summary>
            Plots an array of y values against the specified System.DateTime as the starting x value using the 
            specified System.TimeSpan to increment x values.
            </summary>
      <param name="yData">
            The array of y values to plot.
            </param>
      <param name="start">
            A System.DateTime that represents the starting x value.
            </param>
      <param name="increment">
            A System.TimeSpan that represents the value to use to increment x values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotYAppend(System.Double)">
      <summary>
            Plots a single y value against a starting x value by appending the x and y value to the existing data.
            </summary>
      <param name="yData">
            The y value to append.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotYAppend(System.Double,System.Double)">
      <summary>
            Plots a single y value against a starting x value by appending the x and y value to the existing data.
            NationalInstruments.UI.IWaveformGraph.PlotYAppend(System.Double) uses the 
            specified value to increment x values.
            </summary>
      <param name="yData">
            The y value to append.
            </param>
      <param name="increment">
            The value to use to increment x values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotYAppend(System.Double,System.TimeSpan)">
      <summary>
            Plots a single y value against a starting x value by appending the x and y value to the existing data.
            NationalInstruments.UI.IWaveformGraph.PlotYAppend(System.Double) uses the 
            specified System.TimeSpan to increment x values.
            </summary>
      <param name="yData">
            The y value to append.
            </param>
      <param name="increment">
            A System.TimeSpan that represents the value to use to increment x values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotYAppend(System.Double[])">
      <summary>
            Plots an array of y values against a starting x value by appending the x and y values to the existing data.
            </summary>
      <param name="yData">
            The y values to append.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotYAppend(System.Double[],System.Double)">
      <summary>
            Plots an array of y values against a starting x value by appending the x and y values to the existing data.
            NationalInstruments.UI.IWaveformGraph.PlotYAppend(System.Double) uses the 
            specified value to increment x values.
            </summary>
      <param name="yData">
            The y values to append.
            </param>
      <param name="increment">
            The value to use to increment x values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotYAppend(System.Double[],System.TimeSpan)">
      <summary>
            Plots a single y value against a starting x value by appending the x and y value to the existing data.
            NationalInstruments.UI.IWaveformGraph.PlotYAppend(System.Double) uses the 
            specified System.TimeSpan to increment x values.
            </summary>
      <param name="yData">
            The y values to append.
            </param>
      <param name="increment">
            A System.TimeSpan that represents the value to use to increment x values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotYAppendMultiple(System.Double[0:,0:])">
      <summary>
            Plots a two-dimensional array of y values with the default data orientation against a 
            starting x value by appending 
            it to the existing data.</summary>
      <param name="yData">
            The two-dimensional array of y values to plot.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotYAppendMultiple(System.Double[0:,0:],NationalInstruments.UI.DataOrientation,System.Double)">
      <summary>
            Plots a two-dimensional array of x values with the specified orientation against a starting
            x value by appending the x and y values to the existing
            data. NationalInstruments.UI.IWaveformGraph.PlotYAppendMultiple(System.Double[0:,0:]) uses the 
            specified value to increment x values.
            </summary>
      <param name="yData">
            The two-dimensional array of y values to append.
            </param>
      <param name="orientation">
            A NationalInstruments.UI.DataOrientation value that specifies the orientation of
            data in <paramref name="yData"></paramref>.
            </param>
      <param name="increment">
            The value to use to increment x values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotYAppendMultiple(System.Double[0:,0:],NationalInstruments.UI.DataOrientation,System.TimeSpan)">
      <summary>
            Plots a two-dimensional array of y values with the specified orientation against a starting
            y value by appending the x and y values to the existing
            data. NationalInstruments.UI.IWaveformGraph.PlotYAppendMultiple(System.Double[0:,0:]) uses the 
            specified System.TimeSpan to increment x values.
            </summary>
      <param name="yData">
            The two-dimensional array of y values to append.
            </param>
      <param name="orientation">
            A NationalInstruments.UI.DataOrientation value that specifies the orientation of
            data in <paramref name="yData"></paramref>.
            </param>
      <param name="increment">
            A System.TimeSpan that represents the value to use to increment x values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotYMultiple(System.Double[0:,0:])">
      <summary>
            Plots a two-dimensional array of y values with the default data orientation against 
            the default starting x value.
            </summary>
      <param name="yData">
            The two-dimensional array of y values to plot.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotYMultiple(System.Double[0:,0:],NationalInstruments.UI.DataOrientation,System.Double,System.Double)">
      <summary>
            Plots a two-dimensional array of y values with the specified data orientation against 
            the specified starting x value. NationalInstruments.UI.IWaveformGraph.PlotYMultiple(System.Double[0:,0:])
            uses the specified value to increment x values.
            </summary>
      <param name="yData">
            The two-dimensional array of y values to plot.
            </param>
      <param name="orientation">
            A NationalInstruments.UI.DataOrientation value that specifies the orientation of
            data in <paramref name="yData"></paramref>.
            </param>
      <param name="start">
            The starting x value.
            </param>
      <param name="increment">
            The value to use to increment x values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.IWaveformGraph.PlotYMultiple(System.Double[0:,0:],NationalInstruments.UI.DataOrientation,System.DateTime,System.TimeSpan)">
      <summary>
            Plots a two-dimensional array of y values with the specified data orientation against 
            the specified System.DateTime as the starting x value. NationalInstruments.UI.IWaveformGraph.PlotYMultiple(System.Double[0:,0:])
            uses the specified System.TimeSpan to increment y values.
            </summary>
      <param name="yData">
            The two-dimensional array of y values to plot.
            </param>
      <param name="orientation">
            A NationalInstruments.UI.DataOrientation value that specifies the orientation of
            data in <paramref name="yData"></paramref>.
            </param>
      <param name="start">
            A System.DateTime that represents the starting x value.
            </param>
      <param name="increment">
            A System.TimeSpan that represents the value to use to increment x values.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.IWaveformGraph.DefaultDataOrientation">
      <summary>
            Gets or sets the default orientation of values in a two-dimensional array.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.IWaveformGraph.Plots">
      <summary>
            Gets the collection of plots on the graph.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.KnobStyle">
      <summary>
            Provides an abstract base class for specifying a knob style
            and also provides a list of pre-defined knob styles.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.KnobStyle.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.KnobStyle class.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.KnobStyle.UnderlyingType">
      <summary>
            Gets the underlying type of an enum object value.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.KnobStyle.RaisedWithThumb">
      <summary>
            Gets a knob with a raised look and a thumb.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.KnobStyle.RaisedWithThinNeedle">
      <summary>
            Gets a knob with a raised look and a thin needle.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.KnobStyle.RaisedWithThumb3D">
      <summary>
            Gets a 3D knob with a raised look and a thumb.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.KnobStyle.RaisedWithThinNeedle3D">
      <summary>
            Gets a 3D knob with a raised look and a thin needle.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.KnobStyle.FlatWithThinNeedle">
      <summary>
            Gets a knob with a flat look and a thin needle.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.LedBlinkMode">
      <summary>
            Specifies when the LED control blinks.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.LedBlinkMode.None">
      <summary>
            The LED does not blink.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.LedBlinkMode.BlinkWhenOn">
      <summary>
            The LED blinks when NationalInstruments.UI.IBoolean.Value is true.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.LedBlinkMode.BlinkWhenOff">
      <summary>
            The LED blinks when NationalInstruments.UI.IBoolean.Value is false.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.LedStyle">
      <summary>
            Provides an abstract base class for specifying an LED style.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.LedStyle.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.LedStyle class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.LedStyle.Draw(System.Object,NationalInstruments.UI.LedStyleDrawArgs)">
      <summary>
            Draws an LED with the specified NationalInstruments.UI.LedStyleDrawArgs.
            </summary>
      <param name="context">
            The object that specifies the context in which NationalInstruments.UI.LedStyle.Draw(System.Object,NationalInstruments.UI.LedStyleDrawArgs) is called.</param>
      <param name="args">
            An NationalInstruments.UI.LedStyleDrawArgs that contains the
            drawing data.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.LedStyle.UnderlyingType">
      <summary>
            Gets the underlying type of an enum object value.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.LedStyle.Round">
      <summary>
            Gets a round LED style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.LedStyle.Round3D">
      <summary>
            Gets a 3D, round LED style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.LedStyle.Square">
      <summary>
            Gets a square LED style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.LedStyle.Square3D">
      <summary>
            Gets a 3D, square LED style.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.LedStyleDrawArgs">
      <summary>
            Provides the data to draw an LED style.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.LedStyleDrawArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Boolean)">
      <summary>
            Initializes	a new instance of the NationalInstruments.UI.LedStyleDrawArgs class with the specified
            graphics, bounds, color, and value.
            </summary>
      <param name="graphics">
            The	System.Drawing.Graphics with which to draw.
            </param>
      <param name="bounds">
            The System.Drawing.Rectangle in which the LED style is drawn. This value is the bounds of the 
            control, excluding the caption, and a 4-pixel thick padding on the sides.
            </param>
      <param name="color">
            The	System.Drawing.Color of the LED style.
            </param>
      <param name="value">
            The	System.Boolean value that is represented by the LED style.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.LegendHitTestInfo">
      <summary>
            Specifies the parts of a legend control that can be hit-tested.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.LegendHitTestInfo.None">
      <summary>
            The portion of a legend outside the items and descriptions.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.LegendHitTestInfo.Item">
      <summary>
            An item part of a legend.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.LegendHitTestInfo.Text">
      <summary>
            A text part of the legend.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.LegendItem">
      <summary>
            Represents an item in a legend control.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.LegendItem.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.LegendItem class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.LegendItem.#ctor(NationalInstruments.UI.ILegendItemSource,System.String)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.LegendItem class with
            the specified legend item source and text.
            </summary>
      <param name="source">
            A value to initialize the NationalInstruments.UI.LegendItem.Source property with.
            </param>
      <param name="text">
            A value to initialize the NationalInstruments.UI.LegendItem.Text property with.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.LegendItem.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the NationalInstruments.UI.LegendItem 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.LegendItem.DrawItem(NationalInstruments.UI.ComponentDrawArgs)">
      <summary>
            Draws the legend item.
            </summary>
      <param name="args">
            A NationalInstruments.UI.ComponentDrawArgs that contains the 
            drawing data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.LegendItem.DrawText(NationalInstruments.UI.ComponentDrawArgs)">
      <summary>
            Draws the legend text.
            </summary>
      <param name="args">
            A NationalInstruments.UI.ComponentDrawArgs that contains the 
            drawing data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.LegendItem.OnBeforeDraw(NationalInstruments.UI.BeforeDrawLegendItemEventArgs)">
      <summary>
            Raises the NationalInstruments.UI.LegendItem.BeforeDraw event.
            </summary>
      <param name="e">
            An NationalInstruments.UI.BeforeDrawLegendItemEventArgs that contains the 
            event data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.LegendItem.OnAfterDraw(NationalInstruments.UI.AfterDrawLegendItemEventArgs)">
      <summary>
            Raises the NationalInstruments.UI.LegendItem.AfterDraw event.
            </summary>
      <param name="e">
            An NationalInstruments.UI.AfterDrawLegendItemEventArgs that contains the
            event data.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.LegendItem.Text">
      <summary>
            Gets or sets the description of the legend item.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.LegendItem.Source">
      <summary>
            Gets or sets the object to display for the legend item.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.LegendItem.BeforeDraw">
      <summary>
            Occurs before the legend item is drawn.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.LegendItem.AfterDraw">
      <summary>
            Occurs after the legend item has been drawn.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.LegendItemCollection">
      <summary>
            Represents a strongly typed collection of NationalInstruments.UI.LegendItem objects.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.LegendItemCollection.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.LegendItemCollection class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.LegendItemCollection.#ctor(NationalInstruments.UI.LegendItem[])">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.LegendItemCollection class
            from an array of NationalInstruments.UI.LegendItem objects.
            </summary>
      <param name="item">
            Array of NationalInstruments.UI.LegendItem objects to copy.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.LegendItemCollection.#ctor(NationalInstruments.UI.LegendItemCollection)">
      <summary>
            Initializes a new instance of NationalInstruments.UI.LegendItemCollection
            from an existing collection.
            </summary>
      <param name="item">
            The NationalInstruments.UI.LegendItemCollection to copy.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.LegendItemCollection.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.LegendItemCollection.Add(NationalInstruments.UI.LegendItem)">
      <summary>
            Adds an item to end of the collection.
            </summary>
      <param name="item">
            Item to add to the collection.
            </param>
      <returns>
            The array index of the added item.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.LegendItemCollection.AddRange(NationalInstruments.UI.LegendItem[])">
      <summary>
            Adds an array of NationalInstruments.UI.LegendItem objects to the end of the collection.
            </summary>
      <param name="item">
            Array of NationalInstruments.UI.LegendItem objects to add to the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.LegendItemCollection.AddRange(NationalInstruments.UI.LegendItemCollection)">
      <summary>
            Adds a collection of NationalInstruments.UI.LegendItem objects to the end of the collection.
            </summary>
      <param name="item">
            Collection of NationalInstruments.UI.LegendItem objects to add to the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.LegendItemCollection.Clear">
      <summary>
            Removes all items from the collection.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.LegendItemCollection.Contains(NationalInstruments.UI.LegendItem)">
      <summary>
            Determines if the specified element is in the collection.
            </summary>
      <param name="item">Item to locate in the collection.</param>
      <returns>true if the collection contains <paramref name="item"></paramref>.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.LegendItemCollection.CopyTo(NationalInstruments.UI.LegendItem[],System.Int32)">
      <summary>
            Copies the collection to an array or a portion of an array.
            </summary>
      <param name="array">
            Destination array for the collection.
            </param>
      <param name="index">
            The index in the target array at which you want to begin copying the collection to.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.LegendItemCollection.IndexOf(NationalInstruments.UI.LegendItem)">
      <summary>
            Returns the zero-based index of the first occurrence of an item in the collection.
            </summary>
      <param name="item">
            Item to search for.
            </param>
      <returns>
            Index of the item. If the item is not found, returns -1.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.LegendItemCollection.Insert(System.Int32,NationalInstruments.UI.LegendItem)">
      <summary>
            Inserts an item into the collection at the specified index.
            </summary>
      <param name="index">
            Index to insert the item at.
            </param>
      <param name="item">
            Item to insert into the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.LegendItemCollection.GetEnumerator">
      <summary>
            Returns an enumerator that you can use to iterate through the collection.
            </summary>
      <returns>
            The enumerator for the collection.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.LegendItemCollection.Remove(NationalInstruments.UI.LegendItem)">
      <summary>
            Removes the first occurrence of the specified item.
            </summary>
      <param name="item">
            Item to remove from the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.LegendItemCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the item at the specified index.
            </summary>
      <param name="index">
            The zero-based index of the item to remove.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.LegendItemCollection.Item(System.Int32)">
      <summary>
            Gets or sets the NationalInstruments.UI.LegendItem at the specified index. In Visual C#, this property 
            is the indexer.
            </summary>
      <param name="index">
            The zero-based index of the entry to locate in the collection.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.LegendItemCollection.Count">
      <summary>
            Gets the number of elements in the NationalInstruments.UI.LegendItemCollection.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.LinearNumericPointerHitTestInfo">
      <summary>
            Specifies the parts of a linear numeric pointer control that can be hit-tested.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.LinearNumericPointerHitTestInfo.None">
      <summary>
            The portion of the linear numeric pointer outside the fill, pointer, and scale area.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.LinearNumericPointerHitTestInfo.Pointer">
      <summary>
            The pointer, if any, of the linear numeric control.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.LinearNumericPointerHitTestInfo.Fill">
      <summary>
            The filled portion of the fill area.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.LinearNumericPointerHitTestInfo.FillBackground">
      <summary>
            The empty (non-filled) portion of the fill area.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.LinearNumericPointerHitTestInfo.ScaleArea">
      <summary>
            The area containing the scale.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.LinearNumericPointerInteractionModes">
      <summary>
            Defines the set of user interactions that are possible within a linear numeric pointer.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.LinearNumericPointerInteractionModes.Indicator">
      <summary>
            No interaction.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.LinearNumericPointerInteractionModes.DragPointer">
      <summary>
            The pointer can be dragged.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.LinearNumericPointerInteractionModes.SnapPointer">
      <summary>
            The pointer can be snapped to a value.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.LinearNumericPointerStyle">
      <summary>
            Provides an abstract base class for linear pointer styles.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.LinearNumericPointerStyle.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.LinearNumericPointerStyle class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.LinearNumericPointerStyle.HitTest(NationalInstruments.UI.ILinearNumericPointer,System.Drawing.Rectangle,System.Int32,System.Int32)">
      <summary>
            Returns a NationalInstruments.UI.LinearNumericPointerHitTestInfo that specifies where on the style
            the specified point is located. 
            </summary>
      <param name="context">
            An NationalInstruments.UI.ILinearNumericPointer with additional context information.
            </param>
      <param name="bounds">
            A System.Drawing.Rectangle representing the bounds of the style.
            </param>
      <param name="x">
            The horizontal location of the point to be hit-tested, in client coordinates.
            </param>
      <param name="y">
            The vertical location of the point to be hit-tested, in client coordinates.
            </param>
      <returns>
            A NationalInstruments.UI.LinearNumericPointerHitTestInfo that specifies where on the style 
            the <paramref name="x"></paramref> and <paramref name="y"></paramref> coordinate is located.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.LinearNumericPointerStyle.DrawFillArea(NationalInstruments.UI.ILinearNumericPointer,NationalInstruments.UI.LinearNumericPointerStyleDrawArgs,System.Double)">
      <summary>
            Draws the fill area of the style.
            </summary>
      <param name="context">
            An NationalInstruments.UI.ILinearNumericPointer with additional context information.
            </param>
      <param name="args">
            A NationalInstruments.UI.LinearNumericPointerStyleDrawArgs that contains the
            drawing data.
            </param>
      <param name="value">
            The value used to draw the fill. 
            </param>
    </member>
    <member name="M:NationalInstruments.UI.LinearNumericPointerStyle.GetScaleReferenceBounds(NationalInstruments.UI.ILinearNumericPointer,System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            Gets a System.Drawing.Rectangle that provides a reference for the bounds of the scale.
            </summary>
      <param name="context">
            An NationalInstruments.UI.ILinearNumericPointer with additional context information.
            </param>
      <param name="graphics">
            The System.Drawing.Graphics used for drawing.
            </param>
      <param name="bounds">
            A System.Drawing.Rectangle representing the bounds of the style.
            </param>
      <returns>
            The System.Drawing.Rectangle that provides a reference for the bounds of the scale.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.LinearNumericPointerStyle.Draw(NationalInstruments.UI.INumericPointer,NationalInstruments.UI.NumericPointerStyleDrawArgs,System.Double)">
      <summary>
            Draws the style at the specified value.
            </summary>
      <param name="context">
            An NationalInstruments.UI.INumericPointer with additional context information. 
            </param>
      <param name="args">
            A NationalInstruments.UI.NumericPointerStyleDrawArgs that contains the
            drawing data.
            </param>
      <param name="value">
            The value used to draw the style.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.LinearNumericPointerStyleDrawArgs">
      <summary>
            Provides the data to draw a NationalInstruments.UI.LinearNumericPointerStyle.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.NumericPointerStyleDrawArgs">
      <summary>
            Provides the data to draw a numeric pointer style.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.NumericPointerStyleDrawArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.NumericPointerStyleDrawArgs class with the specified
            graphics and bounds.
            </summary>
      <param name="graphics">
            The System.Drawing.Graphics with which to draw.
            </param>
      <param name="bounds">
            A System.Drawing.Rectangle representing the bounds in which the style is drawn.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.NumericPointerStyleDrawArgs.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.NumericPointerStyleDrawArgs.Bounds">
      <summary>
            Gets the rectangle in which the style is drawn.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.LinearNumericPointerStyleDrawArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.LinearNumericPointerStyleDrawArgs class with the specified
            graphics and bounds.
            </summary>
      <param name="graphics">
            The System.Drawing.Graphics with which to draw.
            </param>
      <param name="bounds">
            The System.Drawing.Rectangle in which the NationalInstruments.UI.LinearNumericPointerStyle is drawn.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.LineStep">
      <summary>
            Specifies the style for connecting two consecutive points.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.LineStep.None">
      <summary>
            Points are connected with a straight line.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.LineStep.XYStep">
      <summary>
            Points are connected in an XY step.
            If the current point is represented as (x0, y0) and the next point is represented as
            (x1, y1), then a line from (x0, y0) to (x1, y0) and (x1, y0) to (x1, y1) represents
            an XY step.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.LineStep.YXStep">
      <summary>
            Points are connected in a YX step.
            If the current point is represented as (x0, y0) and the next point is represented as
            (x1, y1), then a line from (x0, y0) to (x0, y1) and (x0, y1) to (x1, y1) represents
            a YX step.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.LineStep.CenteredXYStep">
      <summary>
            Points are connected in an XY step with the x coordinate centered on the line.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.LineStep.CenteredYXStep">
      <summary>
            Points are connected in a YX step with the y coordinate centered on the line.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.LineStyle">
      <summary>
            Provides an abstract base class for specifying a line style 
            and also provides a list of pre-defined line styles.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.LineStyle.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.LineStyle class.</summary>
    </member>
    <member name="M:NationalInstruments.UI.LineStyle.CreatePen(System.Object,NationalInstruments.UI.LineStyleDrawArgs)">
      <summary>
            Creates a pen with the specified NationalInstruments.UI.LineStyleDrawArgs.
            </summary>
      <param name="context">
            An System.Object with additional context information.
            </param>
      <param name="args">
            A NationalInstruments.UI.LineStyleDrawArgs that contains the 
            drawing data.
            </param>
      <returns>
            A System.Drawing.Pen to use to draw the line style.  If null is returned, a System.NotSupportedException
            is thrown at the time this method is called.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.LineStyle.UnderlyingType">
      <summary>
            Gets the underlying type of an enum object value.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.LineStyle.None">
      <summary>
            Gets a value that indicates that there is no line.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.LineStyle.DashDotDot">
      <summary>
            Gets a line with a dash-dot-dot line style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.LineStyle.DashDot">
      <summary>
            Gets a line with a dash-dot line style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.LineStyle.Dash">
      <summary>
            Gets a line with a dashed line style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.LineStyle.Dot">
      <summary>
            Gets a line with a dotted line style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.LineStyle.Solid">
      <summary>
            Gets a line with a solid line style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.LineStyle.IsContextDependent">
      <summary>
            Gets a value indicating whether the line style is sensitive to changes in the context.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.LineStyleDrawArgs">
      <summary>
            Provides data for drawing line styles.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.LineStyleDrawArgs.#ctor(System.Drawing.Color,System.Single)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.LineStyleDrawArgs class
            with the specified line color and width.
            </summary>
      <param name="color">
            The System.Drawing.Color of the line.
            </param>
      <param name="width">
            The width of the line.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.LineStyleDrawArgs.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Single)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.LineStyleDrawArgs class
            with the specified context bounds, line color, and width.
            </summary>
      <param name="contextBounds">
            A System.Drawing.Rectangle representing the bounds in which the line is drawn.
            </param>
      <param name="color">
            The System.Drawing.Color of the line.
            </param>
      <param name="width">
            The width of the line.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.LineStyleDrawArgs.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.LineStyleDrawArgs.ContextBounds">
      <summary>
            Gets a rectangle representing the bounds in which the line is drawn.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.LineStyleDrawArgs.Color">
      <summary>
            Gets the color of the line.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.LineStyleDrawArgs.Width">
      <summary>
            Gets the width of the line.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.MeterStyle">
      <summary>
            Provides an abstract base class for specifying a meter style
            and also provides a list of pre-defined meter styles.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.MeterStyle.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.MeterStyle class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.MeterStyle.DrawSpindle(NationalInstruments.UI.IMeter,NationalInstruments.UI.RadialNumericPointerStyleDrawArgs)">
      <summary>
            Draws the spindle of the style.
            </summary>
      <param name="context">
            An NationalInstruments.UI.IMeter with additional information.
            </param>
      <param name="args">
            A NationalInstruments.UI.RadialNumericPointerStyleDrawArgs that contains the
            drawing data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.MeterStyle.Draw(NationalInstruments.UI.INumericPointer,NationalInstruments.UI.NumericPointerStyleDrawArgs,System.Double)">
      <summary>
            Draws the style at the specified value.
            </summary>
      <param name="context">
            An NationalInstruments.UI.INumericPointer with additional context information. 
            </param>
      <param name="args">
            A NationalInstruments.UI.NumericPointerStyleDrawArgs that contains the
            drawing data.
            </param>
      <param name="value">
            The value used to draw the style.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.MeterStyle.UnderlyingType">
      <summary>
            Gets the underlying type of an enum object value.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.MeterStyle.FlatWithThickNeedle">
      <summary>
            Gets a meter with a flat look and a thick needle.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.MeterStyle.FlatWithThinNeedle">
      <summary>
            Gets a meter with a flat look and a thin needle.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.MeterStyle.RaisedWithThickNeedle">
      <summary>
            Gets a meter with a raised look and a thick needle.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.MeterStyle.RaisedWithThinNeedle">
      <summary>
            Gets a meter with a raised look and a thin needle.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.NumericCoercionMode">
      <summary>
            Provides an abstract base class for specifying the algorithm used
            to coerce a value and also provides a list of pre-defined coercion modes.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.NumericCoercionMode.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.NumericCoercionMode class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.NumericCoercionMode.GetPreviousValue(NationalInstruments.UI.INumericControl,NationalInstruments.UI.NumericCoercionModeArgs)">
      <summary>
            Gets the previous value in the sequence of coerced values.
            </summary>
      <param name="context">
            An NationalInstruments.UI.INumericControl implementation that
            specifies the context in which NationalInstruments.UI.NumericCoercionMode.GetPreviousValue(NationalInstruments.UI.INumericControl,NationalInstruments.UI.NumericCoercionModeArgs)
            is called.
            </param>
      <param name="args">
            A NationalInstruments.UI.NumericCoercionModeArgs that contains
            the coercion data.
            </param>
      <returns>
            A value representing the previous value in the sequence of coerced values.
            <note type="note"></note></returns>
    </member>
    <member name="M:NationalInstruments.UI.NumericCoercionMode.GetNextValue(NationalInstruments.UI.INumericControl,NationalInstruments.UI.NumericCoercionModeArgs)">
      <summary>
            Gets the next value in the sequence of coerced values.
            </summary>
      <param name="context">
            An NationalInstruments.UI.INumericControl implementation that
            specifies the context in which NationalInstruments.UI.NumericCoercionMode.GetNextValue(NationalInstruments.UI.INumericControl,NationalInstruments.UI.NumericCoercionModeArgs)
            is called.
            </param>
      <param name="args">
            A NationalInstruments.UI.NumericCoercionModeArgs that contains
            the coercion data.
            </param>
      <returns>
            A value representing the next value in the sequence of coerced values.
            <note type="note"></note></returns>
    </member>
    <member name="M:NationalInstruments.UI.NumericCoercionMode.CoerceValue(NationalInstruments.UI.INumericControl,NationalInstruments.UI.NumericCoercionModeArgs)">
      <summary>
            Coerces the specified value with respect to the specified context.
            </summary>
      <param name="context">
            An NationalInstruments.UI.INumericControl implementation that
            specifies the context in which NationalInstruments.UI.NumericCoercionMode.CoerceValue(NationalInstruments.UI.INumericControl,NationalInstruments.UI.NumericCoercionModeArgs)
            is called.
            </param>
      <param name="args">
            A NationalInstruments.UI.NumericCoercionModeArgs that contains
            the coercion data.
            </param>
      <returns>
            A value representing the result of applying the coercion to the specified value 
            with respect to the specified context.
            <note type="note"></note></returns>
    </member>
    <member name="P:NationalInstruments.UI.NumericCoercionMode.UnderlyingType">
      <summary>
            Gets the underlying type of an enum object value.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.NumericCoercionMode.None">
      <summary>
            Gets a value indicating that no coercion is applied.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.NumericCoercionMode.ToInterval">
      <summary>
            Gets a coercion mode that coerces values to discrete intervals.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.NumericCoercionMode.ToDivisions">
      <summary>
            Gets a coercion mode that coerces values to the divisions visible on
            a control.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.NumericCoercionModeArgs">
      <summary>
            Provides data for coercing a value.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.NumericCoercionModeArgs.#ctor(System.Double)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.NumericCoercionModeArgs class.
            </summary>
      <param name="value">
            The value to be coerced.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.NumericCoercionModeArgs.Value">
      <summary>
            Gets the value to be coerced.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.NumericEditChangeArgs">
      <summary>
            Provides data to represent a numeric edit change.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.NumericEditChangeArgs.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.NumericEditChangeArgs class with 
            the specified old value and new value.
            </summary>
      <param name="oldValue">
            A System.String representing the old value of the numeric edit change.
            </param>
      <param name="newValue">
            A System.String representing the new value of the numeric edit change.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.NumericEditChangeArgs.#ctor(System.String,System.String,System.String,System.String,System.Int32)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.NumericEditChangeArgs class with 
            the specified old value, new value, added characters, deleted characters, and position of the character change.
            </summary>
      <param name="oldValue">
            A System.String representing the old value of the numeric edit change.
            </param>
      <param name="newValue">
            A System.String representing the new value of the numeric edit change.
            </param>
      <param name="charactersAdded">
            A System.String representing the characters that were added.
            </param>
      <param name="charactersDeleted">
            A System.String representing the characters that were deleted.
            </param>
      <param name="characterChangePosition">
            An integer containing the index of the start of the change.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.NumericEditChangeArgs.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.NumericEditChangeArgs.OldValue">
      <summary>
            Gets the old string value of the numeric edit change.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.NumericEditChangeArgs.NewValue">
      <summary>
            Gets or sets the new string value of the numeric edit change.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.NumericEditChangeArgs.CharactersAdded">
      <summary>
            Gets the characters that were added in the numeric edit change.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.NumericEditChangeArgs.CharactersDeleted">
      <summary>
            Gets the characters that were deleted in the numeric edit change.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.NumericEditChangeArgs.CharacterChangePosition">
      <summary>
            Gets the character change position.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.NumericEditInteractionModes">
      <summary>
            Specifies how the numeric edit control responds to keyboard and mouse input.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.NumericEditInteractionModes.Indicator">
      <summary>
            The control does not change state when mouse or keyboard input is detected.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.NumericEditInteractionModes.Buttons">
      <summary>
            The up and down buttons and the mouse wheel change the value of the control.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.NumericEditInteractionModes.Text">
      <summary>
            Keyboard text entry changes the value of the control.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.NumericEditInteractionModes.ArrowKeys">
      <summary>
            The up and down arrow keys change the value of the control.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.NumericEditValidationMode">
      <summary>
            Specifies when the text entered into the numeric edit control is validated. 
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.NumericEditValidationMode.WhenCommitted">
      <summary>
            The text entered into the numeric edit control is validated when you press the <entity value="lt"></entity>Enter<entity value="gt"></entity> 
            key or the control loses focus.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.NumericEditValidationMode.WhenChanged">
      <summary>
            The text entered into the numeric edit control is validated with each change to the text.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.NumericFillMode">
      <summary>
            Specifies the direction of the fill in a linear numeric pointer.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.NumericFillMode.None">
      <summary>
            No fill.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.NumericFillMode.ToMaximum">
      <summary>
            The linear numeric pointer is filled from the current value to the maximum value.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.NumericFillMode.ToMinimum">
      <summary>
            The linear numeric pointer is filled from the current value to the minimum value.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.NumericFillMode.ToBaseValue">
      <summary>
            The linear numeric pointer is filled from the current value to a base value.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.NumericFormatMode">
      <summary>
            Defines a set of methods used to format and validate numeric values.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.NumericFormatMode.#ctor">
      <summary>
            Initializes an instance of the NationalInstruments.UI.NumericFormatMode class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.NumericFormatMode.FormatValue(System.Object,NationalInstruments.UI.NumericFormatModeArgs)">
      <summary>
            Converts a numeric value into its string representation.
            </summary>
      <param name="context">
            The object that specifies the context in which NationalInstruments.UI.NumericFormatMode.FormatValue(System.Object,NationalInstruments.UI.NumericFormatModeArgs) is called.
            </param>
      <param name="args">
            A NationalInstruments.UI.NumericFormatModeArgs containing information about the value to format.
            </param>
      <returns>
            A System.String representing the formatted value.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.NumericFormatMode.TryParse(System.String,System.Double@)">
      <summary>
            Converts the string representation of a number to its double-precision floating-point number equivalent.
            </summary>
      <param name="s">
            The formatted string to parse.
            </param>
      <param name="value">
            Upon return, contains the parsed value.
            </param>
      <returns>true if the string was parsed successfully.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.NumericFormatMode.IsValidChange(NationalInstruments.UI.NumericEditChangeArgs)">
      <summary>
            Validates a change made to the text of an object.
            </summary>
      <param name="changeArgs">
            A NationalInstruments.UI.NumericEditChangeArgs that contains information about the change.
            </param>
      <returns>true if the string was parsed successfully.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.NumericFormatMode.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.NumericFormatMode.CanParse(System.String)">
      <summary>
            Determines if a formatted string can be parsed by the NationalInstruments.UI.NumericFormatMode.TryParse(System.String,System.Double@) method of the current format mode.
            </summary>
      <param name="s">
            The formatted string to parse.
            </param>
      <returns>true if the string was parsed successfully.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.NumericFormatMode.CreateGenericMode(System.String)">
      <summary>
            Creates a NationalInstruments.UI.NumericFormatMode that formats numeric values using a numeric format supported by System.Globalization.NumberFormatInfo.
            </summary>
      <param name="format">
            Any valid format string that is supported by System.Globalization.NumberFormatInfo.
            </param>
      <returns>
            A NationalInstruments.UI.NumericFormatMode that formats values according to <paramref name="format"></paramref>.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.NumericFormatMode.CreateGenericMode(System.String,System.IFormatProvider)">
      <summary>
            Creates a NationalInstruments.UI.NumericFormatMode with the specified format provider that formats numeric values using a numeric format supported by System.Globalization.NumberFormatInfo.
            </summary>
      <param name="format">
            Any valid format string that is supported by System.Globalization.NumberFormatInfo.
            </param>
      <param name="formatProvider">
            The System.IFormatProvider object to use for formatting. System.IFormatProvider is typically used to supply culture-specific formatting information.
            </param>
      <returns>
            A NationalInstruments.UI.NumericFormatMode that formats values according to <paramref name="format"></paramref>.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.NumericFormatMode.CreateEngineeringMode(System.String)">
      <summary>
            Creates a NationalInstruments.UI.NumericFormatMode that formats numeric values using an engineering notation.
            </summary>
      <param name="format">
            The NationalInstruments.EngineeringFormatInfo formatting string to use.
            </param>
      <returns>
            A NationalInstruments.UI.NumericFormatMode that formats values according to <paramref name="format"></paramref>.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.NumericFormatMode.CreateEngineeringMode(System.String,System.IFormatProvider)">
      <summary>
            Creates a NationalInstruments.UI.NumericFormatMode with the specified format provider that formats numeric values using an engineering notation.
            </summary>
      <param name="format">
            The NationalInstruments.EngineeringFormatInfo formatting string to use.
            </param>
      <param name="formatProvider">
            The System.IFormatProvider object to use for formatting. System.IFormatProvider is typically used for culture-specific formatting information.
            </param>
      <returns>
            A NationalInstruments.UI.NumericFormatMode that formats values according to <paramref name="format"></paramref>.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.NumericFormatMode.CreateSimpleDoubleMode">
      <summary>
            Creates a NationalInstruments.UI.NumericFormatMode that formats and validates numeric values using a basic number representation.
            </summary>
      <returns>
            A NationalInstruments.UI.NumericFormatMode that formats values as simple double numbers with a precision of 1 and System.Globalization.CultureInfo.CurrentCulture.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.NumericFormatMode.CreateSimpleDoubleMode(System.Int32)">
      <summary>
            Creates a NationalInstruments.UI.NumericFormatMode with the specified precision that formats and validates numeric values using a basic number representation.
            </summary>
      <param name="precision">
            The number of digits to display after the decimal point in a formatted value.
            </param>
      <returns>
            A NationalInstruments.UI.NumericFormatMode that formats values as simple double numbers 
            with the specified <paramref name="precision"></paramref> and System.Globalization.CultureInfo.CurrentCulture.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.NumericFormatMode.CreateSimpleDoubleMode(System.Int32,System.IFormatProvider)">
      <summary>
            Creates a NationalInstruments.UI.NumericFormatMode with the specified precision and format provider that formats and validates numeric values using a basic number representation.
            </summary>
      <param name="precision">
            The number of digits to display after the decimal point in a formatted value.
            </param>
      <param name="formatProvider">
            The System.IFormatProvider object to use for formatting. System.IFormatProvider is typically used to supply culture-specific formatting information.
            </param>
      <returns>
            A NationalInstruments.UI.NumericFormatMode that formats values as simple double numbers 
            with the specified <paramref name="precision"></paramref> and specified <paramref name="formatProvider"></paramref>.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.NumericFormatMode.CreateHexadecimalMode">
      <summary>
            Creates a NationalInstruments.UI.NumericFormatMode that formats and validates numeric values using a hexadecimal representation.
            </summary>
      <returns>
            A NationalInstruments.UI.NumericFormatMode that formats values as hexadecimal numbers 
            using a padding of 4, uppercase characters,  and System.Globalization.CultureInfo.CurrentCulture.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.NumericFormatMode.CreateHexadecimalMode(System.Int32)">
      <summary>
            Creates a NationalInstruments.UI.NumericFormatMode with the specified padding that formats and validates numeric values using a hexadecimal representation.
            </summary>
      <param name="padding">
            The minimum number of digits that must exist in a formatted value.
            </param>
      <returns>
            A NationalInstruments.UI.NumericFormatMode that formats values as hexadecimal numbers 
            using the specified <paramref name="padding"></paramref>, uppercase characters, and System.Globalization.CultureInfo.CurrentCulture.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.NumericFormatMode.CreateHexadecimalMode(System.Int32,System.Boolean)">
      <summary>
            Creates a NationalInstruments.UI.NumericFormatMode with the specified padding and character 
            case that formats and validates numeric values using a hexadecimal representation.
            </summary>
      <param name="padding">
            The minimum number of digits that must exist in a formatted value.
            </param>
      <param name="uppercase">true if the characters in the formatting string are uppercase.
            </param>
      <returns>
            A NationalInstruments.UI.NumericFormatMode that formats values as hexadecimal numbers using the specified <paramref name="padding"></paramref>, specified value of <paramref name="uppercase"></paramref>, and System.Globalization.CultureInfo.CurrentCulture.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.NumericFormatMode.CreateHexadecimalMode(System.Int32,System.Boolean,System.IFormatProvider)">
      <summary>
            Creates a NationalInstruments.UI.NumericFormatMode with the specified padding, character 
            case, and format provider that formats and validates numeric values using a hexadecimal representation.
            </summary>
      <param name="padding">
            The minimum number of digits that must exist in a formatted value.
            </param>
      <param name="uppercase">true if the characters in the formatting string are uppercase.
            </param>
      <param name="formatProvider">
            The System.IFormatProvider object to use for formatting. System.IFormatProvider is typically used to supply culture-specific formatting information.
            </param>
      <returns>
            A NationalInstruments.UI.NumericFormatMode that formats values as hexadecimal numbers 
            using the specified <paramref name="padding"></paramref>, specified value of <paramref name="uppercase"></paramref>, and 
            specified <paramref name="formatProvider"></paramref>.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.NumericFormatMode.CreateBinaryMode">
      <summary>
            Creates a NationalInstruments.UI.NumericFormatMode that formats and validates numeric values using a binary representation.
            </summary>
      <returns>
            A NationalInstruments.UI.NumericFormatMode that formats values as binary numbers using a padding of 8 and System.Globalization.CultureInfo.CurrentCulture.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.NumericFormatMode.CreateBinaryMode(System.Int32)">
      <summary>
            Creates a NationalInstruments.UI.NumericFormatMode with the specified padding that formats and validates numeric values using a binary representation.
            </summary>
      <param name="padding">
            The minimum number of digits that must exist in a formatted value.
            </param>
      <returns>
            A NationalInstruments.UI.NumericFormatMode that formats values as binary numbers using the specified <paramref name="padding"></paramref> and System.Globalization.CultureInfo.CurrentCulture.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.NumericFormatMode.CreateBinaryMode(System.Int32,System.IFormatProvider)">
      <summary>
            Creates a NationalInstruments.UI.NumericFormatMode with the specified padding and format provider that formats and validates numeric values using a binary representation.
            </summary>
      <param name="padding">
            The minimum number of digits that must exist in a formatted value.
            </param>
      <param name="formatProvider">
            The System.IFormatProvider object to use for formatting. System.IFormatProvider is typically used to supply culture-specific formatting information.
            </param>
      <returns>
            A NationalInstruments.UI.NumericFormatMode that formats values as binary numbers using the specified <paramref name="padding"></paramref> and <paramref name="formatProvider"></paramref>.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.NumericFormatMode.CreateScientificMode">
      <summary>
            Creates a NationalInstruments.UI.NumericFormatMode that formats and validates numeric values using a scientific notation.
            </summary>
      <returns>
            A NationalInstruments.UI.NumericFormatMode that formats values using scientific notation with a precision of 6.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.NumericFormatMode.CreateScientificMode(System.Int32)">
      <summary>
            Creates a NationalInstruments.UI.NumericFormatMode with the specified precision that formats and validates numeric values using a scientific notation.
            </summary>
      <param name="precision">
            The number of digits to display after the decimal point in a formatted value.
            </param>
      <returns>
            A NationalInstruments.UI.NumericFormatMode that formats values to use scientific 
            notation with the specified <paramref name="precision"></paramref>.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.NumericFormatMode.CreateScientificMode(System.Int32,System.Boolean)">
      <summary>
            Creates a NationalInstruments.UI.NumericFormatMode with the specified precision and character 
            case that formats and validates numeric values using a scientific notation.
            </summary>
      <param name="precision">
            The number of digits to display after the decimal point in a formatted value.
            </param>
      <param name="uppercase">true if the formatted value uses an uppercase E.
            </param>
      <returns>
            A NationalInstruments.UI.NumericFormatMode that formats values to use scientific notation 
            with the specified <paramref name="precision"></paramref> and specified value of <paramref name="uppercase"></paramref>.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.NumericFormatMode.CreateScientificMode(System.Int32,System.Boolean,System.IFormatProvider)">
      <summary>
            Creates a NationalInstruments.UI.NumericFormatMode with the specified precision, character 
            case, and format provider that formats and validates numeric values using a scientific notation.
            </summary>
      <param name="precision">
            The number of digits to display after the decimal point in a formatted value.
            </param>
      <param name="uppercase">true if the formatted value uses an uppercase E.
            </param>
      <param name="formatProvider">
            The System.IFormatProvider object to use for formatting. System.IFormatProvider is typically used to supply culture-specific formatting information.</param>
      <returns>
            A NationalInstruments.UI.NumericFormatMode that formats values to use scientific notation 
            with the specified <paramref name="precision"></paramref>, specified value of <paramref name="uppercase"></paramref>, and 
            specified <paramref name="formatProvider"></paramref>.
            </returns>
    </member>
    <member name="T:NationalInstruments.UI.NumericFormatModeArgs">
      <summary>
            Provides data for formatting a value.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.NumericFormatModeArgs.#ctor(System.Double,NationalInstruments.UI.NumericFormatState)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.NumericFormatModeArgs class.
            </summary>
      <param name="value">
            The value to format.
            </param>
      <param name="state">
            A NationalInstruments.UI.NumericFormatState representing the state of the value to format.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.NumericFormatModeArgs.Value">
      <summary>
            Gets the value to format.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.NumericFormatModeArgs.State">
      <summary>
            Gets the state of a formatted value.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.NumericFormatState">
      <summary>
            Specifies the state in which a NationalInstruments.UI.NumericFormatMode formats a value.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.NumericFormatState.Display">
      <summary>
            The NationalInstruments.UI.NumericFormatMode formats the value for display.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.NumericFormatState.Edit">
      <summary>
            The NationalInstruments.UI.NumericFormatMode formats the value for editing.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.NumericOutOfRangeMode">
      <summary>
            Specifies the behavior of a numeric control when the value of the control is set to a value out of range.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.NumericOutOfRangeMode.ThrowException">
      <summary>
            An exception is thrown when the value is out of range.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.NumericOutOfRangeMode.CoerceToRange">
      <summary>
            The value is coerced to closest of the minimum or maximum of the range.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.NumericScalePosition">
      <summary>
            Specifies the position of the scale with respect to the fill area in a linear numeric pointer.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.NumericScalePosition.Bottom">
      <summary>
            The scale is positioned at the bottom of the fill area.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.NumericScalePosition.Top">
      <summary>
            The scale is positioned at the top of the fill area.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.NumericScalePosition.TopBottom">
      <summary>
            The scale is positioned at the top and bottom of the fill area.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.NumericScalePosition.Left">
      <summary>
            The scale is positioned at the left of the fill area.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.NumericScalePosition.Right">
      <summary>
            The scale is positioned at the right of the fill area.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.NumericScalePosition.LeftRight">
      <summary>
            The scale is positioned at the left and right of the fill area.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.Plot">
      <summary>
            Provides an abstract base class for a plot.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.Plot.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.Plot class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.Plot.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the NationalInstruments.UI.Plot 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.Plot.ClearData">
      <summary>
            Removes all data from the history.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.Plot.OnDataChanged(System.EventArgs)">
      <summary>
            Raises the NationalInstruments.UI.Plot.DataChanged event.
            </summary>
      <param name="e">
            An System.EventArgs that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.Plot.OnLegendItemChanged(System.EventArgs)">
      <summary>
            Raises the NationalInstruments.UI.Plot.LegendItemChanged event.
            </summary>
      <param name="e">
            An System.EventArgs that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.Plot.DrawLegendItem(NationalInstruments.UI.ComponentDrawArgs)">
      <summary>
            Draws the symbol of a NationalInstruments.UI.Plot.
            </summary>
      <param name="args">
            A NationalInstruments.UI.ComponentDrawArgs that contains the graphics surface to
            draw the legend item on and the bounds in which to draw the legend item.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.Plot.DrawPoints(NationalInstruments.UI.ComponentDrawArgs)">
      <summary>
            Draws the plot points.
            </summary>
      <param name="args">
            A NationalInstruments.UI.ComponentDrawArgs that contains the 
            drawing data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.Plot.DrawLines(NationalInstruments.UI.ComponentDrawArgs)">
      <summary>
            Draws the plot lines.
            </summary>
      <param name="args">
            A NationalInstruments.UI.ComponentDrawArgs that contains the 
            drawing data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.Plot.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.Plot.HistoryCapacity">
      <summary>
            Gets or sets the maximum number of data points stored in the history
            when appending data.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Plot.HistoryCount">
      <summary>
            Gets the number of data points in the history.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Plot.LineStyle">
      <summary>
            Gets or sets the style of the line connecting the data points of the plot.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Plot.LineColor">
      <summary>
            Gets or sets the color of the line connecting the data points of the plot.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Plot.LineWidth">
      <summary>
            Gets or sets the width of the line connecting the data points of the plot.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Plot.PointStyle">
      <summary>
            Gets or sets the style for displaying a data point on the plot.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Plot.PointColor">
      <summary>
            Gets or sets the color for displaying a data point on the plot.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Plot.PointSize">
      <summary>
            Gets or sets the size of the point style used to display a data point on the plot.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.Plot.DataChanged">
      <summary>
            Occurs when a new set of data is plotted.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.Plot.LegendItemChanged">
      <summary>
            Occurs when the NationalInstruments.UI.Plot has changed such
            that its appearance in a legend control must be updated.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.PlotFillMode">
      <summary>
            Specifies what draws to base.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.PlotFillMode.None">
      <summary>
            No fill or lines to base.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.PlotFillMode.Fill">
      <summary>
            Fills are from the plot to the base.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.PlotFillMode.Lines">
      <summary>
            Lines are drawn from the data points to the base.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.PlotFillMode.FillAndLines">
      <summary>
            Lines are drawn from the data points to the base and fills.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.PlotFillMode.Bins">
      <summary>
            Lines are drawn between the data points to the base.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.PlotFillMode.FillAndBins">
      <summary>
            Lines are drawn between the data points and fills to the base.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.PointAlignment">
      <summary>
            Provides an abstract base class for aligning items to a reference point.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.PointAlignment.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.PointAlignment class.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.PointAlignment.UnderlyingType">
      <summary>
            Gets the underlying type of an enum object value.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.PointAlignment.Auto">
      <summary>
            Gets a point alignment that auto-aligns an item to the specified reference point.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.PointAlignment.BottomCenter">
      <summary>
            Gets a point alignment that aligns an item to the bottom center of the specified reference point.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.PointAlignment.BottomLeft">
      <summary>
            Gets a point alignment that aligns an item to the bottom left of the specified reference point.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.PointAlignment.BottomRight">
      <summary>
            Gets a point alignment that aligns an item to the bottom right of the specified reference point.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.PointAlignment.MiddleCenter">
      <summary>
            Gets a point alignment that aligns an item to the middle center of the specified reference point.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.PointAlignment.MiddleLeft">
      <summary>
            Gets a point alignment that aligns an item to the middle left of the specified reference point.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.PointAlignment.MiddleRight">
      <summary>
            Gets a point alignment that aligns an item to the middle right of the specified reference point.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.PointAlignment.TopLeft">
      <summary>
            Gets a point alignment that aligns an item to the top left of the specified reference point.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.PointAlignment.TopRight">
      <summary>
            Gets a point alignment that aligns an item to the top right of the specified reference point.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.PointAlignment.TopCenter">
      <summary>
            Gets a point alignment that aligns an item to the top center of the specified reference point.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.PointAlignment.None">
      <summary>
            Gets a point alignment that does not adjust the alignment of the item.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.PointStyle">
      <summary>
            Provides an abstract base class for specifying a point style
            and also provides a list of pre-defined point styles.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.PointStyle.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.PointStyle class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.PointStyle.Draw(System.Object,NationalInstruments.UI.PointStyleDrawArgs)">
      <summary>
            Draws a point style with the specified NationalInstruments.UI.PointStyleDrawArgs.
            </summary>
      <param name="context">
            The object that specifies the context in which NationalInstruments.UI.PointStyle.Draw(System.Object,NationalInstruments.UI.PointStyleDrawArgs) is called.
            </param>
      <param name="args">
            A NationalInstruments.UI.PointStyleDrawArgs that contains the
            drawing data.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.PointStyle.UnderlyingType">
      <summary>
            Gets the underlying type of an enum object value.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.PointStyle.IsValueDependent">
      <summary>
            Gets a value indicating if the NationalInstruments.UI.PointStyle 
            can be customized based on the data values.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.PointStyle.None">
      <summary>
            Gets a value that indicates that no point is displayed.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.PointStyle.SolidCircle">
      <summary>
            Gets a point with a solid circle point style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.PointStyle.EmptyCircle">
      <summary>
            Gets a point with an empty circle point style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.PointStyle.SolidSquare">
      <summary>
            Gets a point with a solid square point style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.PointStyle.EmptySquare">
      <summary>
            Gets a point with an empty square point style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.PointStyle.SolidDiamond">
      <summary>
            Gets a point with a solid diamond point style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.PointStyle.EmptyDiamond">
      <summary>
            Gets a point with an empty diamond point style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.PointStyle.Cross">
      <summary>
            Gets a point with a cross point style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.PointStyle.Plus">
      <summary>
            Gets a point with a plus point style.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.PointStyleDrawArgs">
      <summary>
            Provides data for drawing point styles.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.PointStyleDrawArgs.#ctor(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Size)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.PointStyleDrawArgs class
            with the specified graphics surface, point color, and point size.
            </summary>
      <param name="graphics">
            The System.Drawing.Graphics used to draw the point.
            </param>
      <param name="color">
            The System.Drawing.Color of the point.
            </param>
      <param name="size">
            The System.Drawing.Size of the point.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.PointStyleDrawArgs.#ctor(System.Drawing.Graphics,System.Double,System.Double,System.Drawing.Color,System.Drawing.Size)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.PointStyleDrawArgs class
            with the specified graphics surface, x and y coordinates, point color, and point size.
            </summary>
      <param name="graphics">
            The System.Drawing.Graphics that is used to draw the point.
            </param>
      <param name="x">
            The Cartesian x coordinate of the data value.
            </param>
      <param name="y">
            The Cartesian y coordinate of the data value.
            </param>
      <param name="color">
            The System.Drawing.Color of the point.
            </param>
      <param name="size">
            The System.Drawing.Size of the point.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.PointStyleDrawArgs.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.PointStyleDrawArgs.X">
      <summary>
            Gets the Cartesian x coordinate of the data value.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.PointStyleDrawArgs.Y">
      <summary>
            Gets the Cartesian y coordinate of the data value.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.PointStyleDrawArgs.Color">
      <summary>
            Gets the color of the point.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.PointStyleDrawArgs.Size">
      <summary>
            Gets the size of the point.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.Polarity">
      <summary>
            Specifies the polarity of a value as positive, negative, or zero.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.Polarity.Zero">
      <summary>
            The value has no polarity.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.Polarity.Positive">
      <summary>
            The value has a positive polarity by virtue of it being greater than zero.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.Polarity.Negative">
      <summary>
            The value has a negative polarity by virtue of it being less than zero.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.RadialNumericPointerHitTestInfo">
      <summary>
            Specifies the parts of a radial numeric pointer control that can be hit-tested.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.RadialNumericPointerHitTestInfo.None">
      <summary>
            The portion of the radial numeric control outside the dial, pointer, and scale area.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.RadialNumericPointerHitTestInfo.Pointer">
      <summary>
            The pointer of the radial numeric control.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.RadialNumericPointerHitTestInfo.Dial">
      <summary>
            The circular area containing the pointer.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.RadialNumericPointerHitTestInfo.ScaleArea">
      <summary>
            The area containing the scale.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.RadialNumericPointerHitTestInfo.OuterScaleArea">
      <summary>
            The empty area separating the end of the scale from the start of the scale.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.RadialNumericPointerInteractionModes">
      <summary>
            Defines the set of user interactions that are possible within a radial numeric pointer.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.RadialNumericPointerInteractionModes.Indicator">
      <summary>
            No interaction.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.RadialNumericPointerInteractionModes.DragPointer">
      <summary>
            The pointer can be dragged.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.RadialNumericPointerInteractionModes.SnapPointer">
      <summary>
            The pointer can be snapped to a value.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.RadialNumericPointerInteractionModes.WrapPointer">
      <summary>
            The pointer is interactive outside the scale arc.
            The pointer can be wrapped from the minimum
            of the scale's range to the maximum of the scale's
            range and vice versa.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.RadialNumericPointerStyleDrawArgs">
      <summary>
            Provides the data to draw a NationalInstruments.UI.RadialNumericPointerStyle.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.RadialNumericPointerStyleDrawArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.RadialNumericPointerStyleDrawArgs class with the specified
            graphics and bounds.
            </summary>
      <param name="graphics">
            The System.Drawing.Graphics with which to draw.
            </param>
      <param name="bounds">
            The System.Drawing.Rectangle in which the NationalInstruments.UI.RadialNumericPointerStyle is drawn.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.Range">
      <summary>
            Represents an ordered pair of minimum and maximum values, such as the
            range of a scale or an axis.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.Range.Empty">
      <summary>
            Represents an empty NationalInstruments.UI.Range.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.Range.All">
      <summary>
            Represents a range from System.Double.NegativeInfinity to
            System.Double.PositiveInfinity.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.Range.#ctor(System.Double,System.Double)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.Range class
            with the specified minimum and maximum values.
            </summary>
      <param name="minimum">
            The minimum value of the range.
            </param>
      <param name="maximum">
            The maximum value of the range.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.Range.#ctor(System.DateTime,System.DateTime)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.Range class
            with the specified minimum and maximum System.DateTime values.
            </summary>
      <param name="minimum">
            The minimum System.DateTime value of the range.
            </param>
      <param name="maximum">
            The maximum System.DateTime value of the range.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.Range.#ctor(System.DateTime,System.TimeSpan)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.Range class
            with the specified minimum System.DateTime value and
            System.TimeSpan increment value.
            </summary>
      <param name="minimum">
            The minimum System.DateTime value of the range.
            </param>
      <param name="increment">
            The System.TimeSpan increment value to add to <paramref name="minimum"></paramref>.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.Range.GetHashCode">
      <summary>
            Returns a hash code for this object.
            </summary>
      <returns>
            A 32-bit signed integer hash code.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.Range.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.Range.Equals(System.Object)">
      <summary>
            Returns a value indicating if this instance is equal to the specified NationalInstruments.UI.Range.
            </summary>
      <param name="obj">
            The NationalInstruments.UI.Range to compare with this
            instance.
            </param>
      <returns>true if <paramref name="obj"></paramref> is a NationalInstruments.UI.Range  that is equal 
            to this instance.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.Range.Equals(NationalInstruments.UI.Range)">
      <summary>
            Returns a value indicating if this instance is equal to the specified NationalInstruments.UI.Range.
            </summary>
      <param name="range">
            A NationalInstruments.UI.Range to compare with this instance.
            </param>
      <returns>true if <paramref name="range"></paramref> is a NationalInstruments.UI.Range  that is equal 
            to this instance.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.Range.Clone">
      <summary>
            Creates a new object that is an exact copy of this instance.
            </summary>
      <returns>
            A new object that is an exact copy of this instance.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.Range.Contains(NationalInstruments.UI.Range)">
      <summary>
            Determines if this NationalInstruments.UI.Range entirely contains 
            the specified NationalInstruments.UI.Range.
            </summary>
      <param name="range">
            The NationalInstruments.UI.Range to compare with 
            this instance.
            </param>
      <returns>true if this NationalInstruments.UI.Range entirely 
            contains <paramref name="range"></paramref>.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.Range.Contains(System.Double)">
      <summary>
            Determines if this NationalInstruments.UI.Range contains 
            the specified value.
            </summary>
      <param name="value">
            The value to compare with this instance.
            </param>
      <returns>true if this NationalInstruments.UI.Range 
            contains <paramref name="value"></paramref>.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.Range.Intersects(NationalInstruments.UI.Range)">
      <summary>
            Determines if this range intersects with the specified range.
            </summary>
      <param name="range">
            The NationalInstruments.UI.Range to compare with this
            instance.
            </param>
      <returns>true if this NationalInstruments.UI.Range intersects
            with <paramref name="range"></paramref>.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.Range.op_Equality(NationalInstruments.UI.Range,NationalInstruments.UI.Range)">
      <summary>
            Returns if two NationalInstruments.UI.Range objects are equal.
            </summary>
      <param name="range1">
            A NationalInstruments.UI.Range.
            </param>
      <param name="range2">
            A NationalInstruments.UI.Range.
            </param>
      <returns>true if the values of <paramref name="range1"></paramref> and <paramref name="range2"></paramref> are equal. 
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.Range.op_Inequality(NationalInstruments.UI.Range,NationalInstruments.UI.Range)">
      <summary>
            Returns if two NationalInstruments.UI.Range objects are 
            not equal.
            </summary>
      <param name="range1">
            A NationalInstruments.UI.Range.
            </param>
      <param name="range2">
            A NationalInstruments.UI.Range.
            </param>
      <returns>true if the values of <paramref name="range1"></paramref> and <paramref name="range2"></paramref> are not equal. 
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.Range.Parse(System.String)">
      <summary>
            Converts the string representation of a range to a NationalInstruments.UI.Range.
            </summary>
      <param name="value">
            A string containing the range to convert.
            </param>
      <returns>
            A NationalInstruments.UI.Range equivalent to the string specified in 
            <paramref name="value"></paramref>.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.Range.Minimum">
      <summary>
            Gets the minimum value of the range. To set the minimum value, use the constructor.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Range.MinimumDateTime">
      <summary>
            Gets the minimum value of the range as a System.DateTime.
            To set the minimum value, use the constructor.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Range.Maximum">
      <summary>
            Gets the maximum value of the range. To set the maximum value, use the constructor.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.Range.MaximumDateTime">
      <summary>
            Gets the maximum value of the range as a System.DateTime. 
            To set the maximum value, use the constructor.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.ScaleCustomDivisionCollection">
      <summary>
            Represents a strongly typed collection of NationalInstruments.UI.ScaleCustomDivision objects.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.ScaleCustomDivisionCollection.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.ScaleCustomDivisionCollection class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.ScaleCustomDivisionCollection.#ctor(NationalInstruments.UI.ScaleCustomDivisionCollection)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.ScaleCustomDivisionCollection class
            from an existing collection.
            </summary>
      <param name="item">
            The NationalInstruments.UI.ScaleCustomDivisionCollection to copy.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.ScaleCustomDivisionCollection.#ctor(NationalInstruments.UI.ScaleCustomDivision[])">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.ScaleCustomDivisionCollection class
            from an array of items.
            </summary>
      <param name="item">
            The array of NationalInstruments.UI.ScaleCustomDivision to copy.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.ScaleCustomDivisionCollection.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.ScaleCustomDivisionCollection.Add(NationalInstruments.UI.ScaleCustomDivision)">
      <summary>
            Adds an item to the end of the collection.
            </summary>
      <param name="item">
            Item to add to the collection.
            </param>
      <returns>
            The array index of the added item.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.ScaleCustomDivisionCollection.AddRange(NationalInstruments.UI.ScaleCustomDivision[])">
      <summary>
            Adds an array of NationalInstruments.UI.ScaleCustomDivision objects to the end of the collection.
            </summary>
      <param name="item">
            Array of NationalInstruments.UI.ScaleCustomDivision objects to add to the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.ScaleCustomDivisionCollection.AddRange(NationalInstruments.UI.ScaleCustomDivisionCollection)">
      <summary>
            Adds a collection of NationalInstruments.UI.ScaleCustomDivision objects to the end of the collection.
            </summary>
      <param name="item">
            Collection of NationalInstruments.UI.ScaleCustomDivision objects to add to the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.ScaleCustomDivisionCollection.Clear">
      <summary>
            Removes all items from the collection.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.ScaleCustomDivisionCollection.Contains(NationalInstruments.UI.ScaleCustomDivision)">
      <summary>
            Determines if the specified element is in the collection.
            </summary>
      <param name="item">Item to locate in the collection.</param>
      <returns>true if the collection contains <paramref name="item"></paramref>.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.ScaleCustomDivisionCollection.CopyTo(NationalInstruments.UI.ScaleCustomDivision[],System.Int32)">
      <summary>
            Copies the collection to an array or a portion of an array.
            </summary>
      <param name="array">
            Destination array for the collection.
            </param>
      <param name="index">
            The index in the target array at which you want to begin copying the collection to.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.ScaleCustomDivisionCollection.IndexOf(NationalInstruments.UI.ScaleCustomDivision)">
      <summary>
            Returns the zero-based index of the first occurrence of an item in the collection.
            </summary>
      <param name="item">
            Item to search for.
            </param>
      <returns>
            Index of the item. If the item is not found, returns -1.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.ScaleCustomDivisionCollection.Insert(System.Int32,NationalInstruments.UI.ScaleCustomDivision)">
      <summary>
            Inserts an item into the collection at the specified index.
            </summary>
      <param name="index">
            Index to insert the item at.
            </param>
      <param name="item">
            Item to insert into the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.ScaleCustomDivisionCollection.GetEnumerator">
      <summary>
            Returns an enumerator that you can use to iterate through the collection.
            </summary>
      <returns>
            The enumerator for the collection.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.ScaleCustomDivisionCollection.Remove(NationalInstruments.UI.ScaleCustomDivision)">
      <summary>
            Removes the first occurrence of the specified item.
            </summary>
      <param name="item">
            Item to remove from the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.ScaleCustomDivisionCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the item at the specified index.
            </summary>
      <param name="index">
            The zero-based index of the item to remove.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.ScaleCustomDivisionCollection.Item(System.Int32)">
      <summary>
            Gets or sets the NationalInstruments.UI.ScaleCustomDivision at the specified index. In Visual C#, this property 
            is the indexer.
            </summary>
      <param name="index">
            The zero-based index of the entry to locate in the collection.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.ScaleCustomDivisionCollection.Count">
      <summary>
            Gets the number of elements in the NationalInstruments.UI.ScaleCustomDivisionCollection.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.ScaleType">
      <summary>
            Specifies how divisions are scaled.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.ScaleType.Linear">
      <summary>
            Divisions are spaced equally.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.ScaleType.Logarithmic">
      <summary>
            Divisions are spaced logarithmically.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.ScatterPlot">
      <summary>
            Defines a class for plotting y values against x values.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.XYPlot">
      <summary>
            Provides an abstract base class for plots that display data with
            respect to an x-axis and y-axis.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.XYPlot class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.#ctor(NationalInstruments.UI.XAxis,NationalInstruments.UI.YAxis)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.XYPlot class with
            the specified NationalInstruments.UI.XAxis and
            NationalInstruments.UI.YAxis.
            </summary>
      <param name="xAxis">
            The NationalInstruments.UI.XAxis to use for the plot.
            </param>
      <param name="yAxis">
            The NationalInstruments.UI.YAxis to use for the plot.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.Dispose(System.Boolean)">
      <summary>
            Releases the unmanaged resources used by the NationalInstruments.UI.XYPlot 
            and optionally releases the managed resources.
            </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only
            unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.GetService(System.Type)">
      <summary>
            Gets the service object of the specified type.
            </summary>
      <param name="service">
            A service provided by the component.
            </param>
      <returns>
            An System.Object that represents the service provided by the component or 
            null if the component does not provide the 
            specified service.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.DrawLinesToBase(NationalInstruments.UI.ComponentDrawArgs)">
      <summary>
            Draws lines to base with the specified NationalInstruments.UI.ComponentDrawArgs.
            </summary>
      <param name="args">
            A NationalInstruments.UI.ComponentDrawArgs that contains the 
            drawing data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.DrawFillToBase(NationalInstruments.UI.ComponentDrawArgs)">
      <summary>
            Draws fill to base with the specified NationalInstruments.UI.ComponentDrawArgs.
            </summary>
      <param name="args">
            A NationalInstruments.UI.ComponentDrawArgs that contains the 
            drawing data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.GetXData">
      <summary>
            Gets the x data values in the history.
            </summary>
      <returns>
            A System.Double array that represents the x data values
            in the history.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.GetYData">
      <summary>
            Gets the y data values in the history.
            </summary>
      <returns>
            A System.Double array that represents the y data values in the history. 
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.GetDataPoint(System.Int32,System.Double@,System.Double@)">
      <summary>
            Gets the x and y data values at the specified index in the history.
            </summary>
      <param name="index">
            The index used to get the data value from the history.
            </param>
      <param name="xData">
            Upon return, contains the x data value at <paramref name="index"></paramref>.
            </param>
      <param name="yData">
            Upon return, contains the y data value at <paramref name="index"></paramref>.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.MapDataPoint(System.Drawing.Rectangle,System.Double,System.Double)">
      <summary>
            Transforms a single x and y value to a point using the specified bounds
            and the current x-axis and y-axis ranges.
            </summary>
      <param name="bounds">
            The reference System.Drawing.Rectangle.
            </param>
      <param name="xData">
            The x value to map.
            </param>
      <param name="yData">
            The y value to map.
            </param>
      <returns>
            A System.Drawing.PointF that represents the transformation of
            <paramref name="xData"></paramref> and <paramref name="yData"></paramref> with respect to
            <paramref name="bounds"></paramref> and the current NationalInstruments.UI.XYPlot.XAxis
            and NationalInstruments.UI.XYPlot.YAxis ranges.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.MapPoint(System.Drawing.Rectangle,System.Double,System.Double)">
      <summary>
            This member is obsolete. Use the NationalInstruments.UI.XYPlot.MapDataPoint(System.Drawing.Rectangle,System.Double,System.Double) 
            method to achieve the same functionality.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.MapRange(System.Drawing.Rectangle,NationalInstruments.UI.Range,NationalInstruments.UI.Range)">
      <summary>
            Transforms an x range and a y range to a rectangle using the specified bounds
            and the current x-axis and y-axis ranges.
            </summary>
      <param name="bounds">
            The reference System.Drawing.Rectangle.
            </param>
      <param name="xRange">
            The x NationalInstruments.UI.Range to map.
            </param>
      <param name="yRange">
            The y NationalInstruments.UI.Range to map.
            </param>
      <returns>
            A System.Drawing.RectangleF that represents the transformation of
            <paramref name="xRange"></paramref> and <paramref name="yRange"></paramref> and the current
            NationalInstruments.UI.XYPlot.XAxis and
            NationalInstruments.UI.XYPlot.YAxis ranges.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.MapDataPoints(System.Drawing.Rectangle)">
      <summary>
            Transforms the x-data and y-data in the history to an array of points using the 
            specified bounds and the current x-axis and y-axis ranges.  The data is also
            clipped with respect to the current x-axis and y-axis ranges.
            </summary>
      <param name="bounds">
            The reference System.Drawing.Rectangle.
            </param>
      <returns>
            A System.Drawing.PointF array that represents the transformation of
            the x-data and y-data in the history with respect to
            <paramref name="bounds"></paramref> and the current NationalInstruments.UI.XYPlot.XAxis
            and NationalInstruments.UI.XYPlot.YAxis ranges.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.MapData(System.Drawing.Rectangle)">
      <summary>
            This member is obsolete. Use the NationalInstruments.UI.XYPlot.MapDataPoints(System.Drawing.Rectangle) 
            method to achieve the same functionality.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.MapDataPoints(System.Drawing.Rectangle,System.Boolean)">
      <summary>
            Transforms the x-data and y-data in the history to an array of points using the 
            specified bounds and the current x-axis and y-axis ranges.
            </summary>
      <param name="bounds">
            The reference System.Drawing.Rectangle.
            </param>
      <param name="clipData">
            Specifies if the data is clipped with respect to the current x-axis and
            y-axis ranges.
            </param>
      <returns>
            A System.Drawing.PointF array that represents the transformation of
            the x-data and y-data in the history with respect to
            <paramref name="bounds"></paramref> and the current NationalInstruments.UI.XYPlot.XAxis
            and NationalInstruments.UI.XYPlot.YAxis ranges.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.MapData(System.Drawing.Rectangle,System.Boolean)">
      <summary>
            This member is obsolete. Use the NationalInstruments.UI.XYPlot.MapDataPoints(System.Drawing.Rectangle)
            method to achieve the same functionality.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.MapDataPoints(System.Drawing.Rectangle,System.Double[],System.Double[])">
      <summary>
            Transforms an array of x and y values to an array of points using the 
            specified bounds and the current x-axis and y-axis ranges.  The data is also
            clipped with respect to the current x-axis and y-axis ranges.
            </summary>
      <param name="bounds">
            The reference System.Drawing.Rectangle.
            </param>
      <param name="xData">
            The x values to map.
            </param>
      <param name="yData">
            The y values to map.
            </param>
      <returns>
            A System.Drawing.PointF array that represents the transformation of
            <paramref name="xData"></paramref> and <paramref name="yData"></paramref> with respect to
            <paramref name="bounds"></paramref> and the current NationalInstruments.UI.XYPlot.XAxis
            and NationalInstruments.UI.XYPlot.YAxis ranges.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.MapData(System.Drawing.Rectangle,System.Double[],System.Double[])">
      <summary>
            This member is obsolete. Use the NationalInstruments.UI.XYPlot.MapDataPoints(System.Drawing.Rectangle)
            method to achieve the same functionality.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.MapDataPoints(System.Drawing.Rectangle,System.Double[],System.Double[],System.Boolean)">
      <summary>
            Transforms an array of x and y values to an array of points using the 
            specified bounds and the current x-axis and y-axis ranges.
            </summary>
      <param name="bounds">
            The reference System.Drawing.Rectangle.
            </param>
      <param name="xData">
            The x values to map.
            </param>
      <param name="yData">
            The y values to map.
            </param>
      <param name="clipData">
            Specifies if the data is clipped with respect to the current x-axis and
            y-axis ranges.
            </param>
      <returns>
            A System.Drawing.PointF array that represents the transformation of
            <paramref name="xData"></paramref> and <paramref name="yData"></paramref> with respect to
            <paramref name="bounds"></paramref> and the current NationalInstruments.UI.XYPlot.XAxis
            and NationalInstruments.UI.XYPlot.YAxis ranges.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.MapData(System.Drawing.Rectangle,System.Double[],System.Double[],System.Boolean)">
      <summary>
            This member is obsolete. Use the NationalInstruments.UI.XYPlot.MapDataPoints(System.Drawing.Rectangle)
            method to achieve the same functionality.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.ClipDataPoints(System.Double[]@,System.Double[]@)">
      <summary>
            Clips the x-data and y-data arrays in the history with respect to the current
            x-axis and y-axis ranges.
            </summary>
      <param name="clippedXData">
            The clipped x-data array.
            </param>
      <param name="clippedYData">
            The clipped y-data array.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.ClipData(System.Double[]@,System.Double[]@)">
      <summary>
            This member is obsolete. Use the NationalInstruments.UI.XYPlot.ClipDataPoints(System.Double[]@,System.Double[]@)
            method to achieve the same functionality.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.ClipDataPoints(System.Double[],System.Double[],System.Double[]@,System.Double[]@)">
      <summary>
            Clips the data in the x-data and y-data arrays with respect to the current
            x-axis and y-axis ranges.
            </summary>
      <param name="xData">
            The x-data array to clip.
            </param>
      <param name="yData">
            The y-data array to clip.
            </param>
      <param name="clippedXData">
            The clipped x-data array.
            </param>
      <param name="clippedYData">
            The clipped y-data array.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.ClipData(System.Double[],System.Double[],System.Double[]@,System.Double[]@)">
      <summary>
            This member is obsolete. Use the NationalInstruments.UI.XYPlot.ClipDataPoints(System.Double[]@,System.Double[]@)
            method to achieve the same functionality.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.GetLineStepPoints(System.Drawing.PointF[])">
      <summary>
            Transforms an array of points representing mapped data by applying 
            NationalInstruments.UI.XYPlot.LineStep.
            </summary>
      <param name="mappedData">
            A System.Drawing.PointF array representing mapped data.
            </param>
      <returns>
            A System.Drawing.PointF array representing mapped data after applying 
            NationalInstruments.UI.XYPlot.LineStep.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.FormatDataToolTip(System.Double,System.Double)">
      <summary>
            Formats an x and y data value pair as a plot data tooltip.
            </summary>
      <param name="xData">
            The x data value to format.
            </param>
      <param name="yData">
            The y data value to format.
            </param>
      <returns>
            A System.String that contains the specified x and y data values formatted as
            a data tooltip. The tooltip format is specified by the current values of
            NationalInstruments.UI.XYPlot.ToolTipXFormat and
            NationalInstruments.UI.XYPlot.ToolTipYFormat.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.OnBeforeDraw(NationalInstruments.UI.BeforeDrawXYPlotEventArgs)">
      <summary>
            Raises the NationalInstruments.UI.XYPlot.BeforeDraw event.
            </summary>
      <param name="e">
            An NationalInstruments.UI.BeforeDrawXYPlotEventArgs that contains the 
            event data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYPlot.OnAfterDraw(NationalInstruments.UI.AfterDrawXYPlotEventArgs)">
      <summary>
            Raises the NationalInstruments.UI.XYPlot.AfterDraw event.
            </summary>
      <param name="e">
            An NationalInstruments.UI.AfterDrawXYPlotEventArgs that contains the
            event data.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.XYPlot.XAxis">
      <summary>
            Gets or sets the x-axis for the plot.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPlot.YAxis">
      <summary>
            Gets or sets the y-axis for the plot.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPlot.CanScaleXAxis">
      <summary>
            Gets or sets a value indicating if the plot data is used to calculate the range of the x-axis.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPlot.CanScaleYAxis">
      <summary>
            Gets or sets a value indicating if the plot data is used to calculate the range of the y-axis.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPlot.LineStep">
      <summary>
            Gets or sets the style for connecting two consecutive data points on the 
            plot.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPlot.LineToBaseColor">
      <summary>
            Gets or sets the color to use for lines to base.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPlot.LineToBaseWidth">
      <summary>
            Gets or sets the width of the lines to base.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPlot.LineToBaseStyle">
      <summary>
            Gets or sets the style for lines to base.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPlot.FillToBaseColor">
      <summary>
            Gets or sets the color to use for fill to base.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPlot.FillToBaseStyle">
      <summary>
            Gets or sets the style for fill to base.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPlot.BaseXValue">
      <summary>
            Gets or sets the base x value used for fill or lines to base.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPlot.BaseYValue">
      <summary>
            Gets or set the base y value used for fill or lines to base.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPlot.BasePlot">
      <summary>
            Gets or sets the base plot used for fill or lines to base.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPlot.FillMode">
      <summary>
            Gets or sets a value indicating if the plot draws lines, bins, or fills or a combination of them.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPlot.FillBase">
      <summary>
            Gets or sets the base that the plot draws or fills to.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPlot.ProcessSpecialValues">
      <summary>
            Gets or sets a value indicating if the plot processes special values.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPlot.AntiAliased">
      <summary>
            Gets or sets a value indicating if the plot line draws anti-aliased.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPlot.ToolTipsEnabled">
      <summary>
            Gets or sets a value indicating if a plot data tooltip is shown when the mouse hovers over a data point
            in the plot.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPlot.ToolTipXFormat">
      <summary>
            Gets or sets the format string used to format the x data value displayed in the tooltip.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPlot.ToolTipYFormat">
      <summary>
            Gets or sets the format string used to format the y data value displayed in the tooltip.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.XYPlot.BeforeDraw">
      <summary>
            Occurs before the plot is drawn.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.XYPlot.AfterDraw">
      <summary>
            Occurs after the plot has been drawn.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.ScatterPlot.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.ScatterPlot class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.ScatterPlot.#ctor(NationalInstruments.UI.XAxis,NationalInstruments.UI.YAxis)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.ScatterPlot class
            with the specified NationalInstruments.UI.XAxis and
            NationalInstruments.UI.YAxis.
            </summary>
      <param name="xAxis">
            The NationalInstruments.UI.XAxis to use for the plot.
            </param>
      <param name="yAxis">
            The NationalInstruments.UI.YAxis to use for the plot.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.ScatterPlot.PlotXYAppend(System.Double,System.Double)">
      <summary>
            Plots a single y value against a single x value by appending the x and y value to the
            existing data.
            </summary>
      <param name="xData">
            The x value to append.
            </param>
      <param name="yData">
            The y value to append.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.ScatterPlot.PlotXYAppend(System.Double[],System.Double[])">
      <summary>
            Plots an array of y values against an array of x values by appending the x and y values to 
            the existing data.
            </summary>
      <param name="xData">
            The x values to append.
            </param>
      <param name="yData">
            The y values to append.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.ScatterPlot.PlotXY(System.Double,System.Double)">
      <summary>
            Plots a single y value against a single x value.
            </summary>
      <param name="xData">
            The x value to plot.
            </param>
      <param name="yData">
            The y value to plot.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.ScatterPlot.PlotXY(System.Double[],System.Double[])">
      <summary>
            Plots an array of y values against an array of x values.
            </summary>
      <param name="xData">
            The array of x values to plot.
            </param>
      <param name="yData">
            The array of y values to plot.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.ScatterPlot.Clone">
      <summary>
            Creates a new object that is a copy of this instance.
            </summary>
      <returns>
            A new object that is a copy of this instance.
            </returns>
    </member>
    <member name="T:NationalInstruments.UI.ScatterPlotCollection">
      <summary>
            Represents a strongly typed collection of NationalInstruments.UI.ScatterPlot objects.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.ScatterPlotCollection.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.ScatterPlotCollection class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.ScatterPlotCollection.#ctor(NationalInstruments.UI.ScatterPlot[])">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.ScatterPlotCollection class
            from an array of items.
            </summary>
      <param name="item">
            The array of NationalInstruments.UI.ScatterPlot objects to copy.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.ScatterPlotCollection.#ctor(NationalInstruments.UI.ScatterPlotCollection)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.ScatterPlotCollection class
            from an existing collection.
            </summary>
      <param name="item">
            The NationalInstruments.UI.ScatterPlotCollection to copy.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.ScatterPlotCollection.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.ScatterPlotCollection.Add(NationalInstruments.UI.ScatterPlot)">
      <summary>
            Adds an item to end of the collection.
            </summary>
      <param name="item">
            Item to add to the collection.
            </param>
      <returns>
            The array index of the added item.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.ScatterPlotCollection.AddRange(NationalInstruments.UI.ScatterPlot[])">
      <summary>
            Adds an array of NationalInstruments.UI.ScatterPlot objects to the end of the collection.
            </summary>
      <param name="item">
            Array of NationalInstruments.UI.ScatterPlot objects to add to the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.ScatterPlotCollection.AddRange(NationalInstruments.UI.ScatterPlotCollection)">
      <summary>
            Adds a collection of NationalInstruments.UI.ScatterPlot objects to the end of the collection.
            </summary>
      <param name="item">
            Collection of NationalInstruments.UI.ScatterPlot objects to add to the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.ScatterPlotCollection.Clear">
      <summary>
            Removes all items from the collection.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.ScatterPlotCollection.Contains(NationalInstruments.UI.ScatterPlot)">
      <summary>
            Determines if the specified element is in the collection.
            </summary>
      <param name="item">Item to locate in the collection.</param>
      <returns>true if the collection contains <paramref name="item"></paramref>.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.ScatterPlotCollection.CopyTo(NationalInstruments.UI.ScatterPlot[],System.Int32)">
      <summary>
            Copies the collection to an array or a portion of an array.
            </summary>
      <param name="array">
            Destination array for the collection.
            </param>
      <param name="index">
            The index in the target array at which you want to begin copying the collection to.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.ScatterPlotCollection.IndexOf(NationalInstruments.UI.ScatterPlot)">
      <summary>
            Returns the zero-based index of the first occurrence of an item in the collection.
            </summary>
      <param name="item">
            Item to search for.
            </param>
      <returns>
            Index of the item. If the item is not found, returns -1.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.ScatterPlotCollection.Insert(System.Int32,NationalInstruments.UI.ScatterPlot)">
      <summary>
            Inserts an item into the collection at the specified index.
            </summary>
      <param name="index">
            Index to insert the item at.
            </param>
      <param name="item">
            Item to insert into the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.ScatterPlotCollection.GetEnumerator">
      <summary>
            Returns an enumerator that you can use to iterate through the collection.
            </summary>
      <returns>
            The enumerator for the collection.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.ScatterPlotCollection.Remove(NationalInstruments.UI.ScatterPlot)">
      <summary>
            Removes the first occurrence of the specified item.
            </summary>
      <param name="item">
            Item to remove from the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.ScatterPlotCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the item at the specified index.
            </summary>
      <param name="index">
            The zero-based index of the item to remove.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.ScatterPlotCollection.Item(System.Int32)">
      <summary>
            Gets or sets the NationalInstruments.UI.ScatterPlot at the specified index. In Visual C#, this property 
            is the indexer.
            </summary>
      <param name="index">
            The zero-based index of the entry to locate in the collection.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.ScatterPlotCollection.Count">
      <summary>
            Gets the number of elements in the NationalInstruments.UI.ScatterPlotCollection.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.SelectionStyle">
      <summary>
            Provides an abstract base class for specifying the style used to draw a
            selection and also provides a list of pre-defined selection styles.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.SelectionStyle.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.SelectionStyle class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.SelectionStyle.Draw(System.Object,NationalInstruments.UI.SelectionStyleDrawArgs)">
      <summary>
            Draws a selection style with the specified NationalInstruments.UI.SelectionStyleDrawArgs.
            </summary>
      <param name="context">
            The object that specifies the context in which NationalInstruments.UI.SelectionStyle.Draw(System.Object,NationalInstruments.UI.SelectionStyleDrawArgs) is called.
            </param>
      <param name="args">
            A NationalInstruments.UI.SelectionStyleDrawArgs that contains
            the drawing data.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.SelectionStyle.UnderlyingType">
      <summary>
            Gets the underlying type of an enum object value.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.SelectionStyle.OperatingSystem">
      <summary>
            Gets a selection style that is drawn based on the operating system settings.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.SelectionStyle.Outline">
      <summary>
            Gets a selection style that is drawn as an outline with a dashed border around the edge.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.SelectionStyle.Translucent">
      <summary>
            Gets a selection style that is drawn with a solid edge and a translucent body.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.SelectionStyleDrawArgs">
      <summary>
            Provides data for drawing selection styles.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.SelectionStyleDrawArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.SelectionStyleDrawArgs
            class with the specified graphics surface, selection rectangle, and selection color.
            </summary>
      <param name="graphics">
            The System.Drawing.Graphics with which to draw.
            </param>
      <param name="bounds">
            The System.Drawing.Rectangle in which the selection is drawn.
            </param>
      <param name="color">
            The System.Drawing.Color of the selection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.SelectionStyleDrawArgs.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.SelectionStyleDrawArgs.Bounds">
      <summary>
            Gets the rectangle in which the selection is drawn.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.SelectionStyleDrawArgs.Color">
      <summary>
            Gets the color of the selection.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.ShapeStyle">
      <summary>
            Provides an abstract base class for specifying a shape style and also provides 
            a list of pre-defined shape styles.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.ShapeStyle.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.ShapeStyle class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.ShapeStyle.GetPoints(System.Drawing.PointF,System.Drawing.Size)">
      <summary>
            Gets the array of points defined by the shape.
            </summary>
      <param name="shapePoint">
            The point at which the shape is located.
            </param>
      <param name="shapeSize">
            The System.Drawing.Size of the shape.
            </param>
      <returns>
            An array of System.Drawing.PointF objects that defines the shape.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.ShapeStyle.GetPoints(System.Drawing.PointF,System.Drawing.Size,System.Single)">
      <summary>
            Gets the array of points that defines the shape rotated at the specified angle.
            </summary>
      <param name="shapePoint">
            The point at which the shape is located.
            </param>
      <param name="shapeSize">
            The System.Drawing.Size of the shape.
            </param>
      <param name="angle">
            The angle at which to rotate the shape.
            </param>
      <returns>
            An array of System.Drawing.PointF objects that defines the shape.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.ShapeStyle.GetFocalPoint(System.Drawing.PointF[],System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF@)">
      <summary>
            Gets the point on the bounds of the shape where the line intersects the shape.
            </summary>
      <param name="points">
            The array of points that defines the shape.
            </param>
      <param name="pt1">
            The first point that defines the line to intersect the shape.
            </param>
      <param name="pt2">The second point that defines the line to intersect the shape.
            </param>
      <param name="intersectionPoint">
            Upon return, contains the point at which the specified line intersects the shape bounds.
            </param>
      <returns>true if the specified line intersects the shape. 
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.ShapeStyle.CreateArc(NationalInstruments.UI.Arc)">
      <summary>
            Creates an arc NationalInstruments.UI.ShapeStyle.
            </summary>
      <param name="arc">
            The NationalInstruments.UI.Arc for the style.
            </param>
      <returns>
            An arc NationalInstruments.UI.ShapeStyle.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.ShapeStyle.CreateLine(System.Single)">
      <summary>
            Creates a line NationalInstruments.UI.ShapeStyle.
            </summary>
      <param name="angle">
            The angle at which to draw the line NationalInstruments.UI.ShapeStyle.
            </param>
      <returns>
            A line NationalInstruments.UI.ShapeStyle.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.ShapeStyle.CreatePolygon(System.Single[],System.Single[])">
      <summary>
            Creates a NationalInstruments.UI.ShapeStyle that is defined by an array of x and y values.
            </summary>
      <param name="xArray">
            The array of x values that defines the shape.
            </param>
      <param name="yArray">
            The array of y values that defines the shape.
            </param>
      <returns>
            A NationalInstruments.UI.ShapeStyle that is defined by <paramref name="xArray"></paramref> and <paramref name="yArray"></paramref>.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.ShapeStyle.Draw(System.Object,NationalInstruments.UI.ShapeStyleDrawArgs)">
      <summary>
            Draws a shape with the specified NationalInstruments.UI.ShapeStyleDrawArgs.
            </summary>
      <param name="context">
            The object that specifies the context in which NationalInstruments.UI.ShapeStyle.Draw(System.Object,NationalInstruments.UI.ShapeStyleDrawArgs) is called.
            </param>
      <param name="args">
            A NationalInstruments.UI.ShapeStyleDrawArgs that contains the 
            drawing data.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.ShapeStyle.UnderlyingType">
      <summary>
            Gets the underlying type of an enum object value.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ShapeStyle.Diamond">
      <summary>
            Gets a diamond shape style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ShapeStyle.None">
      <summary>
            Gets a value indicating that there is no shape.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ShapeStyle.Oval">
      <summary>
            Gets an oval shape style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ShapeStyle.Rectangle">
      <summary>
            Gets a rectangle shape style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ShapeStyle.Asterisk">
      <summary>
            Gets an asterisk shape style.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.ShapeStyleDrawArgs">
      <summary>
            Provides data for drawing shape styles.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.ShapeStyleDrawArgs.#ctor(System.Drawing.Graphics,System.Drawing.Size,System.Drawing.PointF,System.Single,NationalInstruments.UI.FillStyle,NationalInstruments.UI.LineStyle,System.Drawing.Color,System.Drawing.Color,System.Single)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.ShapeStyleDrawArgs class
            with the specified size, point, rotation, fill style, line style, fill color, line color, and line width.
            </summary>
      <param name="graphics">
            The System.Drawing.Graphics used to draw the shape.
            </param>
      <param name="size">
            The System.Drawing.Size of the shape.
            </param>
      <param name="point">
            The System.Drawing.Point at which to draw the shape.
            </param>
      <param name="rotation">
            The rotation of the shape.
            </param>
      <param name="fillStyle">
            The NationalInstruments.UI.FillStyle of the shape.
            </param>
      <param name="lineStyle">
            The NationalInstruments.UI.LineStyle of the shape.
            </param>
      <param name="fillColor">
            The System.Drawing.Color to use to fill the shape.
            </param>
      <param name="lineColor">
            The System.Drawing.Color of the shape line.
            </param>
      <param name="lineWidth">
            The width of the shape line.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.ShapeStyleDrawArgs.Size">
      <summary>
            Gets the size of the shape.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ShapeStyleDrawArgs.Point">
      <summary>
            Gets the point at which to draw the shape.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ShapeStyleDrawArgs.Rotation">
      <summary>
            Gets the angle at which to rotate the shape.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ShapeStyleDrawArgs.FillStyle">
      <summary>
            Gets the style used to draw the fill color of the shape. 
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ShapeStyleDrawArgs.LineStyle">
      <summary>
            Gets the style of the line that borders the shape.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ShapeStyleDrawArgs.FillColor">
      <summary>
            Gets the color used to fill the shape.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ShapeStyleDrawArgs.LineColor">
      <summary>
            Gets the color of the line that borders the shape.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ShapeStyleDrawArgs.LineWidth">
      <summary>
            Gets the width of the line that borders the shape.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.SlideStyle">
      <summary>
            Provides an abstract base class for specifying a slide style
            and also provides a list of pre-defined slide styles.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.SlideStyle.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.SlideStyle class.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.SlideStyle.UnderlyingType">
      <summary>
            Gets the underlying type of an enum object value.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.SlideStyle.SunkenWithGrip">
      <summary>
            Gets a slide with a sunken look and a grip.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.SlideStyle.RaisedWithRoundedGrip">
      <summary>
            Gets a slide with a raised look and a rounded grip.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.SlideStyle.RaisedWithRoundedGrip3D">
      <summary>
            Gets a 3D slide with a raised look and a rounded grip.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.SwitchStyle">
      <summary>
            Provides an abstract base class for specifying a switch style.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.SwitchStyle.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.SwitchStyle class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.SwitchStyle.Draw(System.Object,NationalInstruments.UI.SwitchStyleDrawArgs)">
      <summary>
            Draws a switch with the specified NationalInstruments.UI.SwitchStyleDrawArgs.
            </summary>
      <param name="context">
            The object that specifies the context in which NationalInstruments.UI.SwitchStyle.Draw(System.Object,NationalInstruments.UI.SwitchStyleDrawArgs) is called.</param>
      <param name="args">
            A NationalInstruments.UI.SwitchStyleDrawArgs that contains the
            drawing data.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.SwitchStyle.UnderlyingType">
      <summary>
            Gets the underlying type of an enum object value.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.SwitchStyle.VerticalToggle">
      <summary>
            Gets a vertical toggle switch style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.SwitchStyle.VerticalToggle3D">
      <summary>
            Gets a 3D, vertical toggle switch style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.SwitchStyle.HorizontalToggle">
      <summary>
            Gets a horizontal toggle switch style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.SwitchStyle.HorizontalToggle3D">
      <summary>
            Gets a 3D, horizontal toggle switch style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.SwitchStyle.VerticalRocker">
      <summary>
            Gets a vertical rocker switch style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.SwitchStyle.VerticalRocker3D">
      <summary>
            Gets a 3D, vertical rocker switch style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.SwitchStyle.HorizontalRocker">
      <summary>
            Gets a horizontal rocker switch style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.SwitchStyle.HorizontalRocker3D">
      <summary>
            Gets a 3D, horizontal rocker switch style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.SwitchStyle.PushButton">
      <summary>
            Gets a pushbutton switch style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.SwitchStyle.PushButton3D">
      <summary>
            Gets a 3D, pushbutton switch style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.SwitchStyle.VerticalSlide">
      <summary>
            Gets a vertical slide switch style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.SwitchStyle.VerticalSlide3D">
      <summary>
            Gets a 3D, vertical slide switch style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.SwitchStyle.HorizontalSlide">
      <summary>
            Gets a horizontal slide switch style.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.SwitchStyle.HorizontalSlide3D">
      <summary>
            Gets a 3D, horizontal slide switch style.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.SwitchStyleDrawArgs">
      <summary>
            Provides the data to draw a switch style.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.SwitchStyleDrawArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Boolean)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.SwitchStyleDrawArgs class with the specified
            graphics, bounds, color, and value.
            </summary>
      <param name="graphics">
            The System.Drawing.Graphics with which to draw.
            </param>
      <param name="bounds">
            The System.Drawing.Rectangle in which the switch style is drawn. This value is the bounds of the 
            control, excluding the caption, and a 4-pixel thick padding on the sides.
            </param>
      <param name="color">
            The System.Drawing.Color of the switch style.
            </param>
      <param name="value">
            The System.Boolean value represented by the switch style.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.TankStyle">
      <summary>
            Provides an abstract base class for specifying a tank style
            and also provides a list of pre-defined tank styles.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.TankStyle.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.TankStyle class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.TankStyle.DrawPointer(NationalInstruments.UI.INumericPointer,NationalInstruments.UI.NumericPointerStyleDrawArgs,System.Double)">
      <summary>
            Draws the pointer of the style.
            </summary>
      <param name="context">
            An NationalInstruments.UI.INumericPointer with additional context information. 
            </param>
      <param name="args">
            A NationalInstruments.UI.NumericPointerStyleDrawArgs that contains the
            drawing data.
            </param>
      <param name="value">
            The value used to draw the pointer. 
            </param>
    </member>
    <member name="P:NationalInstruments.UI.TankStyle.UnderlyingType">
      <summary>
            Gets the underlying type of an enum object value.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.TankStyle.Flat">
      <summary>
            Gets a tank with a flat look.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.TankStyle.Raised">
      <summary>
            Gets a tank with a raised look.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.TankStyle.Raised3D">
      <summary>
            Gets a 3D tank with a raised look.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.ThermometerStyle">
      <summary>
            Provides an abstract base class for specifying a thermometer style
            and also provides a list of pre-defined thermometer styles.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.ThermometerStyle.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.ThermometerStyle class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.ThermometerStyle.DrawPointer(NationalInstruments.UI.INumericPointer,NationalInstruments.UI.NumericPointerStyleDrawArgs,System.Double)">
      <summary>
            Draws the pointer of the style.
            </summary>
      <param name="context">
            An NationalInstruments.UI.INumericPointer with additional context information. 
            </param>
      <param name="args">
            A NationalInstruments.UI.NumericPointerStyleDrawArgs that contains the
            drawing data.
            </param>
      <param name="value">
            The value used to draw the pointer. 
            </param>
    </member>
    <member name="P:NationalInstruments.UI.ThermometerStyle.UnderlyingType">
      <summary>
            Gets the underlying type of an enum object value.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ThermometerStyle.Raised3D">
      <summary>
            Gets a 3D thermometer with a raised look.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ThermometerStyle.Raised">
      <summary>
            Gets the thermometer with a raised look.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.ThermometerStyle.Flat">
      <summary>
            Gets a thermometer with a flat look.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.WaveformPlot">
      <summary>
            Defines a class for plotting waveforms that represent x or y values.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlot.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.WaveformPlot class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlot.#ctor(NationalInstruments.UI.XAxis,NationalInstruments.UI.YAxis)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.WaveformPlot class
            with the specified NationalInstruments.UI.XAxis and
            NationalInstruments.UI.YAxis.
            </summary>
      <param name="xAxis">
            The NationalInstruments.UI.XAxis to use for the plot.
            </param>
      <param name="yAxis">
            The NationalInstruments.UI.YAxis to use for the plot.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlot.PlotXAppend(System.Double)">
      <summary>
            Plots a single x value against a starting y value by appending the x and y value
             to the existing data.</summary>
      <param name="xData">
            The x value to append.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlot.PlotXAppend(System.Double,System.Double)">
      <summary>
            Plots a single x value against a starting y value by appending the x and y value to the existing data. 
            NationalInstruments.UI.WaveformPlot.PlotXAppend(System.Double) uses the 
            specified value to increment y values.
            </summary>
      <param name="xData">
            The x value to append.
            </param>
      <param name="increment">
            The value to use to increment y values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlot.PlotXAppend(System.Double,System.TimeSpan)">
      <summary>
            Plots a single x value against a starting y value by appending the x and y value to the existing data.
            NationalInstruments.UI.WaveformPlot.PlotXAppend(System.Double) uses the 
            specified time span to increment y values.
            </summary>
      <param name="xData">
            The x value to append.
            </param>
      <param name="increment">
            A System.TimeSpan that represents the value to use to increment y values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlot.PlotXAppend(System.Double[])">
      <summary>
            Plots an array of x values against a starting y value by appending the x and y values to the existing data.</summary>
      <param name="xData">
            The x values to append.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlot.PlotXAppend(System.Double[],System.Double)">
      <summary>
            Plots an array of x values against a starting y value by appending the x and y values to the existing data.
            NationalInstruments.UI.WaveformPlot.PlotXAppend(System.Double) uses the 
            specified value to increment y values.
            </summary>
      <param name="xData">
            The x values to append.
            </param>
      <param name="increment">
            The value to use to increment y values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlot.PlotXAppend(System.Double[],System.TimeSpan)">
      <summary>
            Plots a single x value against a starting y value by appending the x and y value to the existing data.
            NationalInstruments.UI.WaveformPlot.PlotXAppend(System.Double) uses the 
            specified time span to increment y values.
            </summary>
      <param name="xData">
            The x values to append.
            </param>
      <param name="increment">
            A System.TimeSpan that represents the value to use to increment y values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlot.PlotX(System.Double)">
      <summary>
            Plots a single x value against the default starting y value.
            </summary>
      <param name="xData">
            The x value to plot.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlot.PlotX(System.Double[])">
      <summary>
            Plots an array of x values against the default starting y value.
            </summary>
      <param name="xData">
            The array of x values to plot.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlot.PlotX(System.Double[],System.Double,System.Double)">
      <summary>
            Plots an array of x values against the specified starting y value. NationalInstruments.UI.WaveformPlot.PlotX(System.Double)
            uses the specified value to increment y values.
            </summary>
      <param name="xData">
            The array of x values to plot.
            </param>
      <param name="start">
            The starting y value.
            </param>
      <param name="increment">
            The value to use to increment y values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlot.PlotX(System.Double[],System.DateTime,System.TimeSpan)">
      <summary>
            Plots an array of x values against the specified System.DateTime as the starting y value. 
            NationalInstruments.UI.WaveformPlot.PlotX(System.Double) uses the 
            specified time span to increment y values.
            </summary>
      <param name="xData">
            The array of x values to plot.
            </param>
      <param name="start">
            A System.DateTime that represents the starting y value.
            </param>
      <param name="increment">
            A System.TimeSpan that represents the value to use to increment y values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlot.PlotYAppend(System.Double)">
      <summary>
            Plots a single y value against a starting x value by appending the x and y value to the existing data.
            </summary>
      <param name="yData">
            The y value to append.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlot.PlotYAppend(System.Double,System.Double)">
      <summary>
            Plots a single y value against a starting x value by appending the x and y value to the existing data.
            NationalInstruments.UI.WaveformPlot.PlotYAppend(System.Double) uses the 
            specified value to increment x values.
            </summary>
      <param name="yData">
            The y value to append.
            </param>
      <param name="increment">
            The value to use to increment x values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlot.PlotYAppend(System.Double,System.TimeSpan)">
      <summary>
            Plots a single y value against a starting x value by appending the x and y value to the existing data.
            NationalInstruments.UI.WaveformPlot.PlotYAppend(System.Double) uses the 
            specified time span to increment x values.
            </summary>
      <param name="yData">
            The y value to append.
            </param>
      <param name="increment">
            A System.TimeSpan that represents the value to use to increment x values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlot.PlotYAppend(System.Double[])">
      <summary>
            Plots an array of y values against a starting x value by appending the x and y values to the existing data.
            </summary>
      <param name="yData">
            The y values to append.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlot.PlotYAppend(System.Double[],System.Double)">
      <summary>
            Plots an array of y values against a starting x value by appending the x and y values to the existing data.
            NationalInstruments.UI.WaveformPlot.PlotYAppend(System.Double) uses the 
            specified value to increment x values.
            </summary>
      <param name="yData">
            The y values to append.
            </param>
      <param name="increment">
            The value to use to increment x values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlot.PlotYAppend(System.Double[],System.TimeSpan)">
      <summary>
            Plots a single y value against a starting x value by appending the x and y value to the existing data.
            NationalInstruments.UI.WaveformPlot.PlotYAppend(System.Double) uses the 
            specified time span to increment x values.
            </summary>
      <param name="yData">
            The y values to append.
            </param>
      <param name="increment">
            A System.TimeSpan that represents the value to use to increment x values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlot.PlotY(System.Double)">
      <summary>
            Plots a single y value against the default starting x value.
            </summary>
      <param name="yData">
            The y value to plot.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlot.PlotY(System.Double[])">
      <summary>
            Plots an array of y values against the default starting x value.</summary>
      <param name="yData">
            The array of y values to plot.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlot.PlotY(System.Double[],System.Double,System.Double)">
      <summary>
            Plots an array of y values against the specified starting x value using the specified value
            to increment x values.
            </summary>
      <param name="yData">
            The array of y values to plot.
            </param>
      <param name="start">
            The starting x value.
            </param>
      <param name="increment">
            The value to use to increment x values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlot.PlotY(System.Double[],System.DateTime,System.TimeSpan)">
      <summary>
            Plots an array of y values against the specified System.DateTime as the starting x value using the 
            specified time span to increment x values.
            </summary>
      <param name="yData">
            The array of y values to plot.
            </param>
      <param name="start">
            A System.DateTime that represents the starting x value.
            </param>
      <param name="increment">
            A System.TimeSpan that represents the value to use to increment x values.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlot.Clone">
      <summary>
            Creates a new object that is a copy of this instance.
            </summary>
      <returns>
            A new object that is a copy of this instance.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.WaveformPlot.DefaultStart">
      <summary>
            Gets or sets the default value that is used for the starting x or y value.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.WaveformPlot.DefaultIncrement">
      <summary>
            Gets or sets the default value to use to increment x or y values.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.WaveformPlot.Mode">
      <summary>
            Gets the category of the method that is currently used to plot data.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.WaveformPlot.IntervalPolarity">
      <summary>
            Gets the polarity of the interval that separates the waveform data.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.WaveformPlotCollection">
      <summary>
            Represents a strongly typed collection of NationalInstruments.UI.WaveformPlot objects.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlotCollection.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.WaveformPlotCollection class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlotCollection.#ctor(NationalInstruments.UI.WaveformPlot[])">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.WaveformPlotCollection class
            from an array of NationalInstruments.UI.WaveformPlot objects.
            </summary>
      <param name="item">
            Array of NationalInstruments.UI.WaveformPlot objects to copy.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlotCollection.#ctor(NationalInstruments.UI.WaveformPlotCollection)">
      <summary>
            Initializes a new instance of NationalInstruments.UI.WaveformPlotCollection
            from an existing collection.
            </summary>
      <param name="item">
            The NationalInstruments.UI.WaveformPlotCollection to copy.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlotCollection.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlotCollection.Add(NationalInstruments.UI.WaveformPlot)">
      <summary>
            Adds an item to end of the collection.
            </summary>
      <param name="item">
            Item to add to the collection.
            </param>
      <returns>
            The array index of the added item.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlotCollection.AddRange(NationalInstruments.UI.WaveformPlot[])">
      <summary>
            Adds an array of NationalInstruments.UI.WaveformPlot objects to the end of the collection.
            </summary>
      <param name="item">
            Array of NationalInstruments.UI.WaveformPlot objects to add to the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlotCollection.AddRange(NationalInstruments.UI.WaveformPlotCollection)">
      <summary>
            Adds a collection of NationalInstruments.UI.WaveformPlot objects to the end of the collection.
            </summary>
      <param name="item">
            Collection of NationalInstruments.UI.WaveformPlot objects to add to the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlotCollection.Clear">
      <summary>
            Removes all items from the collection.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlotCollection.Contains(NationalInstruments.UI.WaveformPlot)">
      <summary>
            Determines if the specified element is in the collection.
            </summary>
      <param name="item">Item to locate in the collection.</param>
      <returns>true if the collection contains <paramref name="item"></paramref>.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlotCollection.CopyTo(NationalInstruments.UI.WaveformPlot[],System.Int32)">
      <summary>
            Copies the collection to an array or a portion of an array.
            </summary>
      <param name="array">
            Destination array for the collection.
            </param>
      <param name="index">
            The index in the target array at which you want to begin copying the collection to.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlotCollection.IndexOf(NationalInstruments.UI.WaveformPlot)">
      <summary>
            Returns the zero-based index of the first occurrence of an item in the collection.
            </summary>
      <param name="item">
            Item to search for.
            </param>
      <returns>
            Index of the item. If the item is not found, returns -1.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlotCollection.Insert(System.Int32,NationalInstruments.UI.WaveformPlot)">
      <summary>
            Inserts an item into the collection at the specified index.
            </summary>
      <param name="index">
            Index to insert the item at.
            </param>
      <param name="item">
            Item to insert into the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlotCollection.GetEnumerator">
      <summary>
            Returns an enumerator that you can use to iterate through the collection.
            </summary>
      <returns>
            The enumerator for the collection.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlotCollection.Remove(NationalInstruments.UI.WaveformPlot)">
      <summary>
            Removes the first occurrence of the specified item.
            </summary>
      <param name="item">
            Item to remove from the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.WaveformPlotCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the item at the specified index.
            </summary>
      <param name="index">
            The zero-based index of the item to remove.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.WaveformPlotCollection.Item(System.Int32)">
      <summary>
            Gets or sets the NationalInstruments.UI.WaveformPlot at the specified index. In Visual C#, this property 
            is the indexer.
            </summary>
      <param name="index">
            The zero-based index of the entry to locate in the collection.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.WaveformPlotCollection.Count">
      <summary>
            Gets the number of elements in the NationalInstruments.UI.WaveformPlotCollection.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.WaveformPlotMode">
      <summary>
            Specifies the category of method that is used to plot data on a waveform plot.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.WaveformPlotMode.Clear">
      <summary>
            The method that clears data from the plot is being used.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.WaveformPlotMode.PlotX">
      <summary>
            The method that plots a waveform of x data values is being used.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.WaveformPlotMode.PlotY">
      <summary>
            The method that plots a waveform of y data values is being used.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.XAxis">
      <summary>
            Represents the horizontal axis on a graph.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XAxis.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.XAxis class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XAxis.GetSize(NationalInstruments.UI.XAxisPosition)">
      <summary>
            Returns the size of the NationalInstruments.UI.XAxis at the specified position.
            </summary>
      <param name="position">
            An NationalInstruments.UI.XAxisPosition that indicates the position of the NationalInstruments.UI.XAxis
            for which the size is returned.
            </param>
      <returns>
            The System.Drawing.Size of the NationalInstruments.UI.XAxis.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XAxis.GetBounds(NationalInstruments.UI.XAxisPosition)">
      <summary>
            Returns the bounds of the NationalInstruments.UI.XAxis at the specified position.
            </summary>
      <param name="position">
            An NationalInstruments.UI.XAxisPosition that indicates the position of the NationalInstruments.UI.XAxis
             for which the bounds are returned.
            </param>
      <returns>
            A System.Drawing.Rectangle that represents the bounds of the NationalInstruments.UI.XAxis.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XAxis.GetBounds(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            Returns the bounds of the NationalInstruments.UI.XAxis relative to a reference rectangle.
            </summary>
      <param name="graphics">
            The System.Drawing.Graphics object that is used to calculate the bounds of the axis.
            </param>
      <param name="referenceRectangle">
            A System.Drawing.Rectangle that provides a reference for the bounds of the NationalInstruments.UI.XAxis.
            </param>
      <returns>
            A System.Drawing.Rectangle that provides a reference for the bounds of the NationalInstruments.UI.XAxis.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XAxis.GetBounds(System.Drawing.Graphics,System.Drawing.Rectangle,NationalInstruments.UI.XAxisPosition)">
      <summary>
            Returns the bounds of the NationalInstruments.UI.XAxis relative to a reference rectangle at the specified position.
            </summary>
      <param name="graphics">
            The System.Drawing.Graphics object that is used to calculate the bounds of the axis.
            </param>
      <param name="referenceRectangle">
            A System.Drawing.Rectangle that provides a reference for the bounds of the NationalInstruments.UI.XAxis.
            </param>
      <param name="position">
            An NationalInstruments.UI.XAxisPosition that indicates the position of the NationalInstruments.UI.XAxis
             for which the bounds are returned.
            </param>
      <returns>
            A System.Drawing.Rectangle that represents the bounds of the NationalInstruments.UI.XAxis.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XAxis.Draw(NationalInstruments.UI.ComponentDrawArgs,NationalInstruments.UI.XAxisPosition)">
      <summary>
            Draws the NationalInstruments.UI.XAxis with the specified axis position.
            </summary>
      <param name="args">
            A NationalInstruments.UI.ComponentDrawArgs that contains the 
            drawing data.
            </param>
      <param name="position">
            The position of the axis.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XAxis.Clone">
      <summary>
            Creates a new object that is a deep copy of this instance.
            </summary>
      <returns>
            A new object that is a deep copy of this instance.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.XAxis.CaptionPosition">
      <summary>
            Gets or sets the position of the caption that is displayed for the axis.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XAxis.Position">
      <summary>
            Gets or sets the position of the axis.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XAxis.MinimumHeight">
      <summary>
            Gets or sets the minimum height required by NationalInstruments.UI.XAxis,
            allowing you to customize the NationalInstruments.UI.XAxis height. 
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.XAxisCollection">
      <summary>
            Represents a strongly typed collection of NationalInstruments.UI.XAxis objects.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XAxisCollection.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.XAxisCollection class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XAxisCollection.#ctor(NationalInstruments.UI.XAxis[])">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.XAxisCollection class
            from an array of NationalInstruments.UI.XAxis objects.
            </summary>
      <param name="item">
            Array of NationalInstruments.UI.XAxis objects to copy.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XAxisCollection.#ctor(NationalInstruments.UI.XAxisCollection)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.XAxisCollection class
            from an existing collection.
            </summary>
      <param name="item">
            The NationalInstruments.UI.XAxisCollection to copy.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XAxisCollection.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XAxisCollection.Add(NationalInstruments.UI.XAxis)">
      <summary>
            Adds an item to end of the collection.
            </summary>
      <param name="item">
            Item to add to the collection.
            </param>
      <returns>
            The array index of the added item.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XAxisCollection.AddRange(NationalInstruments.UI.XAxis[])">
      <summary>
            Adds an array of NationalInstruments.UI.XAxis objects to the end of the collection.
            </summary>
      <param name="item">
            Array of NationalInstruments.UI.XAxis objects to add to the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XAxisCollection.AddRange(NationalInstruments.UI.XAxisCollection)">
      <summary>
            Adds a collection of NationalInstruments.UI.XAxis objects to the end of the collection.
            </summary>
      <param name="item">
            Collection of NationalInstruments.UI.XAxis objects to add to the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XAxisCollection.Clear">
      <summary>
            Removes all items from the collection.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XAxisCollection.Contains(NationalInstruments.UI.XAxis)">
      <summary>
            Determines if the specified element is in the collection.
            </summary>
      <param name="item">Item to locate in the collection.</param>
      <returns>true if the collection contains <paramref name="item"></paramref>.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XAxisCollection.CopyTo(NationalInstruments.UI.XAxis[],System.Int32)">
      <summary>
            Copies the collection to an array or a portion of an array.
            </summary>
      <param name="array">
            Destination array for the collection.
            </param>
      <param name="index">
            The index in the target array at which you want to begin copying the collection to.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XAxisCollection.IndexOf(NationalInstruments.UI.XAxis)">
      <summary>
            Returns the zero-based index of the first occurrence of an item in the collection.
            </summary>
      <param name="item">
            Item to search for.
            </param>
      <returns>
            Index of the item. If the item is not found, returns -1.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XAxisCollection.Insert(System.Int32,NationalInstruments.UI.XAxis)">
      <summary>
            Inserts an item into the collection at the specified index.
            </summary>
      <param name="index">
            Index to insert the item at.
            </param>
      <param name="item">
            Item to insert into the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XAxisCollection.GetEnumerator">
      <summary>
            Returns an enumerator that you can use to iterate through the collection.
            </summary>
      <returns>
            The enumerator for the collection.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XAxisCollection.Remove(NationalInstruments.UI.XAxis)">
      <summary>
            Removes the first occurrence of the specified item.
            </summary>
      <param name="item">
            Item to remove from the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XAxisCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the item at the specified index.
            </summary>
      <param name="index">
            The zero-based index of the item to remove.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.XAxisCollection.Item(System.Int32)">
      <summary>
            Gets or sets the NationalInstruments.UI.XAxis at the specified index. In Visual C#, this property 
            is the indexer.
            </summary>
      <param name="index">
            The zero-based index of the entry to locate in the collection.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.XAxisCollection.Count">
      <summary>
            Gets the number of elements in the NationalInstruments.UI.XAxisCollection.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.XAxisEventArgs">
      <summary>
            Provides data for the 
            NationalInstruments.UI.IXYGraph.XAxisRangeChanged event.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XAxisEventArgs.#ctor(NationalInstruments.UI.XAxis)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.XAxisEventArgs class
            with the specified x-axis.
            </summary>
      <param name="xAxis">
            The NationalInstruments.UI.XAxis on which the change occurred.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XAxisEventArgs.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.XAxisEventArgs.XAxis">
      <summary>
            Gets the x-axis on which the change occurred.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.XAxisEventHandler">
      <summary>
            Represents the method that handles the 
            NationalInstruments.UI.IXYGraph.XAxisRangeChanged event.
            </summary>
      <param name="sender">
            The source of the event.
            </param>
      <param name="e">
            The NationalInstruments.UI.XAxisEventArgs that contains the event
            data.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.XAxisPosition">
      <summary>
            Specifies the position of an x-axis with respect to the plot area.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.XAxisPosition.Top">
      <summary>
            The x-axis is positioned at the top of the plot area.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.XAxisPosition.Bottom">
      <summary>
            The x-axis is positioned at the bottom of the plot area.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.XAxisPosition.TopBottom">
      <summary>
            The x-axis is positioned at the top and bottom of the plot area.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.XYAnnotation">
      <summary>
            Provides an abstract base class for annotations that are displayed with 
            respect to an NationalInstruments.UI.XYAnnotation.XAxis and a 
            NationalInstruments.UI.XYAnnotation.YAxis.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XYAnnotation.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.XYAnnotation class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XYAnnotation.#ctor(NationalInstruments.UI.XAxis,NationalInstruments.UI.YAxis)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.XYAnnotation class with the specified
            NationalInstruments.UI.XAxis and NationalInstruments.UI.YAxis.
            </summary>
      <param name="xAxis">
            The NationalInstruments.UI.XAxis of the annotation.
            </param>
      <param name="yAxis">
            The NationalInstruments.UI.YAxis of the annotation.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYAnnotation.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by NationalInstruments.UI.XYAnnotation.
            </summary>
      <param name="disposing">
            If true, this method releases managed and unmanaged resources. If false, this method releases
            only unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYAnnotation.OnBeforeDragCaption(NationalInstruments.UI.BeforeDragXYAnnotationCaptionEventArgs)">
      <summary>
            Raises the NationalInstruments.UI.XYAnnotation.BeforeDragCaption event.
            </summary>
      <param name="e">
            An NationalInstruments.UI.BeforeDragXYAnnotationCaptionEventArgs 
            that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYAnnotation.OnAfterDragCaption(NationalInstruments.UI.AfterDragXYAnnotationCaptionEventArgs)">
      <summary>
            Raises the NationalInstruments.UI.XYAnnotation.AfterDragCaption event.
            </summary>
      <param name="e">
            An NationalInstruments.UI.AfterDragXYAnnotationCaptionEventArgs 
            that contains the event data.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.XYAnnotation.XAxis">
      <summary>
            Gets or sets the x-axis that determines where to draw the annotation.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYAnnotation.YAxis">
      <summary>
            Gets or sets the y-axis that determines where to draw the annotation.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.XYAnnotation.BeforeDragCaption">
      <summary>
            Occurs before NationalInstruments.UI.Annotation.Caption is dragged.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.XYAnnotation.AfterDragCaption">
      <summary>
            Occurs after NationalInstruments.UI.Annotation.Caption is dragged.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.XYAnnotationCollection">
      <summary>
            Represents a strongly typed collection of NationalInstruments.UI.XYAnnotation objects.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XYAnnotationCollection.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.XYAnnotationCollection class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XYAnnotationCollection.#ctor(NationalInstruments.UI.XYAnnotation[])">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.XYAnnotationCollection class
            from an array of NationalInstruments.UI.XYAnnotation objects.
            </summary>
      <param name="item">
            Array of NationalInstruments.UI.XYAnnotation objects to copy.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYAnnotationCollection.#ctor(NationalInstruments.UI.XYAnnotationCollection)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.XYAnnotationCollection class
            from an existing collection.
            </summary>
      <param name="item">
            The NationalInstruments.UI.XYAnnotationCollection to copy.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYAnnotationCollection.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYAnnotationCollection.Add(NationalInstruments.UI.XYAnnotation)">
      <summary>
            Adds an item to the end of the collection.
            </summary>
      <param name="item">
            Item to add to the collection.
            </param>
      <returns>
            The array index of the added item.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYAnnotationCollection.AddRange(NationalInstruments.UI.XYAnnotation[])">
      <summary>
            Adds an array of NationalInstruments.UI.XYAnnotation objects to the end of the collection.
            </summary>
      <param name="item">
            Array of NationalInstruments.UI.XYAnnotation objects to add to the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYAnnotationCollection.AddRange(NationalInstruments.UI.XYAnnotationCollection)">
      <summary>
            Adds a collection of NationalInstruments.UI.XYAnnotation objects to the end of the collection.
            </summary>
      <param name="item">
            Collection of NationalInstruments.UI.XYAnnotation objects to add to the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYAnnotationCollection.Clear">
      <summary>
            Removes all items from the collection.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XYAnnotationCollection.Contains(NationalInstruments.UI.XYAnnotation)">
      <summary>
            Determines if the specified element is in the collection.
            </summary>
      <param name="item">Item to locate in the collection.</param>
      <returns>true if the collection contains <paramref name="item"></paramref>.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYAnnotationCollection.CopyTo(NationalInstruments.UI.XYAnnotation[],System.Int32)">
      <summary>
            Copies the collection to an array or a portion of an array.
            </summary>
      <param name="array">
            Destination array for the collection.
            </param>
      <param name="index">
            The index in the target array at which you want to begin copying the collection to.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYAnnotationCollection.IndexOf(NationalInstruments.UI.XYAnnotation)">
      <summary>
            Returns the zero-based index of the first occurrence of an item in the collection.
            </summary>
      <param name="item">
            Item to search for.
            </param>
      <returns>
            Index of the item. If the item is not found, returns -1.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYAnnotationCollection.Insert(System.Int32,NationalInstruments.UI.XYAnnotation)">
      <summary>
            Inserts an item into the collection at the specified index.
            </summary>
      <param name="index">
            Index to insert the item at.
            </param>
      <param name="item">
            Item to insert into the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYAnnotationCollection.GetEnumerator">
      <summary>
            Returns an enumerator that you can use to iterate through the collection.
            </summary>
      <returns>
            The enumerator for the collection.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYAnnotationCollection.Remove(NationalInstruments.UI.XYAnnotation)">
      <summary>
            Removes the first occurrence of the specified item.
            </summary>
      <param name="item">
            Item to remove from the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYAnnotationCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the item at the specified index.
            </summary>
      <param name="index">
            The zero-based index of the item to remove.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.XYAnnotationCollection.Item(System.Int32)">
      <summary>
            Gets or sets NationalInstruments.UI.XYAnnotation at the specified index. In Visual C#, this property 
            is the indexer.
            </summary>
      <param name="index">
            The zero-based index of the entry to locate in the collection.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.XYAnnotationCollection.Count">
      <summary>
            Gets the number of elements in the NationalInstruments.UI.XYAnnotationCollection.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.XYCursor">
      <summary>
            Represents a cursor that is associated with an NationalInstruments.UI.XYPlot.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XYCursor.#ctor(NationalInstruments.UI.XYPlot)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.XYCursor class with the specified
            NationalInstruments.UI.XYPlot.
            </summary>
      <param name="plot">
            The NationalInstruments.UI.XYPlot of the cursor.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYCursor.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.XYCursor class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XYCursor.MoveCursor(System.Double,System.Double)">
      <summary>
            Moves NationalInstruments.UI.XYCursor to the specified position. 
            </summary>
      <param name="xValue">
            The x coordinate to move NationalInstruments.UI.XYCursor to.
            </param>
      <param name="yValue">
            The y coordinate to move NationalInstruments.UI.XYCursor to.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYCursor.MoveCursor(System.Int32)">
      <summary>
            Moves NationalInstruments.UI.XYCursor to the specified data index.
            </summary>
      <param name="index">
            The data index to move the cursor to.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYCursor.MoveNext">
      <summary>
            Advances NationalInstruments.UI.XYCursor forward 1 index.
            </summary>
      <returns>true if NationalInstruments.UI.XYCursor moved; otherwise,
            false.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYCursor.MoveNext(System.Int32)">
      <summary>
            Advances NationalInstruments.UI.XYCursor forward a specified number of indexes.
            </summary>
      <param name="pointCount">
            The number of indexes to advance the cursor. 
            </param>
      <returns>true if NationalInstruments.UI.XYCursor moved; otherwise,
            false.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYCursor.MovePrevious">
      <summary>
            Recedes NationalInstruments.UI.XYCursor back 1 index.
            </summary>
      <returns>true if NationalInstruments.UI.XYCursor moved; otherwise,
            false.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYCursor.MovePrevious(System.Int32)">
      <summary>
            Recedes NationalInstruments.UI.XYCursor back a specified number of indexes. 
            </summary>
      <param name="pointCount">
            The number of indexes to recede the cursor.
            </param>
      <returns>true if the NationalInstruments.UI.XYCursor moved; otherwise,
            false.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYCursor.GetCurrentIndex">
      <summary>
            Gets the current data index of the cursor.
            </summary>
      <returns>
            The value of -1 if NationalInstruments.UI.Cursor.SnapMode is
            NationalInstruments.UI.CursorSnapMode.Fixed or NationalInstruments.UI.CursorSnapMode.Floating or
            the NationalInstruments.UI.XYCursor.Plot has no data; otherwise, the data index.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYCursor.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by NationalInstruments.UI.XYCursor.
            </summary>
      <param name="disposing">
            If true, this method releases managed and unmanaged resources. If false, this method releases
            only unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYCursor.Clone">
      <summary>
            Creates a new object that is a copy of this instance.
            </summary>
      <returns>
            A new object that is a copy of this instance.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYCursor.OnBeforeMove(NationalInstruments.UI.BeforeMoveXYCursorEventArgs)">
      <summary>
            Raises the NationalInstruments.UI.XYCursor.BeforeMove event.
            </summary>
      <param name="e">
            A NationalInstruments.UI.BeforeMoveXYCursorEventArgs 
            that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYCursor.OnBeforeDraw(NationalInstruments.UI.BeforeDrawXYCursorEventArgs)">
      <summary>
            Raises the NationalInstruments.UI.XYCursor.BeforeDraw event.
            </summary>
      <param name="e">
            A NationalInstruments.UI.BeforeDrawXYCursorEventArgs that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYCursor.OnAfterMove(NationalInstruments.UI.AfterMoveXYCursorEventArgs)">
      <summary>
            Raises the NationalInstruments.UI.XYCursor.AfterMove event.
            </summary>
      <param name="e">
            An NationalInstruments.UI.AfterMoveXYCursorEventArgs 
            that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYCursor.OnAfterDraw(NationalInstruments.UI.AfterDrawXYCursorEventArgs)">
      <summary>
            Raises the NationalInstruments.UI.XYCursor.AfterDraw event.
            </summary>
      <param name="e">
            An NationalInstruments.UI.AfterDrawXYCursorEventArgs that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYCursor.GetService(System.Type)">
      <summary>
            Returns an object that represents a service provided by the component or by its container.
            </summary>
      <param name="service">
            A service provided by the component.
            </param>
      <returns>
            An System.Object that represents a service provided by the component.  This value is a
            null if the component does not provide the specified service.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.XYCursor.Plot">
      <summary>
            Gets or sets the NationalInstruments.UI.XYPlot that the 
            NationalInstruments.UI.XYCursor is associated with.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYCursor.XPosition">
      <summary>
            Gets or sets the x coordinate of 
            NationalInstruments.UI.XYCursor.  
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYCursor.YPosition">
      <summary>
            Gets or sets the y coordinate of 
            NationalInstruments.UI.XYCursor.  
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYCursor.LabelXFormat">
      <summary>
            Gets or sets the format string used to format the x data value displayed in the cursor label.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYCursor.LabelYFormat">
      <summary>
            Gets or sets the format string used to format the y data value displayed in the cursor label.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.XYCursor.BeforeMove">
      <summary>
            Occurs before NationalInstruments.UI.XYCursor moves.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.XYCursor.BeforeDraw">
      <summary>
            Occurs before the cursor is drawn.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.XYCursor.AfterMove">
      <summary>
            Occurs after NationalInstruments.UI.XYCursor moves.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.XYCursor.AfterDraw">
      <summary>
            Occurs after the cursor has been drawn.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.XYCursorCollection">
      <summary>
            Represents a strongly typed collection of NationalInstruments.UI.XYCursor objects.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XYCursorCollection.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.XYCursorCollection class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XYCursorCollection.#ctor(NationalInstruments.UI.XYCursor[])">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.XYCursorCollection class
            from an array of NationalInstruments.UI.XYCursor objects.
            </summary>
      <param name="item">
            Array of NationalInstruments.UI.XYCursor objects to copy.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYCursorCollection.#ctor(NationalInstruments.UI.XYCursorCollection)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.XYCursorCollection class
            from an existing collection.
            </summary>
      <param name="item">
            The NationalInstruments.UI.XYCursorCollection to copy.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYCursorCollection.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYCursorCollection.Add(NationalInstruments.UI.XYCursor)">
      <summary>
            Adds an item to end of the collection.
            </summary>
      <param name="item">
            Item to add to the collection.
            </param>
      <returns>
            The array index of the added item.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYCursorCollection.AddRange(NationalInstruments.UI.XYCursor[])">
      <summary>
            Adds an array of NationalInstruments.UI.XYCursor objects to the end of the collection.
            </summary>
      <param name="item">
            Array of NationalInstruments.UI.XYCursor objects to add to the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYCursorCollection.AddRange(NationalInstruments.UI.XYCursorCollection)">
      <summary>
            Adds a collection of NationalInstruments.UI.XYCursor objects to the end of the collection.
            </summary>
      <param name="item">
            Collection of NationalInstruments.UI.XYCursor objects to add to the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYCursorCollection.Clear">
      <summary>
            Removes all items from the collection.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XYCursorCollection.Contains(NationalInstruments.UI.XYCursor)">
      <summary>
            Determines if the specified element is in the collection.
            </summary>
      <param name="item">Item to locate in the collection.</param>
      <returns>true if the collection contains <paramref name="item"></paramref>.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYCursorCollection.CopyTo(NationalInstruments.UI.XYCursor[],System.Int32)">
      <summary>
            Copies the collection to an array or a portion of an array.
            </summary>
      <param name="array">
            Destination array for the collection.
            </param>
      <param name="index">
            The index in the target array at which you want to begin copying the collection to.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYCursorCollection.IndexOf(NationalInstruments.UI.XYCursor)">
      <summary>
            Returns the zero-based index of the first occurrence of an item in the collection.
            </summary>
      <param name="item">
            Item to search for.
            </param>
      <returns>
            Index of the item. If the item is not found, returns -1.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYCursorCollection.Insert(System.Int32,NationalInstruments.UI.XYCursor)">
      <summary>
            Inserts an item into the collection at the specified index.
            </summary>
      <param name="index">
            Index to insert the item at.
            </param>
      <param name="item">
            Item to insert into the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYCursorCollection.GetEnumerator">
      <summary>
            Returns an enumerator that you can use to iterate through the collection.
            </summary>
      <returns>
            The enumerator for the collection.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYCursorCollection.Remove(NationalInstruments.UI.XYCursor)">
      <summary>
            Removes the first occurrence of the specified item.
            </summary>
      <param name="item">
            Item to remove from the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYCursorCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the item at the specified index.
            </summary>
      <param name="index">
            The zero-based index of the item to remove.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.XYCursorCollection.Item(System.Int32)">
      <summary>
            Gets or sets NationalInstruments.UI.XYCursor at the specified index. In Visual C#, this property 
            is the indexer.
            </summary>
      <param name="index">
            The zero-based index of the entry to locate in the collection.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.XYCursorCollection.Count">
      <summary>
            Gets the number of elements in the NationalInstruments.UI.XYCursorCollection.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.XYGraphHitTestInfo">
      <summary>
            Specifies the parts of an x-y graph control that can be hit-tested.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.XYGraphHitTestInfo.None">
      <summary>
            The portion of an x-y graph outside the axes, cursors, plots, and annotations.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.XYGraphHitTestInfo.Plot">
      <summary>
            The plot of an x-y graph.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.XYGraphHitTestInfo.XAxis">
      <summary>
            The x-axis of an x-y graph.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.XYGraphHitTestInfo.YAxis">
      <summary>
            The y-axis of an x-y graph.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.XYGraphHitTestInfo.Cursor">
      <summary>
            The cursor of an x-y graph.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.XYGraphHitTestInfo.Annotation">
      <summary>
            The annotation of an x-y graph.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.XYGraphHitTestInfo.PlotArea">
      <summary>
            The plot area of an x-y graph.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.XYPlotDataChangedEventArgs">
      <summary>
            Provides data for the NationalInstruments.UI.IXYGraph.PlotDataChanged event.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XYPlotDataChangedEventArgs.#ctor(NationalInstruments.UI.XYPlot)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.XYPlotDataChangedEventArgs class
            with the specified plot.
            </summary>
      <param name="plot">
            The NationalInstruments.UI.XYPlot on which data is plotted.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYPlotDataChangedEventArgs.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.XYPlotDataChangedEventArgs.Plot">
      <summary>
            Gets the plot on which data is plotted.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.XYPlotDataChangedEventHandler">
      <summary>
            Represents the method that handles the NationalInstruments.UI.IXYGraph.PlotDataChanged
            event of an NationalInstruments.UI.IXYGraph.
            </summary>
      <param name="sender">
            The source of the event.
            </param>
      <param name="e">
            A NationalInstruments.UI.XYPlotDataChangedEventArgs that contains the event
            data.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.XYPlotFillBase">
      <summary>
            Specifies the fill base.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.XYPlotFillBase.XValue">
      <summary>
            The base value is an x value.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.XYPlotFillBase.YValue">
      <summary>
            The base value is a y value.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.XYPlotFillBase.Plot">
      <summary>
            The base value is a plot.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.XYPointAnnotation">
      <summary>
            Represents an annotation that annotates an (x, y) data point.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XYPointAnnotation.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.XYPointAnnotation class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XYPointAnnotation.#ctor(NationalInstruments.UI.XAxis,NationalInstruments.UI.YAxis)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.XYPointAnnotation class with the specified
            NationalInstruments.UI.XAxis and NationalInstruments.UI.YAxis.
            </summary>
      <param name="xAxis">
            The NationalInstruments.UI.XAxis of the annotation.
            </param>
      <param name="yAxis">
            The NationalInstruments.UI.YAxis of the annotation.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYPointAnnotation.#ctor(NationalInstruments.UI.XAxis,NationalInstruments.UI.YAxis,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.XYPointAnnotation class with the specified
            NationalInstruments.UI.XAxis, NationalInstruments.UI.YAxis, NationalInstruments.UI.XYPointAnnotation.XPosition, and NationalInstruments.UI.XYPointAnnotation.YPosition.
            </summary>
      <param name="xAxis">
            The NationalInstruments.UI.XAxis of the annotation.
            </param>
      <param name="yAxis">
            The NationalInstruments.UI.YAxis of the annotation.
            </param>
      <param name="xPosition">
            The NationalInstruments.UI.XYPointAnnotation.XPosition of the annotation.
            </param>
      <param name="yPosition">
            The NationalInstruments.UI.XYPointAnnotation.YPosition of the annotation.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYPointAnnotation.Clone">
      <summary>
            Creates a new object that is a copy of this instance.
            </summary>
      <returns>
            A new object that is a copy of this instance.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYPointAnnotation.SetPosition(System.Double,System.Double)">
      <summary>
            Sets the x and y positions of the point to annotate.
            </summary>
      <param name="xPosition">
            The x position of the point to annotate.
            </param>
      <param name="yPosition">
            The y position of the point to annotate.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYPointAnnotation.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by the NationalInstruments.UI.XYPointAnnotation.
            </summary>
      <param name="disposing">
            If true, this method releases managed and unmanaged resources. If false, this method releases
            only unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYPointAnnotation.OnBeforeDraw(NationalInstruments.UI.BeforeDrawXYPointAnnotationEventArgs)">
      <summary>
            Raises the NationalInstruments.UI.XYPointAnnotation.BeforeDraw event.
            </summary>
      <param name="e">
            A NationalInstruments.UI.BeforeDrawXYPointAnnotationEventArgs that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYPointAnnotation.OnAfterDraw(NationalInstruments.UI.AfterDrawXYPointAnnotationEventArgs)">
      <summary>
            Raises the NationalInstruments.UI.XYPointAnnotation.AfterDraw event.
            </summary>
      <param name="e">
            An NationalInstruments.UI.AfterDrawXYPointAnnotationEventArgs that contains the event data.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.XYPointAnnotation.XPosition">
      <summary>
            Gets or sets the x position of the annotation in data coordinates.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPointAnnotation.YPosition">
      <summary>
            Gets or sets the y position of the annotation in data coordinates.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPointAnnotation.AutoHide">
      <summary>
            Gets or sets a value indicating whether to hide the annotation when the point of interest is not located
            inside the plot area bounds. 
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPointAnnotation.ArrowHeadPosition">
      <summary>
            Gets or sets the position of the arrow head relative to the bounds of the shape.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPointAnnotation.ShapeFillColor">
      <summary>
            Gets or sets the color used to fill the shape.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPointAnnotation.ShapeFillStyle">
      <summary>
            Gets or sets the style used to draw the fill color of the shape.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPointAnnotation.ShapeLineColor">
      <summary>
            Gets or sets the color of the line that outlines the shape.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPointAnnotation.ShapeLineStyle">
      <summary>
            Gets or sets the style of the line that outlines the shape.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPointAnnotation.ShapeLineWidth">
      <summary>
            Gets or sets the width of the line that outlines the shape.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPointAnnotation.ShapeZOrder">
      <summary>
            Gets or sets a value indicating if the shape is drawn above or below all plots.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPointAnnotation.ShapeSize">
      <summary>
            Gets or sets the size of the shape.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPointAnnotation.ShapeStyle">
      <summary>
            Gets or sets the style of the shape.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPointAnnotation.ShapeXOffset">
      <summary>
            Gets or sets the x offset of the shape.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPointAnnotation.ShapeYOffset">
      <summary>
            Gets or sets the y offset of the shape.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPointAnnotation.ShapeRotation">
      <summary>
            Gets or sets the angle at which to rotate the shape.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYPointAnnotation.ShapeVisible">
      <summary>
            Gets or sets a value indicating if the shape is visible. 
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.XYPointAnnotation.BeforeDraw">
      <summary>
            Occurs before the point annotation is drawn.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.XYPointAnnotation.AfterDraw">
      <summary>
            Occurs after the point annotation has been drawn.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.XYPointAnnotationPart">
      <summary>
            Specifies a part of a point annotation.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.XYPointAnnotationPart.Caption">
      <summary>
            The caption of a point annotation.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.XYPointAnnotationPart.Arrow">
      <summary>
            The arrow of a point annotation.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.XYPointAnnotationPart.Shape">
      <summary>
            The shape of a point annotation.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.XYRangeAnnotation">
      <summary>
            Represents an annotation that highlights a range of values.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XYRangeAnnotation.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.XYRangeAnnotation class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.XYRangeAnnotation.#ctor(NationalInstruments.UI.XAxis,NationalInstruments.UI.YAxis)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.XYRangeAnnotation class with the specified
            NationalInstruments.UI.XAxis and NationalInstruments.UI.YAxis.
            </summary>
      <param name="xAxis">
            The NationalInstruments.UI.XAxis of the annotation.
            </param>
      <param name="yAxis">
            The NationalInstruments.UI.YAxis of the annotation.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYRangeAnnotation.#ctor(NationalInstruments.UI.XAxis,NationalInstruments.UI.YAxis,NationalInstruments.UI.Range,NationalInstruments.UI.Range)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.XYRangeAnnotation class with the specified
            NationalInstruments.UI.XAxis, NationalInstruments.UI.YAxis, NationalInstruments.UI.XYRangeAnnotation.XRange, and NationalInstruments.UI.XYRangeAnnotation.YRange.
            </summary>
      <param name="xAxis">
            The NationalInstruments.UI.XAxis of the annotation.
            </param>
      <param name="yAxis">
            The NationalInstruments.UI.YAxis of the annotation.
            </param>
      <param name="xRange">
            The NationalInstruments.UI.XYRangeAnnotation.XRange of the annotation.
            </param>
      <param name="yRange">
            The NationalInstruments.UI.XYRangeAnnotation.YRange of the annotation.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYRangeAnnotation.Clone">
      <summary>
            Creates a new object that is a copy of this instance.
            </summary>
      <returns>
            A new object that is a copy of this instance.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.XYRangeAnnotation.Dispose(System.Boolean)">
      <summary>
            Releases the resources used by the NationalInstruments.UI.XYRangeAnnotation.
            </summary>
      <param name="disposing">
            If true, this method releases managed and unmanaged resources. If false, this method releases
            only unmanaged resources.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYRangeAnnotation.OnBeforeDraw(NationalInstruments.UI.BeforeDrawXYRangeAnnotationEventArgs)">
      <summary>
            Raises the NationalInstruments.UI.XYRangeAnnotation.BeforeDraw event.
            </summary>
      <param name="e">
            A NationalInstruments.UI.BeforeDrawXYRangeAnnotationEventArgs that contains the event data.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.XYRangeAnnotation.OnAfterDraw(NationalInstruments.UI.AfterDrawXYRangeAnnotationEventArgs)">
      <summary>
            Raises the NationalInstruments.UI.XYRangeAnnotation.AfterDraw event.
            </summary>
      <param name="e">
            An NationalInstruments.UI.AfterDrawXYRangeAnnotationEventArgs that contains the event data.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.XYRangeAnnotation.XRange">
      <summary>
            Gets or sets the minimum and maximum x-axis values of the annotation.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYRangeAnnotation.YRange">
      <summary>
            Gets or sets the minimum and maximum y-axis values of the annotation.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYRangeAnnotation.AutoHide">
      <summary>
            Gets or sets a value indicating whether to hide the annotation when the range of interest is not located
            inside the plot area bounds. 
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYRangeAnnotation.RangeFillColor">
      <summary>
            Gets or sets the color used to fill the range area.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYRangeAnnotation.RangeFillStyle">
      <summary>
            Gets or sets the style used to draw the fill color of the range area.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYRangeAnnotation.RangeLineColor">
      <summary>
            Gets or sets the color of the line that borders the range area.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYRangeAnnotation.RangeLineStyle">
      <summary>
            Gets or sets the style of the line that borders the range area.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYRangeAnnotation.RangeLineWidth">
      <summary>
            Gets or sets the width of the line that borders the range area.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYRangeAnnotation.RangeZOrder">
      <summary>
            Gets or sets a value indicating if the range area is drawn above or below all plots.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.XYRangeAnnotation.ArrowHeadAlignment">
      <summary>
            Gets or sets the location of the arrow head in relation to the range bounds.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.XYRangeAnnotation.BeforeDraw">
      <summary>
            Occurs before the range annotation is drawn.
            </summary>
    </member>
    <member name="E:NationalInstruments.UI.XYRangeAnnotation.AfterDraw">
      <summary>
            Occurs after the range annotation has been drawn.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.XYRangeAnnotationPart">
      <summary>
            Specifies a part of a range annotation.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.XYRangeAnnotationPart.Caption">
      <summary>
            The caption of a range annotation.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.XYRangeAnnotationPart.Arrow">
      <summary>
            The arrow of a range annotation.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.XYRangeAnnotationPart.Range">
      <summary>
            The range of a range annotation.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.YAxis">
      <summary>
            Represents the vertical axis on a graph. 
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.YAxis.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.YAxis class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.YAxis.GetSize(NationalInstruments.UI.YAxisPosition)">
      <summary>
            Returns the size of the NationalInstruments.UI.YAxis at the specified position.
            </summary>
      <param name="position">
            A NationalInstruments.UI.YAxisPosition that indicates the position of the NationalInstruments.UI.YAxis
            for which the size is returned.
            </param>
      <returns>
            The System.Drawing.Size of the NationalInstruments.UI.YAxis.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.YAxis.GetBounds(NationalInstruments.UI.YAxisPosition)">
      <summary>
            Returns the bounds of the NationalInstruments.UI.YAxis at the specified position.
            </summary>
      <param name="position">
            A NationalInstruments.UI.YAxisPosition that indicates the position of the NationalInstruments.UI.YAxis
             for which the bounds are returned.
            </param>
      <returns>
            A System.Drawing.Rectangle that represents the bounds of the NationalInstruments.UI.YAxis.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.YAxis.GetBounds(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            Returns the bounds of the NationalInstruments.UI.YAxis relative to a reference rectangle.
            </summary>
      <param name="graphics">
            The System.Drawing.Graphics object that is used to calculate the bounds of the axis.
            </param>
      <param name="referenceRectangle">
            A System.Drawing.Rectangle that provides a reference for the bounds of the NationalInstruments.UI.YAxis.
            </param>
      <returns>
            A System.Drawing.Rectangle that represents the bounds of the NationalInstruments.UI.YAxis.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.YAxis.GetBounds(System.Drawing.Graphics,System.Drawing.Rectangle,NationalInstruments.UI.YAxisPosition)">
      <summary>
            Returns the bounds of the NationalInstruments.UI.YAxis relative to a reference rectangle at the specified position.
            </summary>
      <param name="graphics">
            The System.Drawing.Graphics object that is used to calculate the bounds of the axis.
            </param>
      <param name="referenceRectangle">
            A System.Drawing.Rectangle that provides a reference for the bounds of the NationalInstruments.UI.YAxis.
            </param>
      <param name="position">
            A NationalInstruments.UI.YAxisPosition that indicates the position of the NationalInstruments.UI.YAxis
             for which the bounds are returned.
            </param>
      <returns>
            A System.Drawing.Rectangle that represents the bounds of the NationalInstruments.UI.YAxis.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.YAxis.Draw(NationalInstruments.UI.ComponentDrawArgs,NationalInstruments.UI.YAxisPosition)">
      <summary>
            Draws the NationalInstruments.UI.YAxis with the specified axis position.
            </summary>
      <param name="args">
            A NationalInstruments.UI.ComponentDrawArgs that contains the 
            drawing data.
            </param>
      <param name="position">
            The position of the axis.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.YAxis.Clone">
      <summary>
            Creates a new object that is a deep copy of this instance.
            </summary>
      <returns>
            A new object that is a deep copy of this instance.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.YAxis.CaptionPosition">
      <summary>
            Gets or sets the position of the caption that is displayed for the axis.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.YAxis.Position">
      <summary>
            Gets or sets the position of the axis.
            </summary>
    </member>
    <member name="P:NationalInstruments.UI.YAxis.MinimumWidth">
      <summary>
            Gets or sets the minimum width required by NationalInstruments.UI.YAxis,
            allowing you to customize the NationalInstruments.UI.YAxis width. 
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.YAxisCollection">
      <summary>
            Represents a strongly typed collection of NationalInstruments.UI.YAxis objects.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.YAxisCollection.#ctor">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.YAxisCollection class.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.YAxisCollection.#ctor(NationalInstruments.UI.YAxis[])">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.YAxisCollection class
            from an array of NationalInstruments.UI.YAxis objects.
            </summary>
      <param name="item">
            Array of NationalInstruments.UI.YAxis objects to copy.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.YAxisCollection.#ctor(NationalInstruments.UI.YAxisCollection)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.YAxisCollection class
            from an existing collection.
            </summary>
      <param name="item">
            The NationalInstruments.UI.YAxisCollection to copy.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.YAxisCollection.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.YAxisCollection.Add(NationalInstruments.UI.YAxis)">
      <summary>
            Adds an item to end of the collection.
            </summary>
      <param name="item">
            Item to add to the collection.
            </param>
      <returns>
            The array index of the added item.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.YAxisCollection.AddRange(NationalInstruments.UI.YAxis[])">
      <summary>
            Adds an array of NationalInstruments.UI.YAxis objects to the end of the collection.
            </summary>
      <param name="item">
            Array of NationalInstruments.UI.YAxis objects to add to the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.YAxisCollection.AddRange(NationalInstruments.UI.YAxisCollection)">
      <summary>
            Adds a collection of NationalInstruments.UI.YAxis objects to the end of the collection.
            </summary>
      <param name="item">
            Collection of NationalInstruments.UI.YAxis objects to add to the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.YAxisCollection.Clear">
      <summary>
            Removes all items from the collection.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.YAxisCollection.Contains(NationalInstruments.UI.YAxis)">
      <summary>
            Determines if the specified element is in the collection.
            </summary>
      <param name="item">Item to locate in the collection.</param>
      <returns>true if the collection contains <paramref name="item"></paramref>.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.YAxisCollection.CopyTo(NationalInstruments.UI.YAxis[],System.Int32)">
      <summary>
            Copies the collection to an array or a portion of an array.
            </summary>
      <param name="array">
            Destination array for the collection.
            </param>
      <param name="index">
            The index in the target array at which you want to begin copying the collection to.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.YAxisCollection.IndexOf(NationalInstruments.UI.YAxis)">
      <summary>
            Returns the zero-based index of the first occurrence of an item in the collection.
            </summary>
      <param name="item">
            Item to search for.
            </param>
      <returns>
            Index of the item. If the item is not found, returns -1.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.YAxisCollection.Insert(System.Int32,NationalInstruments.UI.YAxis)">
      <summary>
            Inserts an item into the collection at the specified index.
            </summary>
      <param name="index">
            Index to insert the item at.
            </param>
      <param name="item">
            Item to insert into the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.YAxisCollection.GetEnumerator">
      <summary>
            Returns an enumerator that you can use to iterate through the collection.
            </summary>
      <returns>
            The enumerator for the collection.
            </returns>
    </member>
    <member name="M:NationalInstruments.UI.YAxisCollection.Remove(NationalInstruments.UI.YAxis)">
      <summary>
            Removes the first occurrence of the specified item.
            </summary>
      <param name="item">
            Item to remove from the collection.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.YAxisCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the item at the specified index.
            </summary>
      <param name="index">
            The zero-based index of the item to remove.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.YAxisCollection.Item(System.Int32)">
      <summary>
            Gets or sets NationalInstruments.UI.YAxis at the specified index. In Visual C#, this property 
            is the indexer.
            </summary>
      <param name="index">
            The zero-based index of the entry to locate in the collection.
            </param>
    </member>
    <member name="P:NationalInstruments.UI.YAxisCollection.Count">
      <summary>
            Gets the number of elements in the NationalInstruments.UI.YAxisCollection.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.YAxisEventArgs">
      <summary>
            Provides data for the 
            NationalInstruments.UI.IXYGraph.YAxisRangeChanged event.
            </summary>
    </member>
    <member name="M:NationalInstruments.UI.YAxisEventArgs.#ctor(NationalInstruments.UI.YAxis)">
      <summary>
            Initializes a new instance of the NationalInstruments.UI.YAxisEventArgs class
            with the specified y-axis.
            </summary>
      <param name="yAxis">
            The NationalInstruments.UI.YAxis on which the change occurred.
            </param>
    </member>
    <member name="M:NationalInstruments.UI.YAxisEventArgs.ToString">
      <summary>
            Returns a string representation of the object.
            </summary>
      <returns>
            A string representation of the object.
            </returns>
    </member>
    <member name="P:NationalInstruments.UI.YAxisEventArgs.YAxis">
      <summary>
            Gets the y-axis on which the change occurred.
            </summary>
    </member>
    <member name="T:NationalInstruments.UI.YAxisEventHandler">
      <summary>
            Represents the method that handles the 
            NationalInstruments.UI.IXYGraph.YAxisRangeChanged event.
            </summary>
      <param name="sender">
            The source of the event.
            </param>
      <param name="e">
            The NationalInstruments.UI.YAxisEventArgs that contains the event
            data.
            </param>
    </member>
    <member name="T:NationalInstruments.UI.YAxisPosition">
      <summary>
            Specifies the position of a y-axis with respect to the plot area.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.YAxisPosition.Left">
      <summary>
            The y-axis is positioned at the left of the plot area.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.YAxisPosition.Right">
      <summary>
            The y-axis is positioned at the right of the plot area.
            </summary>
    </member>
    <member name="F:NationalInstruments.UI.YAxisPosition.LeftRight">
      <summary>
            The y-axis is positioned at the left and right of the plot area.
            </summary>
    </member>
  </members>
</doc>