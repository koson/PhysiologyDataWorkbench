//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1318
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RRLab.PhysiologyWorkbench.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "9.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Gold")]
        public global::System.Drawing.Color AccentColor {
            get {
                return ((global::System.Drawing.Color)(this["AccentColor"]));
            }
            set {
                this["AccentColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Cornsilk")]
        public global::System.Drawing.Color AccentBackgroundColor {
            get {
                return ((global::System.Drawing.Color)(this["AccentBackgroundColor"]));
            }
            set {
                this["AccentBackgroundColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool AutoStartTestPulse {
            get {
                return ((bool)(this["AutoStartTestPulse"]));
            }
            set {
                this["AutoStartTestPulse"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("LightCoral")]
        public global::System.Drawing.Color WarningColor {
            get {
                return ((global::System.Drawing.Color)(this["WarningColor"]));
            }
            set {
                this["WarningColor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("00:10:00")]
        public global::System.TimeSpan BreakInWarningTime {
            get {
                return ((global::System.TimeSpan)(this["BreakInWarningTime"]));
            }
            set {
                this["BreakInWarningTime"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("localhost")]
        public string MySqlServer {
            get {
                return ((string)(this["MySqlServer"]));
            }
            set {
                this["MySqlServer"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString)]
        [global::System.Configuration.DefaultSettingValueAttribute("Data Source=.\\SQLEXPRESS;AttachDbFilename=|DataDirectory|\\PhysiologyDatabase.mdf;" +
            "Integrated Security=True;User Instance=True")]
        public string PhysiologyDatabaseConnectionString {
            get {
                return ((string)(this["PhysiologyDatabaseConnectionString"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString)]
        [global::System.Configuration.DefaultSettingValueAttribute("Server=localhost;User Id=shelms;Password=xxx;Persist Security Info=True;Database=" +
            "physiology_data")]
        public string PhysiologyDataConnectionString {
            get {
                return ((string)(this["PhysiologyDataConnectionString"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("20")]
        public float MinimumCellCapacitance {
            get {
                return ((float)(this["MinimumCellCapacitance"]));
            }
            set {
                this["MinimumCellCapacitance"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("-20")]
        public float MinimumMembranePotential {
            get {
                return ((float)(this["MinimumMembranePotential"]));
            }
            set {
                this["MinimumMembranePotential"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public float MinimumSealResistance {
            get {
                return ((float)(this["MinimumSealResistance"]));
            }
            set {
                this["MinimumSealResistance"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool UseElectrophysiologyValidation {
            get {
                return ((bool)(this["UseElectrophysiologyValidation"]));
            }
            set {
                this["UseElectrophysiologyValidation"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("DynamicRange")]
        public global::RRLab.PhysiologyData.GUI.RecordingDataGraphControl.AxisMode TestPulseAxisMode {
            get {
                return ((global::RRLab.PhysiologyData.GUI.RecordingDataGraphControl.AxisMode)(this["TestPulseAxisMode"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Gray")]
        public global::System.Drawing.Color GraphDarkBackColor {
            get {
                return ((global::System.Drawing.Color)(this["GraphDarkBackColor"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool UseDarkRoomStyle {
            get {
                return ((bool)(this["UseDarkRoomStyle"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool TestPulseLegendVisible {
            get {
                return ((bool)(this["TestPulseLegendVisible"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool TestPulseSidebarVisible {
            get {
                return ((bool)(this["TestPulseSidebarVisible"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool TestPulseTitleVisible {
            get {
                return ((bool)(this["TestPulseTitleVisible"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("HotkeyManagerPersistence.dat")]
        public string HotkeyManagerPersistenceFilePath {
            get {
                return ((string)(this["HotkeyManagerPersistenceFilePath"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("DeviceManagerPersistence.dat")]
        public string DeviceManagerPersistenceFilePath {
            get {
                return ((string)(this["DeviceManagerPersistenceFilePath"]));
            }
        }
    }
}
